services:
  api:
    build:
      dockerfile: ./cmd/api/Dockerfile
      context: .
    develop:
      watch:
        - action: rebuild
          path: ./cmd/api/
        - action: rebuild
          path: ./internal/
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      API_DB_DSN: "postgres://postgres:password@postgres:5432/postgres"
    env_file:
      - .env
    ports:
      - "3001:3001"
    tty: true
  console:
    command: bash -c "npm i --force && npm run dev"
    env_file:
      - .env
    expose:
      - 3000
    image: node:22.11.0
    ports:
      - "3000:3000"
    tty: true
    volumes:
      - ./console:/console:cached
    working_dir: /console
  kms:
    environment:
      KMS_REGION: ${AWS_DEFAULT_REGION}
      PORT: 4566
    expose:
      - 4566
    image: nsmithuk/local-kms:latest
    ports:
      - 4566:4566
      - 4599:4566
    volumes:
      - ./.local/kms/data/:/data/
      - ./.local/kms/seed.yaml:/init/seed.yaml
  nginx:
    image: nginx:1-alpine
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - api
    volumes:
      - ./.local/nginx:/etc/nginx/conf.d
  postgres:
    image: postgres:15.8
    environment:
      POSTGRES_PASSWORD: "password"
    expose:
      - 5432
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "PGPASSWORD=password pg_isready -U postgres -d postgres"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    volumes:
      - ./.local/postgres:/var/lib/postgresql/data
      - ./.local/tmp:/tmp/local
  s3:
    image: adobe/s3mock:latest
    environment:
      - initialBuckets=tesseral-user-content
      - root=containers3root
    ports:
      - 9090:9090
    volumes:
      - ./.local/s3:/containers3root
  ses:
    build:
      dockerfile: ./.local/ses/Dockerfile
      context: .
    environment:
      AWS_SES_ACCOUNT: ${AWS_SES_ACCOUNT}
      SMTP_TRANSPORT: ${SMTP_TRANSPORT}
    working_dir: /srv/www/dist
    ports:
      - 8005:8005
    volumes:
      - ./.local/ses/output:/output
  vault-ui:
    command: bash -c "npm i --force && npm run dev"
    environment:
      UI_BUILD_IS_DEV: 1
    expose:
      - 3002
    image: node:22.11.0
    ports:
      - "3002:3002"
    tty: true
    volumes:
      - ./vault-ui:/vault-ui:cached
    working_dir: /vault-ui
