services:
  api:
    build:
      dockerfile: ./cmd/api/Dockerfile
      context: .
    develop:
      watch:
        - action: rebuild
          path: ./cmd/api/
        - action: rebuild
          path: ./internal/
    environment:
      API_DB: "postgres://postgres:password@postgres:5432/postgres"
    env_file:
      - .env
    ports:
      - "3001:3001"
    tty: true
  app:
    command: bash -c "npm i --force && npm run dev"
    env_file:
      - .env
    expose:
      - 3000
    image: node:22.11.0
    ports:
      - "3000:3000"
    tty: true
    volumes:
      - ./app:/app:cached
    working_dir: /app
  kms:
    environment:
      KMS_REGION: ${AWS_DEFAULT_REGION}
      PORT: 4566
    expose:
      - 4566
    image: nsmithuk/local-kms:latest
    ports:
      - 4566:4566
      - 4599:4566
    volumes:
      - ./.local/kms/data/:/data/
      - ./.local/kms/seed.yaml:/init/seed.yaml
  nginx:
    image: nginx:1-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./.local/nginx:/etc/nginx/conf.d
  postgres:
    environment:
      POSTGRES_PASSWORD: "password"
    expose:
      - 5432
    image: postgres:15.8
    ports:
      - "5432:5432"
    volumes:
      - ./.local/postgres:/var/lib/postgresql/data
  s3:
    image: adobe/s3mock:latest
    environment:
      - initialBuckets=tesseral-user-content
      - root=containers3root
    ports:
      - 9090:9090
    volumes:
      - ./.local/s3:/containers3root
  ui:
    command: bash -c "npm i --force && npm run dev"
    environment:
      UI_BUILD_IS_DEV: 1
    expose:
      - 3002
    image: node:22.11.0
    ports:
      - "3002:3002"
    tty: true
    volumes:
      - ./ui:/ui:cached
    working_dir: /ui
