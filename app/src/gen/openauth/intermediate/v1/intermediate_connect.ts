// @generated by protoc-gen-connect-es v1.6.1 with parameter "target=ts"
// @generated from file openauth/intermediate/v1/intermediate.proto (package openauth.intermediate.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { CreateOrganizationRequest, CreateOrganizationResponse, ListOrganizationsRequest, ListOrganizationsResponse, SignInWithEmailRequest, SignInWithEmailResponse, WhoamiRequest, WhoamiResponse } from "./intermediate_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service openauth.intermediate.v1.IntermediateService
 */
export const IntermediateService = {
  typeName: "openauth.intermediate.v1.IntermediateService",
  methods: {
    /**
     * @generated from rpc openauth.intermediate.v1.IntermediateService.Whoami
     */
    whoami: {
      name: "Whoami",
      I: WhoamiRequest,
      O: WhoamiResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Creates a new organization.
     *
     * @generated from rpc openauth.intermediate.v1.IntermediateService.CreateOrganization
     */
    createOrganization: {
      name: "CreateOrganization",
      I: CreateOrganizationRequest,
      O: CreateOrganizationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Gets a list of organizations.
     *
     * @generated from rpc openauth.intermediate.v1.IntermediateService.ListOrganizations
     */
    listOrganizations: {
      name: "ListOrganizations",
      I: ListOrganizationsRequest,
      O: ListOrganizationsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Creates a new intermediate session or session and cookies the requester.
     *
     * @generated from rpc openauth.intermediate.v1.IntermediateService.SignInWithEmail
     */
    signInWithEmail: {
      name: "SignInWithEmail",
      I: SignInWithEmailRequest,
      O: SignInWithEmailResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

