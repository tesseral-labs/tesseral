// @generated by protoc-gen-connect-query v2.0.0 with parameter "target=ts"
// @generated from file openauth/backend/v1/backend.proto (package openauth.backend.v1, syntax proto3)
/* eslint-disable */

import { BackendService } from "./backend_pb";

/**
 * Creates an organization.
 *
 * @generated from rpc openauth.backend.v1.BackendService.CreateOrganization
 */
export const createOrganization = BackendService.method.createOrganization;

/**
 * Gets an organization.
 *
 * @generated from rpc openauth.backend.v1.BackendService.GetOrganization
 */
export const getOrganization = BackendService.method.getOrganization;

/**
 * Gets a list of organizations.
 *
 * @generated from rpc openauth.backend.v1.BackendService.ListOrganizations
 */
export const listOrganizations = BackendService.method.listOrganizations;

/**
 * Updates an organization.
 *
 * @generated from rpc openauth.backend.v1.BackendService.UpdateOrganization
 */
export const updateOrganization = BackendService.method.updateOrganization;

/**
 * Creates a project.
 *
 * @generated from rpc openauth.backend.v1.BackendService.CreateProject
 */
export const createProject = BackendService.method.createProject;

/**
 * Gets a project.
 *
 * @generated from rpc openauth.backend.v1.BackendService.GetProject
 */
export const getProject = BackendService.method.getProject;

/**
 * Gets a list of projects.
 *
 * @generated from rpc openauth.backend.v1.BackendService.ListProjects
 */
export const listProjects = BackendService.method.listProjects;

/**
 * Updates a project.
 *
 * @generated from rpc openauth.backend.v1.BackendService.UpdateProject
 */
export const updateProject = BackendService.method.updateProject;

/**
 * Creates a user.
 *
 * @generated from rpc openauth.backend.v1.BackendService.CreateUser
 */
export const createUser = BackendService.method.createUser;

/**
 * Gets a user.
 *
 * @generated from rpc openauth.backend.v1.BackendService.GetUser
 */
export const getUser = BackendService.method.getUser;

/**
 * Gets a list of users.
 *
 * @generated from rpc openauth.backend.v1.BackendService.ListUsers
 */
export const listUsers = BackendService.method.listUsers;

/**
 * Updates a user.
 *
 * @generated from rpc openauth.backend.v1.BackendService.UpdateUser
 */
export const updateUser = BackendService.method.updateUser;

/**
 * Updates a user's password.
 *
 * @generated from rpc openauth.backend.v1.BackendService.UpdateUserPassword
 */
export const updateUserPassword = BackendService.method.updateUserPassword;

/**
 * @generated from rpc openauth.backend.v1.BackendService.CreateProjectAPIKey
 */
export const createProjectAPIKey = BackendService.method.createProjectAPIKey;
