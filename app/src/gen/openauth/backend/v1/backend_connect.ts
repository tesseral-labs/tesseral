// @generated by protoc-gen-connect-es v1.6.1 with parameter "target=ts"
// @generated from file openauth/backend/v1/backend.proto (package openauth.backend.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { CreateOrganizationRequest, CreateProjectAPIKeyRequest, CreateProjectAPIKeyResponse, CreateProjectRequest, CreateUserRequest, GetOrganizationRequest, GetProjectRequest, GetUserRequest, ListOrganizationsRequest, ListOrganizationsResponse, ListProjectsRequest, ListProjectsResponse, ListUsersRequest, ListUsersResponse, Organization, Project, UpdateOrganizationRequest, UpdateProjectRequest, UpdateUserPasswordRequest, UpdateUserRequest, User } from "./backend_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service openauth.backend.v1.BackendService
 */
export const BackendService = {
  typeName: "openauth.backend.v1.BackendService",
  methods: {
    /**
     * Creates an organization.
     *
     * @generated from rpc openauth.backend.v1.BackendService.CreateOrganization
     */
    createOrganization: {
      name: "CreateOrganization",
      I: CreateOrganizationRequest,
      O: Organization,
      kind: MethodKind.Unary,
    },
    /**
     * Gets an organization.
     *
     * @generated from rpc openauth.backend.v1.BackendService.GetOrganization
     */
    getOrganization: {
      name: "GetOrganization",
      I: GetOrganizationRequest,
      O: Organization,
      kind: MethodKind.Unary,
    },
    /**
     * Gets a list of organizations.
     *
     * @generated from rpc openauth.backend.v1.BackendService.ListOrganizations
     */
    listOrganizations: {
      name: "ListOrganizations",
      I: ListOrganizationsRequest,
      O: ListOrganizationsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Updates an organization.
     *
     * @generated from rpc openauth.backend.v1.BackendService.UpdateOrganization
     */
    updateOrganization: {
      name: "UpdateOrganization",
      I: UpdateOrganizationRequest,
      O: Organization,
      kind: MethodKind.Unary,
    },
    /**
     * Creates a project.
     *
     * @generated from rpc openauth.backend.v1.BackendService.CreateProject
     */
    createProject: {
      name: "CreateProject",
      I: CreateProjectRequest,
      O: Project,
      kind: MethodKind.Unary,
    },
    /**
     * Gets a project.
     *
     * @generated from rpc openauth.backend.v1.BackendService.GetProject
     */
    getProject: {
      name: "GetProject",
      I: GetProjectRequest,
      O: Project,
      kind: MethodKind.Unary,
    },
    /**
     * Gets a list of projects.
     *
     * @generated from rpc openauth.backend.v1.BackendService.ListProjects
     */
    listProjects: {
      name: "ListProjects",
      I: ListProjectsRequest,
      O: ListProjectsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Updates a project.
     *
     * @generated from rpc openauth.backend.v1.BackendService.UpdateProject
     */
    updateProject: {
      name: "UpdateProject",
      I: UpdateProjectRequest,
      O: Project,
      kind: MethodKind.Unary,
    },
    /**
     * Creates a user.
     *
     * @generated from rpc openauth.backend.v1.BackendService.CreateUser
     */
    createUser: {
      name: "CreateUser",
      I: CreateUserRequest,
      O: User,
      kind: MethodKind.Unary,
    },
    /**
     * Gets a user.
     *
     * @generated from rpc openauth.backend.v1.BackendService.GetUser
     */
    getUser: {
      name: "GetUser",
      I: GetUserRequest,
      O: User,
      kind: MethodKind.Unary,
    },
    /**
     * Gets a list of users.
     *
     * @generated from rpc openauth.backend.v1.BackendService.ListUsers
     */
    listUsers: {
      name: "ListUsers",
      I: ListUsersRequest,
      O: ListUsersResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Updates a user.
     *
     * @generated from rpc openauth.backend.v1.BackendService.UpdateUser
     */
    updateUser: {
      name: "UpdateUser",
      I: UpdateUserRequest,
      O: User,
      kind: MethodKind.Unary,
    },
    /**
     * Updates a user's password.
     *
     * @generated from rpc openauth.backend.v1.BackendService.UpdateUserPassword
     */
    updateUserPassword: {
      name: "UpdateUserPassword",
      I: UpdateUserPasswordRequest,
      O: User,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc openauth.backend.v1.BackendService.CreateProjectAPIKey
     */
    createProjectAPIKey: {
      name: "CreateProjectAPIKey",
      I: CreateProjectAPIKeyRequest,
      O: CreateProjectAPIKeyResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

