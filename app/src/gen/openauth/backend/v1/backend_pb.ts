// @generated by protoc-gen-es v2.2.3 with parameter "target=ts"
// @generated from file openauth/backend/v1/backend.proto (package openauth.backend.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import { file_google_api_annotations } from "../../../google/api/annotations_pb";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_struct, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { JsonObject, Message } from "@bufbuild/protobuf";

/**
 * Describes the file openauth/backend/v1/backend.proto.
 */
export const file_openauth_backend_v1_backend: GenFile = /*@__PURE__*/
  fileDesc("CiFvcGVuYXV0aC9iYWNrZW5kL3YxL2JhY2tlbmQucHJvdG8SE29wZW5hdXRoLmJhY2tlbmQudjEiVAoZQ3JlYXRlT3JnYW5pemF0aW9uUmVxdWVzdBI3Cgxvcmdhbml6YXRpb24YASABKAsyIS5vcGVuYXV0aC5iYWNrZW5kLnYxLk9yZ2FuaXphdGlvbiJbChRDcmVhdGVQcm9qZWN0UmVxdWVzdBItCgdwcm9qZWN0GAEgASgLMhwub3BlbmF1dGguYmFja2VuZC52MS5Qcm9qZWN0EhQKDGRpc3BsYXlfbmFtZRgCIAEoCSI8ChFDcmVhdGVVc2VyUmVxdWVzdBInCgR1c2VyGAEgASgLMhkub3BlbmF1dGguYmFja2VuZC52MS5Vc2VyIiQKFkdldE9yZ2FuaXphdGlvblJlcXVlc3QSCgoCaWQYASABKAkiHwoRR2V0UHJvamVjdFJlcXVlc3QSCgoCaWQYASABKAkiHAoOR2V0VXNlclJlcXVlc3QSCgoCaWQYASABKAkiQgoYTGlzdE9yZ2FuaXphdGlvbnNSZXF1ZXN0EhIKCnByb2plY3RfaWQYASABKAkSEgoKcGFnZV90b2tlbhgCIAEoCSJuChlMaXN0T3JnYW5pemF0aW9uc1Jlc3BvbnNlEjgKDW9yZ2FuaXphdGlvbnMYASADKAsyIS5vcGVuYXV0aC5iYWNrZW5kLnYxLk9yZ2FuaXphdGlvbhIXCg9uZXh0X3BhZ2VfdG9rZW4YAiABKAkiKQoTTGlzdFByb2plY3RzUmVxdWVzdBISCgpwYWdlX3Rva2VuGAEgASgJIl8KFExpc3RQcm9qZWN0c1Jlc3BvbnNlEi4KCHByb2plY3RzGAEgAygLMhwub3BlbmF1dGguYmFja2VuZC52MS5Qcm9qZWN0EhcKD25leHRfcGFnZV90b2tlbhgCIAEoCSI/ChBMaXN0VXNlcnNSZXF1ZXN0EhcKD29yZ2FuaXphdGlvbl9pZBgBIAEoCRISCgpwYWdlX3Rva2VuGAIgASgJIlYKEUxpc3RVc2Vyc1Jlc3BvbnNlEigKBXVzZXJzGAEgAygLMhkub3BlbmF1dGguYmFja2VuZC52MS5Vc2VyEhcKD25leHRfcGFnZV90b2tlbhgCIAEoCSJgChlVcGRhdGVPcmdhbml6YXRpb25SZXF1ZXN0EgoKAmlkGAEgASgJEjcKDG9yZ2FuaXphdGlvbhgCIAEoCzIhLm9wZW5hdXRoLmJhY2tlbmQudjEuT3JnYW5pemF0aW9uIlEKFFVwZGF0ZVByb2plY3RSZXF1ZXN0EgoKAmlkGAEgASgJEi0KB3Byb2plY3QYAiABKAsyHC5vcGVuYXV0aC5iYWNrZW5kLnYxLlByb2plY3QiOQoZVXBkYXRlVXNlclBhc3N3b3JkUmVxdWVzdBIKCgJpZBgBIAEoCRIQCghwYXNzd29yZBgCIAEoCSJIChFVcGRhdGVVc2VyUmVxdWVzdBIKCgJpZBgBIAEoCRInCgR1c2VyGAIgASgLMhkub3BlbmF1dGguYmFja2VuZC52MS5Vc2VyIj0KElVwZGF0ZVVzZXJSZXNwb25zZRInCgR1c2VyGAEgASgLMhkub3BlbmF1dGguYmFja2VuZC52MS5Vc2VyIocBCg1Qcm9qZWN0QVBJS2V5EgoKAmlkGAEgASgJEhIKCnByb2plY3RfaWQYAiABKAkSLwoLY3JlYXRlX3RpbWUYAyABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEg8KB3Jldm9rZWQYBCABKAgSFAoMc2VjcmV0X3Rva2VuGAUgASgJIlkKGkNyZWF0ZVByb2plY3RBUElLZXlSZXF1ZXN0EjsKD3Byb2plY3RfYXBpX2tleRgBIAEoCzIiLm9wZW5hdXRoLmJhY2tlbmQudjEuUHJvamVjdEFQSUtleSJaChtDcmVhdGVQcm9qZWN0QVBJS2V5UmVzcG9uc2USOwoPcHJvamVjdF9hcGlfa2V5GAEgASgLMiIub3BlbmF1dGguYmFja2VuZC52MS5Qcm9qZWN0QVBJS2V5IosCCgxPcmdhbml6YXRpb24SCgoCaWQYASABKAkSEgoKcHJvamVjdF9pZBgCIAEoCRIUCgxkaXNwbGF5X25hbWUYAyABKAkSLQolb3ZlcnJpZGVfbG9nX2luX3dpdGhfcGFzc3dvcmRfZW5hYmxlZBgEIAEoCBIrCiNvdmVycmlkZV9sb2dfaW5fd2l0aF9nb29nbGVfZW5hYmxlZBgFIAEoCBIuCiZvdmVycmlkZV9sb2dfaW5fd2l0aF9taWNyb3NvZnRfZW5hYmxlZBgGIAEoCBIcChRnb29nbGVfaG9zdGVkX2RvbWFpbhgHIAEoCRIbChNtaWNyb3NvZnRfdGVuYW50X2lkGAggASgJIq0CCgdQcm9qZWN0EgoKAmlkGAEgASgJEhcKD29yZ2FuaXphdGlvbl9pZBgCIAEoCRIkChxsb2dfaW5fd2l0aF9wYXNzd29yZF9lbmFibGVkGAMgASgIEiIKGmxvZ19pbl93aXRoX2dvb2dsZV9lbmFibGVkGAQgASgIEiUKHWxvZ19pbl93aXRoX21pY3Jvc29mdF9lbmFibGVkGAUgASgIEh4KFmdvb2dsZV9vYXV0aF9jbGllbnRfaWQYBiABKAkSIgoaZ29vZ2xlX29hdXRoX2NsaWVudF9zZWNyZXQYByABKAkSIQoZbWljcm9zb2Z0X29hdXRoX2NsaWVudF9pZBgIIAEoCRIlCh1taWNyb3NvZnRfb2F1dGhfY2xpZW50X3NlY3JldBgJIAEoCSJkChFTZXNzaW9uU2lnbmluZ0tleRIKCgJpZBgBIAEoCRISCgpwcm9qZWN0X2lkGAIgASgJEi8KDnB1YmxpY19rZXlfandrGAMgASgLMhcuZ29vZ2xlLnByb3RvYnVmLlN0cnVjdCKGAQoEVXNlchIKCgJpZBgBIAEoCRIXCg9vcmdhbml6YXRpb25faWQYAiABKAkSDQoFZW1haWwYAyABKAkSFwoPcGFzc3dvcmRfYmNyeXB0GAQgASgJEhYKDmdvb2dsZV91c2VyX2lkGAUgASgJEhkKEW1pY3Jvc29mdF91c2VyX2lkGAYgASgJIpkBCgdTZXNzaW9uEgoKAmlkGAEgASgJEg8KB3VzZXJfaWQYAiABKAkSLwoLY3JlYXRlX3RpbWUYAyABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEi8KC2V4cGlyZV90aW1lGAQgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIPCgdyZXZva2VkGAUgASgIMroOCg5CYWNrZW5kU2VydmljZRKNAQoSQ3JlYXRlT3JnYW5pemF0aW9uEi4ub3BlbmF1dGguYmFja2VuZC52MS5DcmVhdGVPcmdhbml6YXRpb25SZXF1ZXN0GiEub3BlbmF1dGguYmFja2VuZC52MS5Pcmdhbml6YXRpb24iJILT5JMCHjoBKiIZL2JhY2tlbmQvdjEvb3JnYW5pemF0aW9ucxKJAQoPR2V0T3JnYW5pemF0aW9uEisub3BlbmF1dGguYmFja2VuZC52MS5HZXRPcmdhbml6YXRpb25SZXF1ZXN0GiEub3BlbmF1dGguYmFja2VuZC52MS5Pcmdhbml6YXRpb24iJoLT5JMCIBIeL2JhY2tlbmQvdjEvb3JnYW5pemF0aW9ucy97aWR9EpUBChFMaXN0T3JnYW5pemF0aW9ucxItLm9wZW5hdXRoLmJhY2tlbmQudjEuTGlzdE9yZ2FuaXphdGlvbnNSZXF1ZXN0Gi4ub3BlbmF1dGguYmFja2VuZC52MS5MaXN0T3JnYW5pemF0aW9uc1Jlc3BvbnNlIiGC0+STAhsSGS9iYWNrZW5kL3YxL29yZ2FuaXphdGlvbnMSnQEKElVwZGF0ZU9yZ2FuaXphdGlvbhIuLm9wZW5hdXRoLmJhY2tlbmQudjEuVXBkYXRlT3JnYW5pemF0aW9uUmVxdWVzdBohLm9wZW5hdXRoLmJhY2tlbmQudjEuT3JnYW5pemF0aW9uIjSC0+STAi46DG9yZ2FuaXphdGlvbjIeL2JhY2tlbmQvdjEvb3JnYW5pemF0aW9ucy97aWR9En8KDUNyZWF0ZVByb2plY3QSKS5vcGVuYXV0aC5iYWNrZW5kLnYxLkNyZWF0ZVByb2plY3RSZXF1ZXN0Ghwub3BlbmF1dGguYmFja2VuZC52MS5Qcm9qZWN0IiWC0+STAh86B3Byb2plY3QiFC9iYWNrZW5kL3YxL3Byb2plY3RzEnUKCkdldFByb2plY3QSJi5vcGVuYXV0aC5iYWNrZW5kLnYxLkdldFByb2plY3RSZXF1ZXN0Ghwub3BlbmF1dGguYmFja2VuZC52MS5Qcm9qZWN0IiGC0+STAhsSGS9iYWNrZW5kL3YxL3Byb2plY3RzL3tpZH0SgQEKDExpc3RQcm9qZWN0cxIoLm9wZW5hdXRoLmJhY2tlbmQudjEuTGlzdFByb2plY3RzUmVxdWVzdBopLm9wZW5hdXRoLmJhY2tlbmQudjEuTGlzdFByb2plY3RzUmVzcG9uc2UiHILT5JMCFhIUL2JhY2tlbmQvdjEvcHJvamVjdHMShAEKDVVwZGF0ZVByb2plY3QSKS5vcGVuYXV0aC5iYWNrZW5kLnYxLlVwZGF0ZVByb2plY3RSZXF1ZXN0Ghwub3BlbmF1dGguYmFja2VuZC52MS5Qcm9qZWN0IiqC0+STAiQ6B3Byb2plY3QyGS9iYWNrZW5kL3YxL3Byb2plY3RzL3tpZH0ScAoKQ3JlYXRlVXNlchImLm9wZW5hdXRoLmJhY2tlbmQudjEuQ3JlYXRlVXNlclJlcXVlc3QaGS5vcGVuYXV0aC5iYWNrZW5kLnYxLlVzZXIiH4LT5JMCGToEdXNlciIRL2JhY2tlbmQvdjEvdXNlcnMSaQoHR2V0VXNlchIjLm9wZW5hdXRoLmJhY2tlbmQudjEuR2V0VXNlclJlcXVlc3QaGS5vcGVuYXV0aC5iYWNrZW5kLnYxLlVzZXIiHoLT5JMCGBIWL2JhY2tlbmQvdjEvdXNlcnMve2lkfRJ1CglMaXN0VXNlcnMSJS5vcGVuYXV0aC5iYWNrZW5kLnYxLkxpc3RVc2Vyc1JlcXVlc3QaJi5vcGVuYXV0aC5iYWNrZW5kLnYxLkxpc3RVc2Vyc1Jlc3BvbnNlIhmC0+STAhMSES9iYWNrZW5kL3YxL3VzZXJzEnUKClVwZGF0ZVVzZXISJi5vcGVuYXV0aC5iYWNrZW5kLnYxLlVwZGF0ZVVzZXJSZXF1ZXN0Ghkub3BlbmF1dGguYmFja2VuZC52MS5Vc2VyIiSC0+STAh46BHVzZXIyFi9iYWNrZW5kL3YxL3VzZXJzL3tpZH0SiwEKElVwZGF0ZVVzZXJQYXNzd29yZBIuLm9wZW5hdXRoLmJhY2tlbmQudjEuVXBkYXRlVXNlclBhc3N3b3JkUmVxdWVzdBoZLm9wZW5hdXRoLmJhY2tlbmQudjEuVXNlciIqgtPkkwIkOgEqMh8vYmFja2VuZC92MS91c2Vycy97aWR9L3Bhc3N3b3JkEngKE0NyZWF0ZVByb2plY3RBUElLZXkSLy5vcGVuYXV0aC5iYWNrZW5kLnYxLkNyZWF0ZVByb2plY3RBUElLZXlSZXF1ZXN0GjAub3BlbmF1dGguYmFja2VuZC52MS5DcmVhdGVQcm9qZWN0QVBJS2V5UmVzcG9uc2VC5gEKF2NvbS5vcGVuYXV0aC5iYWNrZW5kLnYxQgxCYWNrZW5kUHJvdG9QAVpPZ2l0aHViLmNvbS9vcGVuYXV0aC9vcGVuYXV0aC9pbnRlcm5hbC9iYWNrZW5kL2dlbi9vcGVuYXV0aC9iYWNrZW5kL3YxO2JhY2tlbmR2MaICA09CWKoCE09wZW5hdXRoLkJhY2tlbmQuVjHKAhNPcGVuYXV0aFxCYWNrZW5kXFYx4gIfT3BlbmF1dGhcQmFja2VuZFxWMVxHUEJNZXRhZGF0YeoCFU9wZW5hdXRoOjpCYWNrZW5kOjpWMWIGcHJvdG8z", [file_google_api_annotations, file_google_protobuf_empty, file_google_protobuf_field_mask, file_google_protobuf_timestamp, file_google_protobuf_struct]);

/**
 * @generated from message openauth.backend.v1.CreateOrganizationRequest
 */
export type CreateOrganizationRequest = Message<"openauth.backend.v1.CreateOrganizationRequest"> & {
  /**
   * The organization to create.
   *
   * @generated from field: openauth.backend.v1.Organization organization = 1;
   */
  organization?: Organization;
};

/**
 * Describes the message openauth.backend.v1.CreateOrganizationRequest.
 * Use `create(CreateOrganizationRequestSchema)` to create a new message.
 */
export const CreateOrganizationRequestSchema: GenMessage<CreateOrganizationRequest> = /*@__PURE__*/
  messageDesc(file_openauth_backend_v1_backend, 0);

/**
 * @generated from message openauth.backend.v1.CreateProjectRequest
 */
export type CreateProjectRequest = Message<"openauth.backend.v1.CreateProjectRequest"> & {
  /**
   * The project to create.
   *
   * @generated from field: openauth.backend.v1.Project project = 1;
   */
  project?: Project;

  /**
   * The display name of the associated organization to create.
   *
   * @generated from field: string display_name = 2;
   */
  displayName: string;
};

/**
 * Describes the message openauth.backend.v1.CreateProjectRequest.
 * Use `create(CreateProjectRequestSchema)` to create a new message.
 */
export const CreateProjectRequestSchema: GenMessage<CreateProjectRequest> = /*@__PURE__*/
  messageDesc(file_openauth_backend_v1_backend, 1);

/**
 * @generated from message openauth.backend.v1.CreateUserRequest
 */
export type CreateUserRequest = Message<"openauth.backend.v1.CreateUserRequest"> & {
  /**
   * The user to create.
   *
   * @generated from field: openauth.backend.v1.User user = 1;
   */
  user?: User;
};

/**
 * Describes the message openauth.backend.v1.CreateUserRequest.
 * Use `create(CreateUserRequestSchema)` to create a new message.
 */
export const CreateUserRequestSchema: GenMessage<CreateUserRequest> = /*@__PURE__*/
  messageDesc(file_openauth_backend_v1_backend, 2);

/**
 * @generated from message openauth.backend.v1.GetOrganizationRequest
 */
export type GetOrganizationRequest = Message<"openauth.backend.v1.GetOrganizationRequest"> & {
  /**
   * The ID of the organization to get.
   *
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message openauth.backend.v1.GetOrganizationRequest.
 * Use `create(GetOrganizationRequestSchema)` to create a new message.
 */
export const GetOrganizationRequestSchema: GenMessage<GetOrganizationRequest> = /*@__PURE__*/
  messageDesc(file_openauth_backend_v1_backend, 3);

/**
 * @generated from message openauth.backend.v1.GetProjectRequest
 */
export type GetProjectRequest = Message<"openauth.backend.v1.GetProjectRequest"> & {
  /**
   * The ID of the project to get.
   *
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message openauth.backend.v1.GetProjectRequest.
 * Use `create(GetProjectRequestSchema)` to create a new message.
 */
export const GetProjectRequestSchema: GenMessage<GetProjectRequest> = /*@__PURE__*/
  messageDesc(file_openauth_backend_v1_backend, 4);

/**
 * @generated from message openauth.backend.v1.GetUserRequest
 */
export type GetUserRequest = Message<"openauth.backend.v1.GetUserRequest"> & {
  /**
   * The ID of the user to get.
   *
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message openauth.backend.v1.GetUserRequest.
 * Use `create(GetUserRequestSchema)` to create a new message.
 */
export const GetUserRequestSchema: GenMessage<GetUserRequest> = /*@__PURE__*/
  messageDesc(file_openauth_backend_v1_backend, 5);

/**
 * @generated from message openauth.backend.v1.ListOrganizationsRequest
 */
export type ListOrganizationsRequest = Message<"openauth.backend.v1.ListOrganizationsRequest"> & {
  /**
   * The project ID to use for filtering.
   *
   * @generated from field: string project_id = 1;
   */
  projectId: string;

  /**
   * The page token to use for pagination.
   *
   * @generated from field: string page_token = 2;
   */
  pageToken: string;
};

/**
 * Describes the message openauth.backend.v1.ListOrganizationsRequest.
 * Use `create(ListOrganizationsRequestSchema)` to create a new message.
 */
export const ListOrganizationsRequestSchema: GenMessage<ListOrganizationsRequest> = /*@__PURE__*/
  messageDesc(file_openauth_backend_v1_backend, 6);

/**
 * @generated from message openauth.backend.v1.ListOrganizationsResponse
 */
export type ListOrganizationsResponse = Message<"openauth.backend.v1.ListOrganizationsResponse"> & {
  /**
   * The organizations retrieved by the ListOrganizations request.
   *
   * @generated from field: repeated openauth.backend.v1.Organization organizations = 1;
   */
  organizations: Organization[];

  /**
   * The next page token to use for pagination.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message openauth.backend.v1.ListOrganizationsResponse.
 * Use `create(ListOrganizationsResponseSchema)` to create a new message.
 */
export const ListOrganizationsResponseSchema: GenMessage<ListOrganizationsResponse> = /*@__PURE__*/
  messageDesc(file_openauth_backend_v1_backend, 7);

/**
 * @generated from message openauth.backend.v1.ListProjectsRequest
 */
export type ListProjectsRequest = Message<"openauth.backend.v1.ListProjectsRequest"> & {
  /**
   * The page token to use for pagination.
   *
   * @generated from field: string page_token = 1;
   */
  pageToken: string;
};

/**
 * Describes the message openauth.backend.v1.ListProjectsRequest.
 * Use `create(ListProjectsRequestSchema)` to create a new message.
 */
export const ListProjectsRequestSchema: GenMessage<ListProjectsRequest> = /*@__PURE__*/
  messageDesc(file_openauth_backend_v1_backend, 8);

/**
 * @generated from message openauth.backend.v1.ListProjectsResponse
 */
export type ListProjectsResponse = Message<"openauth.backend.v1.ListProjectsResponse"> & {
  /**
   * The projects retrieved by the ListProjects request.
   *
   * @generated from field: repeated openauth.backend.v1.Project projects = 1;
   */
  projects: Project[];

  /**
   * The next page token to use for pagination.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message openauth.backend.v1.ListProjectsResponse.
 * Use `create(ListProjectsResponseSchema)` to create a new message.
 */
export const ListProjectsResponseSchema: GenMessage<ListProjectsResponse> = /*@__PURE__*/
  messageDesc(file_openauth_backend_v1_backend, 9);

/**
 * @generated from message openauth.backend.v1.ListUsersRequest
 */
export type ListUsersRequest = Message<"openauth.backend.v1.ListUsersRequest"> & {
  /**
   * The organization ID to use for filtering.
   *
   * @generated from field: string organization_id = 1;
   */
  organizationId: string;

  /**
   * The page token to use for pagination.
   *
   * @generated from field: string page_token = 2;
   */
  pageToken: string;
};

/**
 * Describes the message openauth.backend.v1.ListUsersRequest.
 * Use `create(ListUsersRequestSchema)` to create a new message.
 */
export const ListUsersRequestSchema: GenMessage<ListUsersRequest> = /*@__PURE__*/
  messageDesc(file_openauth_backend_v1_backend, 10);

/**
 * @generated from message openauth.backend.v1.ListUsersResponse
 */
export type ListUsersResponse = Message<"openauth.backend.v1.ListUsersResponse"> & {
  /**
   * The users retrieved by the ListUsers request.
   *
   * @generated from field: repeated openauth.backend.v1.User users = 1;
   */
  users: User[];

  /**
   * The next page token to use for pagination.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;
};

/**
 * Describes the message openauth.backend.v1.ListUsersResponse.
 * Use `create(ListUsersResponseSchema)` to create a new message.
 */
export const ListUsersResponseSchema: GenMessage<ListUsersResponse> = /*@__PURE__*/
  messageDesc(file_openauth_backend_v1_backend, 11);

/**
 * @generated from message openauth.backend.v1.UpdateOrganizationRequest
 */
export type UpdateOrganizationRequest = Message<"openauth.backend.v1.UpdateOrganizationRequest"> & {
  /**
   * The ID of the organization to update.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The organization updates to apply.
   *
   * @generated from field: openauth.backend.v1.Organization organization = 2;
   */
  organization?: Organization;
};

/**
 * Describes the message openauth.backend.v1.UpdateOrganizationRequest.
 * Use `create(UpdateOrganizationRequestSchema)` to create a new message.
 */
export const UpdateOrganizationRequestSchema: GenMessage<UpdateOrganizationRequest> = /*@__PURE__*/
  messageDesc(file_openauth_backend_v1_backend, 12);

/**
 * @generated from message openauth.backend.v1.UpdateProjectRequest
 */
export type UpdateProjectRequest = Message<"openauth.backend.v1.UpdateProjectRequest"> & {
  /**
   * The ID of the project to update.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The project updates to apply.
   *
   * @generated from field: openauth.backend.v1.Project project = 2;
   */
  project?: Project;
};

/**
 * Describes the message openauth.backend.v1.UpdateProjectRequest.
 * Use `create(UpdateProjectRequestSchema)` to create a new message.
 */
export const UpdateProjectRequestSchema: GenMessage<UpdateProjectRequest> = /*@__PURE__*/
  messageDesc(file_openauth_backend_v1_backend, 13);

/**
 * @generated from message openauth.backend.v1.UpdateUserPasswordRequest
 */
export type UpdateUserPasswordRequest = Message<"openauth.backend.v1.UpdateUserPasswordRequest"> & {
  /**
   * The ID of the user to update.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The new password for the user.
   *
   * @generated from field: string password = 2;
   */
  password: string;
};

/**
 * Describes the message openauth.backend.v1.UpdateUserPasswordRequest.
 * Use `create(UpdateUserPasswordRequestSchema)` to create a new message.
 */
export const UpdateUserPasswordRequestSchema: GenMessage<UpdateUserPasswordRequest> = /*@__PURE__*/
  messageDesc(file_openauth_backend_v1_backend, 14);

/**
 * @generated from message openauth.backend.v1.UpdateUserRequest
 */
export type UpdateUserRequest = Message<"openauth.backend.v1.UpdateUserRequest"> & {
  /**
   * The ID of the user to update.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The user updates to apply.
   *
   * @generated from field: openauth.backend.v1.User user = 2;
   */
  user?: User;
};

/**
 * Describes the message openauth.backend.v1.UpdateUserRequest.
 * Use `create(UpdateUserRequestSchema)` to create a new message.
 */
export const UpdateUserRequestSchema: GenMessage<UpdateUserRequest> = /*@__PURE__*/
  messageDesc(file_openauth_backend_v1_backend, 15);

/**
 * @generated from message openauth.backend.v1.UpdateUserResponse
 */
export type UpdateUserResponse = Message<"openauth.backend.v1.UpdateUserResponse"> & {
  /**
   * The user updated by the UpdateUser request.
   *
   * @generated from field: openauth.backend.v1.User user = 1;
   */
  user?: User;
};

/**
 * Describes the message openauth.backend.v1.UpdateUserResponse.
 * Use `create(UpdateUserResponseSchema)` to create a new message.
 */
export const UpdateUserResponseSchema: GenMessage<UpdateUserResponse> = /*@__PURE__*/
  messageDesc(file_openauth_backend_v1_backend, 16);

/**
 * @generated from message openauth.backend.v1.ProjectAPIKey
 */
export type ProjectAPIKey = Message<"openauth.backend.v1.ProjectAPIKey"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string project_id = 2;
   */
  projectId: string;

  /**
   * @generated from field: google.protobuf.Timestamp create_time = 3;
   */
  createTime?: Timestamp;

  /**
   * @generated from field: bool revoked = 4;
   */
  revoked: boolean;

  /**
   * @generated from field: string secret_token = 5;
   */
  secretToken: string;
};

/**
 * Describes the message openauth.backend.v1.ProjectAPIKey.
 * Use `create(ProjectAPIKeySchema)` to create a new message.
 */
export const ProjectAPIKeySchema: GenMessage<ProjectAPIKey> = /*@__PURE__*/
  messageDesc(file_openauth_backend_v1_backend, 17);

/**
 * @generated from message openauth.backend.v1.CreateProjectAPIKeyRequest
 */
export type CreateProjectAPIKeyRequest = Message<"openauth.backend.v1.CreateProjectAPIKeyRequest"> & {
  /**
   * @generated from field: openauth.backend.v1.ProjectAPIKey project_api_key = 1;
   */
  projectApiKey?: ProjectAPIKey;
};

/**
 * Describes the message openauth.backend.v1.CreateProjectAPIKeyRequest.
 * Use `create(CreateProjectAPIKeyRequestSchema)` to create a new message.
 */
export const CreateProjectAPIKeyRequestSchema: GenMessage<CreateProjectAPIKeyRequest> = /*@__PURE__*/
  messageDesc(file_openauth_backend_v1_backend, 18);

/**
 * @generated from message openauth.backend.v1.CreateProjectAPIKeyResponse
 */
export type CreateProjectAPIKeyResponse = Message<"openauth.backend.v1.CreateProjectAPIKeyResponse"> & {
  /**
   * @generated from field: openauth.backend.v1.ProjectAPIKey project_api_key = 1;
   */
  projectApiKey?: ProjectAPIKey;
};

/**
 * Describes the message openauth.backend.v1.CreateProjectAPIKeyResponse.
 * Use `create(CreateProjectAPIKeyResponseSchema)` to create a new message.
 */
export const CreateProjectAPIKeyResponseSchema: GenMessage<CreateProjectAPIKeyResponse> = /*@__PURE__*/
  messageDesc(file_openauth_backend_v1_backend, 19);

/**
 * @generated from message openauth.backend.v1.Organization
 */
export type Organization = Message<"openauth.backend.v1.Organization"> & {
  /**
   * Unique identifier for this organization.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The project this organization belongs to.
   *
   * @generated from field: string project_id = 2;
   */
  projectId: string;

  /**
   * An optional human-friendly name for this organization.
   *
   * @generated from field: string display_name = 3;
   */
  displayName: string;

  /**
   * Override setting for whether login with password is enabled.
   *
   * @generated from field: bool override_log_in_with_password_enabled = 4;
   */
  overrideLogInWithPasswordEnabled: boolean;

  /**
   * Override setting for whether login with Google is enabled.
   *
   * @generated from field: bool override_log_in_with_google_enabled = 5;
   */
  overrideLogInWithGoogleEnabled: boolean;

  /**
   * Override setting for whether login with Microsoft is enabled.
   *
   * @generated from field: bool override_log_in_with_microsoft_enabled = 6;
   */
  overrideLogInWithMicrosoftEnabled: boolean;

  /**
   * Google hosted domain.
   *
   * @generated from field: string google_hosted_domain = 7;
   */
  googleHostedDomain: string;

  /**
   * The tenant ID for Microsoft auth.
   *
   * @generated from field: string microsoft_tenant_id = 8;
   */
  microsoftTenantId: string;
};

/**
 * Describes the message openauth.backend.v1.Organization.
 * Use `create(OrganizationSchema)` to create a new message.
 */
export const OrganizationSchema: GenMessage<Organization> = /*@__PURE__*/
  messageDesc(file_openauth_backend_v1_backend, 20);

/**
 * @generated from message openauth.backend.v1.Project
 */
export type Project = Message<"openauth.backend.v1.Project"> & {
  /**
   * Unique identifier for this project.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The organization this project belongs to.
   *
   * @generated from field: string organization_id = 2;
   */
  organizationId: string;

  /**
   * Top-level setting for whether login with password is enabled (inherited by organizations by default).
   *
   * @generated from field: bool log_in_with_password_enabled = 3;
   */
  logInWithPasswordEnabled: boolean;

  /**
   * Top-level setting for whether login with Google is enabled (inherited by organizations by default).
   *
   * @generated from field: bool log_in_with_google_enabled = 4;
   */
  logInWithGoogleEnabled: boolean;

  /**
   * Top-level setting for whether login with Microsoft is enabled (inherited by organizations by default).
   *
   * @generated from field: bool log_in_with_microsoft_enabled = 5;
   */
  logInWithMicrosoftEnabled: boolean;

  /**
   * The oAuth Client ID to be used for Google Auth.
   *
   * @generated from field: string google_oauth_client_id = 6;
   */
  googleOauthClientId: string;

  /**
   * The oAuth Client secret to be used for Google Auth.
   *
   * @generated from field: string google_oauth_client_secret = 7;
   */
  googleOauthClientSecret: string;

  /**
   * The oAuth Client ID to be used for Microsoft Auth.
   *
   * @generated from field: string microsoft_oauth_client_id = 8;
   */
  microsoftOauthClientId: string;

  /**
   * The oAuth Client secret to be used for Microsoft Auth.
   *
   * @generated from field: string microsoft_oauth_client_secret = 9;
   */
  microsoftOauthClientSecret: string;
};

/**
 * Describes the message openauth.backend.v1.Project.
 * Use `create(ProjectSchema)` to create a new message.
 */
export const ProjectSchema: GenMessage<Project> = /*@__PURE__*/
  messageDesc(file_openauth_backend_v1_backend, 21);

/**
 * @generated from message openauth.backend.v1.SessionSigningKey
 */
export type SessionSigningKey = Message<"openauth.backend.v1.SessionSigningKey"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string project_id = 2;
   */
  projectId: string;

  /**
   * @generated from field: google.protobuf.Struct public_key_jwk = 3;
   */
  publicKeyJwk?: JsonObject;
};

/**
 * Describes the message openauth.backend.v1.SessionSigningKey.
 * Use `create(SessionSigningKeySchema)` to create a new message.
 */
export const SessionSigningKeySchema: GenMessage<SessionSigningKey> = /*@__PURE__*/
  messageDesc(file_openauth_backend_v1_backend, 22);

/**
 * @generated from message openauth.backend.v1.User
 */
export type User = Message<"openauth.backend.v1.User"> & {
  /**
   * Unique identifier for this user.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * The organization this user belongs to.
   *
   * @generated from field: string organization_id = 2;
   */
  organizationId: string;

  /**
   * The user's email (verified).
   *
   * @generated from field: string email = 3;
   */
  email: string;

  /**
   * The hash of the user's password.
   *
   * @generated from field: string password_bcrypt = 4;
   */
  passwordBcrypt: string;

  /**
   * The user's Google User ID.
   *
   * @generated from field: string google_user_id = 5;
   */
  googleUserId: string;

  /**
   * The user's Microsoft User ID.
   *
   * @generated from field: string microsoft_user_id = 6;
   */
  microsoftUserId: string;
};

/**
 * Describes the message openauth.backend.v1.User.
 * Use `create(UserSchema)` to create a new message.
 */
export const UserSchema: GenMessage<User> = /*@__PURE__*/
  messageDesc(file_openauth_backend_v1_backend, 23);

/**
 * @generated from message openauth.backend.v1.Session
 */
export type Session = Message<"openauth.backend.v1.Session"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string user_id = 2;
   */
  userId: string;

  /**
   * @generated from field: google.protobuf.Timestamp create_time = 3;
   */
  createTime?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp expire_time = 4;
   */
  expireTime?: Timestamp;

  /**
   * @generated from field: bool revoked = 5;
   */
  revoked: boolean;
};

/**
 * Describes the message openauth.backend.v1.Session.
 * Use `create(SessionSchema)` to create a new message.
 */
export const SessionSchema: GenMessage<Session> = /*@__PURE__*/
  messageDesc(file_openauth_backend_v1_backend, 24);

/**
 * @generated from service openauth.backend.v1.BackendService
 */
export const BackendService: GenService<{
  /**
   * Creates an organization.
   *
   * @generated from rpc openauth.backend.v1.BackendService.CreateOrganization
   */
  createOrganization: {
    methodKind: "unary";
    input: typeof CreateOrganizationRequestSchema;
    output: typeof OrganizationSchema;
  },
  /**
   * Gets an organization.
   *
   * @generated from rpc openauth.backend.v1.BackendService.GetOrganization
   */
  getOrganization: {
    methodKind: "unary";
    input: typeof GetOrganizationRequestSchema;
    output: typeof OrganizationSchema;
  },
  /**
   * Gets a list of organizations.
   *
   * @generated from rpc openauth.backend.v1.BackendService.ListOrganizations
   */
  listOrganizations: {
    methodKind: "unary";
    input: typeof ListOrganizationsRequestSchema;
    output: typeof ListOrganizationsResponseSchema;
  },
  /**
   * Updates an organization.
   *
   * @generated from rpc openauth.backend.v1.BackendService.UpdateOrganization
   */
  updateOrganization: {
    methodKind: "unary";
    input: typeof UpdateOrganizationRequestSchema;
    output: typeof OrganizationSchema;
  },
  /**
   * Creates a project.
   *
   * @generated from rpc openauth.backend.v1.BackendService.CreateProject
   */
  createProject: {
    methodKind: "unary";
    input: typeof CreateProjectRequestSchema;
    output: typeof ProjectSchema;
  },
  /**
   * Gets a project.
   *
   * @generated from rpc openauth.backend.v1.BackendService.GetProject
   */
  getProject: {
    methodKind: "unary";
    input: typeof GetProjectRequestSchema;
    output: typeof ProjectSchema;
  },
  /**
   * Gets a list of projects.
   *
   * @generated from rpc openauth.backend.v1.BackendService.ListProjects
   */
  listProjects: {
    methodKind: "unary";
    input: typeof ListProjectsRequestSchema;
    output: typeof ListProjectsResponseSchema;
  },
  /**
   * Updates a project.
   *
   * @generated from rpc openauth.backend.v1.BackendService.UpdateProject
   */
  updateProject: {
    methodKind: "unary";
    input: typeof UpdateProjectRequestSchema;
    output: typeof ProjectSchema;
  },
  /**
   * Creates a user.
   *
   * @generated from rpc openauth.backend.v1.BackendService.CreateUser
   */
  createUser: {
    methodKind: "unary";
    input: typeof CreateUserRequestSchema;
    output: typeof UserSchema;
  },
  /**
   * Gets a user.
   *
   * @generated from rpc openauth.backend.v1.BackendService.GetUser
   */
  getUser: {
    methodKind: "unary";
    input: typeof GetUserRequestSchema;
    output: typeof UserSchema;
  },
  /**
   * Gets a list of users.
   *
   * @generated from rpc openauth.backend.v1.BackendService.ListUsers
   */
  listUsers: {
    methodKind: "unary";
    input: typeof ListUsersRequestSchema;
    output: typeof ListUsersResponseSchema;
  },
  /**
   * Updates a user.
   *
   * @generated from rpc openauth.backend.v1.BackendService.UpdateUser
   */
  updateUser: {
    methodKind: "unary";
    input: typeof UpdateUserRequestSchema;
    output: typeof UserSchema;
  },
  /**
   * Updates a user's password.
   *
   * @generated from rpc openauth.backend.v1.BackendService.UpdateUserPassword
   */
  updateUserPassword: {
    methodKind: "unary";
    input: typeof UpdateUserPasswordRequestSchema;
    output: typeof UserSchema;
  },
  /**
   * @generated from rpc openauth.backend.v1.BackendService.CreateProjectAPIKey
   */
  createProjectAPIKey: {
    methodKind: "unary";
    input: typeof CreateProjectAPIKeyRequestSchema;
    output: typeof CreateProjectAPIKeyResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_openauth_backend_v1_backend, 0);

