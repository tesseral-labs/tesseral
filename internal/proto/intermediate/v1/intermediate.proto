syntax = "proto3";

package intermediate.v1;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/struct.proto";
import "openauth/v1/openauth.proto";

service IntermediateService {
  // Creates a new organization.
  rpc CreateOrganization(CreateOrganizationRequest) returns (CreateOrganizationResponse) {
    option (google.api.http) = {
      post: "/intermediate/v1/organizations",
      body: "*"
    };
  }

  // Gets a list of organizations.
  rpc ListOrganizations(ListOrganizationsRequest) returns (ListOrganizationsResponse) {
    option (google.api.http) = {
      get: "/intermediate/v1/organizations"
    };
  }

  // Creates a new intermediate session or session and cookies the requester.
  rpc SignInWithEmail(SignInWithEmailRequest) returns (SignInWithEmailResponse) {
    option (google.api.http) = {
      post: "/intermediate/v1/email-signin",
      body: "*"
    };
  }
}

message IntermediateSessionClaims {
  // The project ID the intermediate session is scoped to.
  string project_id = 1;
  // The email associated with the intermediate session.
  string email = 2;
  // The time the intermediate session expires.
  int64 expires_at = 3;
  // The time the intermediate session was issued.
  int64 issued_at = 4;
  // The subject of the intermediate session.
  string subject = 5;
}

message IntermediateOrganization {
  string id = 1;
  string project_id = 2;
  string display_name = 3;
  bool log_in_with_google_enabled = 4;
  bool log_in_with_microsoft_enabled = 5;
  bool log_in_with_password_enabled = 6;
}

message CreateOrganizationRequest {
  // The project ID to create the organization for.
  string project_id = 1;
  // The display name of the organization.
  string display_name = 2;
}

message CreateOrganizationResponse {
  openauth.v1.Organization organization = 1;
}

message ListOrganizationsRequest {
  // The project ID to list intermediate organizations for.
  string project_id = 1;
  // The email associated with the intermediate session.
  string email = 2;
}

message ListOrganizationsResponse {
  repeated IntermediateOrganization organizations = 1;
  string next_page_token = 2;
}

message SignInWithEmailRequest {
  // The Project ID to scope the sign in to.
  string project_id = 1;
  // The email address to sign in with.
  string email = 2;
}

message SignInWithEmailResponse {
  // The token for the intermediate session or session created by the SignInWithEmail request.
  string SessionToken = 1;
}