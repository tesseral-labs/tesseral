syntax = "proto3";

package openauth.backend.v1;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/struct.proto";

service BackendService {
  rpc GetProject(GetProjectRequest) returns (GetProjectResponse) {
    option (google.api.http) = {
      get: "/backend/v1/project"
    };
  }

  rpc ListOrganizations(ListOrganizationsRequest) returns (ListOrganizationsResponse) {
    option (google.api.http) = {
      get: "/backend/v1/organizations"
    };
  }

  rpc GetOrganization(GetOrganizationRequest) returns (GetOrganizationResponse) {
    option (google.api.http) = {
      get: "/backend/v1/organizations/{id}"
    };
  }

  rpc CreateOrganization(CreateOrganizationRequest) returns (CreateOrganizationResponse) {
    option (google.api.http) = {
      post: "/backend/v1/organizations",
      body: "organization"
    };
  }

  rpc UpdateOrganization(UpdateOrganizationRequest) returns (UpdateOrganizationResponse) {
    option (google.api.http) = {
      patch: "/backend/v1/organizations/{id}",
      body: "organization"
    };
  }

  rpc DeleteOrganization(DeleteOrganizationRequest) returns (DeleteOrganizationResponse) {
    option (google.api.http) = {
      delete: "/backend/v1/organizations/{id}",
    };
  }

  rpc GetOrganizationGoogleHostedDomains(GetOrganizationGoogleHostedDomainsRequest) returns (GetOrganizationGoogleHostedDomainsResponse) {
    option (google.api.http) = {
      get: "/backend/v1/organizations/{organization_id}/google-hosted-domains",
    };
  }

  rpc UpdateOrganizationGoogleHostedDomains(UpdateOrganizationGoogleHostedDomainsRequest) returns (UpdateOrganizationGoogleHostedDomainsResponse) {
    option (google.api.http) = {
      patch: "/backend/v1/organizations/{organization_id}/google-hosted-domains",
      body: "organization_google_hosted_domains",
    };
  }

  rpc GetOrganizationMicrosoftTenantIDs(GetOrganizationMicrosoftTenantIDsRequest) returns (GetOrganizationMicrosoftTenantIDsResponse) {
    option (google.api.http) = {
      get: "/backend/v1/organizations/{organization_id}/microsoft-tenant-ids",
    };
  }

  rpc UpdateOrganizationMicrosoftTenantIDs(UpdateOrganizationMicrosoftTenantIDsRequest) returns (UpdateOrganizationMicrosoftTenantIDsResponse) {
    option (google.api.http) = {
      patch: "/backend/v1/organizations/{organization_id}/microsoft-tenant-ids",
      body: "organization_microsoft_tenant_ids",
    };
  }

  rpc ListSAMLConnections(ListSAMLConnectionsRequest) returns (ListSAMLConnectionsResponse) {
    option (google.api.http) = {
      get: "/backend/v1/saml-connections",
    };
  }

  rpc GetSAMLConnection(GetSAMLConnectionRequest) returns (GetSAMLConnectionResponse) {
    option (google.api.http) = {
      get: "/backend/v1/saml-connections/{id}"
    };
  }

  rpc CreateSAMLConnection(CreateSAMLConnectionRequest) returns (CreateSAMLConnectionResponse) {
    option (google.api.http) = {
      post: "/backend/v1/saml-connections",
      body: "saml_connection"
    };
  }

  rpc UpdateSAMLConnection(UpdateSAMLConnectionRequest) returns (UpdateSAMLConnectionResponse) {
    option (google.api.http) = {
      patch: "/backend/v1/saml-connections/{id}",
      body: "saml_connection"
    };
  }

  rpc DeleteSAMLConnection(DeleteSAMLConnectionRequest) returns (DeleteSAMLConnectionResponse) {
    option (google.api.http) = {
      delete: "/backend/v1/saml-connections/{id}"
    };
  }

  rpc ListSCIMAPIKeys(ListSCIMAPIKeysRequest) returns (ListSCIMAPIKeysResponse) {
    option (google.api.http) = {
      get: "/backend/v1/scim-api-keys"
    };
  }

  rpc GetSCIMAPIKey(GetSCIMAPIKeyRequest) returns (GetSCIMAPIKeyResponse) {
    option (google.api.http) = {
      get: "/backend/v1/scim-api-keys/{id}"
    };
  }

  rpc CreateSCIMAPIKey(CreateSCIMAPIKeyRequest) returns (CreateSCIMAPIKeyResponse) {
    option (google.api.http) = {
      post: "/backend/v1/scim-api-keys",
      body: "scim_api_key"
    };
  }

  rpc UpdateSCIMAPIKey(UpdateSCIMAPIKeyRequest) returns (UpdateSCIMAPIKeyResponse) {
    option (google.api.http) = {
      patch: "/backend/v1/scim-api-keys/{id}",
      body: "scim_api_key"
    };
  }

  rpc DeleteSCIMAPIKey(DeleteSCIMAPIKeyRequest) returns (DeleteSCIMAPIKeyResponse) {
    option (google.api.http) = {
      delete: "/backend/v1/scim-api-keys/{id}"
    };
  }

  rpc RevokeSCIMAPIKey(RevokeSCIMAPIKeyRequest) returns (RevokeSCIMAPIKeyResponse) {
    option (google.api.http) = {
      post: "/backend/v1/scim-api-keys/{id}/revoke",
    };
  }

  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse) {
    option (google.api.http) = {
      get: "/backend/v1/users"
    };
  }

  rpc GetUser(GetUserRequest) returns (GetUserResponse) {
    option (google.api.http) = {
      get: "/backend/v1/users/{id}"
    };
  }

  rpc ListPasskeys(ListPasskeysRequest) returns (ListPasskeysResponse) {
    option (google.api.http) = {
      get: "/backend/v1/passkeys"
    };
  }

  rpc GetPasskey(GetPasskeyRequest) returns (GetPasskeyResponse) {
    option (google.api.http) = {
      get: "/backend/v1/passkeys/{id}"
    };
  }

  rpc DeletePasskey(DeletePasskeyRequest) returns (DeletePasskeyResponse) {
    option (google.api.http) = {
      delete: "/backend/v1/passkeys/{id}"
    };
  }

  rpc ListSessions(ListSessionsRequest) returns (ListSessionsResponse) {
    option (google.api.http) = {
      get: "/backend/v1/sessions"
    };
  }

  rpc GetSession(GetSessionRequest) returns (GetSessionResponse) {
    option (google.api.http) = {
      get: "/backend/v1/sessions/{id}"
    };
  }

  rpc ListIntermediateSessions(ListIntermediateSessionsRequest) returns (ListIntermediateSessionsResponse) {
    option (google.api.http) = {
      get: "/backend/v1/intermediate-sessions"
    };
  }
  rpc GetIntermediateSession(GetIntermediateSessionRequest) returns (GetIntermediateSessionResponse) {
    option (google.api.http) = {
      get: "/backend/v1/intermediate-sessions/{id}"
    };
  }

  rpc DisableOrganizationLogins(DisableOrganizationLoginsRequest) returns (DisableOrganizationLoginsResponse) {}
  rpc DisableProjectLogins(DisableProjectLoginsRequest) returns (DisableProjectLoginsResponse) {}
  rpc EnableOrganizationLogins(EnableOrganizationLoginsRequest) returns (EnableOrganizationLoginsResponse) {}
  rpc EnableProjectLogins(EnableProjectLoginsRequest) returns (EnableProjectLoginsResponse) {}

  rpc UpdateProject(UpdateProjectRequest) returns (UpdateProjectResponse);

  rpc CreateProjectRedirectURI(CreateProjectRedirectURIRequest) returns (CreateProjectRedirectURIResponse) {}
  rpc DeleteProjectRedirectURI(DeleteProjectRedirectURIRequest) returns (DeleteProjectRedirectURIResponse) {}
  rpc GetProjectRedirectURI(GetProjectRedirectURIRequest) returns (GetProjectRedirectURIResponse) {}
  rpc ListProjectRedirectURIs(ListProjectRedirectURIsRequest) returns (ListProjectRedirectURIsResponse) {}
  rpc UpdateProjectRedirectURI(UpdateProjectRedirectURIRequest) returns (UpdateProjectRedirectURIResponse) {}

  rpc GetProjectUISettings(GetProjectUISettingsRequest) returns (GetProjectUISettingsResponse) {}
  rpc UpdateProjectUISettings(UpdateProjectUISettingsRequest) returns (UpdateProjectUISettingsResponse) {}

  rpc ListProjectAPIKeys(ListProjectAPIKeysRequest) returns (ListProjectAPIKeysResponse);
  rpc GetProjectAPIKey(GetProjectAPIKeyRequest) returns (GetProjectAPIKeyResponse);
  rpc CreateProjectAPIKey(CreateProjectAPIKeyRequest) returns (CreateProjectAPIKeyResponse);
  rpc UpdateProjectAPIKey(UpdateProjectAPIKeyRequest) returns (UpdateProjectAPIKeyResponse);
  rpc DeleteProjectAPIKey(DeleteProjectAPIKeyRequest) returns (DeleteProjectAPIKeyResponse);
  rpc RevokeProjectAPIKey(RevokeProjectAPIKeyRequest) returns (RevokeProjectAPIKeyResponse);

  rpc CreateUserImpersonationToken(CreateUserImpersonationTokenRequest) returns (CreateUserImpersonationTokenResponse);
}

message CreateUserRequest {
  // The user to create.
  User user = 1;
}

message GetProjectRequest {
}

message GetProjectResponse {
  Project project = 1;
}

message UpdateProjectRequest {
  Project project = 1;
}

message UpdateProjectResponse {
  Project project = 1;
}

message ListOrganizationsRequest {
  string page_token = 1;
}

message ListOrganizationsResponse {
  repeated Organization organizations = 1;
  string next_page_token = 2;
}

message GetOrganizationRequest {
  string id = 1;
}

message GetOrganizationResponse {
  Organization organization = 1;
}

message CreateOrganizationRequest {
  Organization organization = 1;
}

message CreateOrganizationResponse {
  Organization organization = 1;
}

message UpdateOrganizationRequest {
  string id = 1;
  Organization organization = 2;
}

message UpdateOrganizationResponse {
  Organization organization = 1;
}

message DeleteOrganizationRequest {
  string id = 1;
}

message DeleteOrganizationResponse {
}

message GetOrganizationGoogleHostedDomainsRequest {
  string organization_id = 1;
}

message GetOrganizationGoogleHostedDomainsResponse {
  OrganizationGoogleHostedDomains organization_google_hosted_domains = 1;
}

message UpdateOrganizationGoogleHostedDomainsRequest {
  string organization_id = 1;
  OrganizationGoogleHostedDomains organization_google_hosted_domains = 2;
}

message UpdateOrganizationGoogleHostedDomainsResponse {
  OrganizationGoogleHostedDomains organization_google_hosted_domains = 1;
}

message GetOrganizationMicrosoftTenantIDsRequest {
  string organization_id = 1;
}

message GetOrganizationMicrosoftTenantIDsResponse {
  OrganizationMicrosoftTenantIDs organization_microsoft_tenant_ids = 1;
}

message UpdateOrganizationMicrosoftTenantIDsRequest {
  string organization_id = 1;
  OrganizationMicrosoftTenantIDs organization_microsoft_tenant_ids = 2;
}

message UpdateOrganizationMicrosoftTenantIDsResponse {
  OrganizationMicrosoftTenantIDs organization_microsoft_tenant_ids = 1;
}

message CreateSAMLConnectionRequest {
  SAMLConnection saml_connection = 1;
}

message CreateSAMLConnectionResponse {
  SAMLConnection saml_connection = 1;
}

message GetSAMLConnectionRequest {
  string id = 1;
}

message GetSAMLConnectionResponse {
  SAMLConnection saml_connection = 1;
}

message ListSAMLConnectionsRequest {
  string organization_id = 1;
  string page_token = 2;
}

message ListSAMLConnectionsResponse {
  repeated SAMLConnection saml_connections = 1;
  string next_page_token = 2;
}

message UpdateSAMLConnectionRequest {
  string id = 1;
  SAMLConnection saml_connection = 2;
}

message UpdateSAMLConnectionResponse {
  SAMLConnection saml_connection = 1;
}

message DeleteSAMLConnectionRequest {
  string id = 1;
}

message DeleteSAMLConnectionResponse {
}

message ListSCIMAPIKeysRequest {
  string organization_id = 1;
  string page_token = 2;
}

message ListSCIMAPIKeysResponse {
  repeated SCIMAPIKey scim_api_keys = 1;
  string next_page_token = 2;
}

message GetSCIMAPIKeyRequest {
  string id = 1;
}

message GetSCIMAPIKeyResponse {
  SCIMAPIKey scim_api_key = 1;
}

message CreateSCIMAPIKeyRequest {
  SCIMAPIKey scim_api_key = 1;
}

message CreateSCIMAPIKeyResponse {
  SCIMAPIKey scim_api_key = 1;
}

message UpdateSCIMAPIKeyRequest {
  string id = 1;
  SCIMAPIKey scim_api_key = 2;
}

message UpdateSCIMAPIKeyResponse {
  SCIMAPIKey scim_api_key = 1;
}

message DeleteSCIMAPIKeyRequest {
  string id = 1;
}

message DeleteSCIMAPIKeyResponse {
}

message RevokeSCIMAPIKeyRequest {
  string id = 1;
}

message RevokeSCIMAPIKeyResponse {
  SCIMAPIKey scim_api_key = 1;
}

message ListUsersRequest {
  string organization_id = 1;
  string page_token = 2;
}

message ListUsersResponse {
  repeated User users = 1;
  string next_page_token = 2;
}

message GetUserRequest {
  string id = 1;
}

message GetUserResponse {
  User user = 1;
}

message ListPasskeysRequest {
  string user_id = 1;
  string page_token = 2;
}

message ListPasskeysResponse {
  repeated Passkey passkeys = 1;
  string next_page_token = 2;
}

message GetPasskeyRequest {
  string id = 1;
}

message GetPasskeyResponse {
  Passkey passkey = 1;
}

message DeletePasskeyRequest {
  string id = 1;
}

message DeletePasskeyResponse {
}

message ListSessionsRequest {
  string user_id = 1;
  string page_token = 2;
}

message ListSessionsResponse {
  repeated Session sessions = 1;
  string next_page_token = 2;
}

message GetSessionRequest {
  string id = 1;
}

message GetSessionResponse {
  Session session = 1;
}

message ListIntermediateSessionsRequest {
  string page_token = 1;
}

message ListIntermediateSessionsResponse {
  repeated IntermediateSession intermediate_sessions = 1;
  string next_page_token = 2;
}

message GetIntermediateSessionRequest {
  string id = 1;
}

message GetIntermediateSessionResponse {
  IntermediateSession intermediate_session = 1;
}

message ListProjectAPIKeysRequest {
  string page_token = 1;
}

message ListProjectAPIKeysResponse {
  repeated ProjectAPIKey project_api_keys = 1;
  string next_page_token = 2;
}

message GetProjectAPIKeyRequest {
  string id = 1;
}

message GetProjectAPIKeyResponse {
  ProjectAPIKey project_api_key = 1;
}

message CreateProjectAPIKeyRequest {
  ProjectAPIKey project_api_key = 1;
}

message CreateProjectAPIKeyResponse {
  ProjectAPIKey project_api_key = 1;
}

message UpdateProjectAPIKeyRequest {
  string id = 1;
  ProjectAPIKey project_api_key = 2;
}

message UpdateProjectAPIKeyResponse {
  ProjectAPIKey project_api_key = 1;
}

message DeleteProjectAPIKeyRequest {
  string id = 1;
}

message DeleteProjectAPIKeyResponse {
}

message RevokeProjectAPIKeyRequest {
  string id = 1;
}

message RevokeProjectAPIKeyResponse {
  ProjectAPIKey project_api_key = 1;
}

message CreateProjectRedirectURIRequest {
  ProjectRedirectURI project_redirect_uri = 1;
}

message CreateProjectRedirectURIResponse {
  ProjectRedirectURI project_redirect_uri = 1;
}

message DeleteProjectRedirectURIRequest {
  string id = 1;
}

message DeleteProjectRedirectURIResponse {
}

message GetProjectRedirectURIRequest {
  string id = 1;
}

message GetProjectRedirectURIResponse {
  ProjectRedirectURI project_redirect_uri = 1;
}

message ListProjectRedirectURIsRequest {
  string project_id = 1;
}

message ListProjectRedirectURIsResponse {
  repeated ProjectRedirectURI project_redirect_uris = 1;
}

message GetProjectUISettingsRequest {}

message GetProjectUISettingsResponse {
  ProjectUISettings project_ui_settings = 1;
}

message UpdateProjectRedirectURIRequest {
  string id = 1;
  ProjectRedirectURI project_redirect_uri = 2;
}

message UpdateProjectRedirectURIResponse {
  ProjectRedirectURI project_redirect_uri = 1;
}

message UpdateProjectUISettingsRequest {
  string log_in_layout = 1;
  optional string primary_color = 2;
  bool detect_dark_mode_enabled = 3;
  optional string dark_mode_primary_color = 4;
}

message UpdateProjectUISettingsResponse {
  string id = 1;
  string project_id = 2;
  google.protobuf.Timestamp create_time = 3;
  google.protobuf.Timestamp update_time = 4;
  string dark_mode_logo_presigned_upload_url = 5;
  string favicon_presigned_upload_url = 6;
  string logo_presigned_upload_url = 7;
  string dark_mode_primary_color = 8;
  bool detect_dark_mode_enabled = 9;
  string primary_color = 10;
  string log_in_layout = 11;
}

message DisableOrganizationLoginsRequest {
  string organization_id = 1;
}

message DisableOrganizationLoginsResponse {}

message DisableProjectLoginsRequest {
  string project_id = 1;
}

message DisableProjectLoginsResponse {}

message EnableOrganizationLoginsRequest {
  string organization_id = 1;
}

message EnableOrganizationLoginsResponse {}

message EnableProjectLoginsRequest {
  string project_id = 1;
}

message EnableProjectLoginsResponse {}

message ImageUploadRequest {
  bytes data = 1;
  string mime_type = 2;
}

message CreateUserImpersonationTokenRequest {
  UserImpersonationToken user_impersonation_token = 1;
}

message CreateUserImpersonationTokenResponse {
  UserImpersonationToken user_impersonation_token = 1;
}

message Project {
  string id = 1;
  string display_name = 2;
  google.protobuf.Timestamp create_time = 3;
  google.protobuf.Timestamp update_time = 4;
  optional bool log_in_with_password = 5;
  optional bool log_in_with_google = 6;
  optional bool log_in_with_microsoft = 7;
  optional bool log_in_with_authenticator_app = 13;
  optional bool log_in_with_passkey = 14;
  string google_oauth_client_id = 8;
  string google_oauth_client_secret = 9;
  string microsoft_oauth_client_id = 10;
  string microsoft_oauth_client_secret = 11;
  optional string auth_domain = 12;
}

message ProjectUISettings {
  string id = 1;
  string project_id = 2;
  google.protobuf.Timestamp create_time = 3;
  google.protobuf.Timestamp update_time = 4;
  string logo_url = 5;
  string favicon_url = 6;
  string primary_color = 7;
  bool detect_dark_mode_enabled = 8;
  string dark_mode_logo_url = 9;
  string dark_mode_primary_color = 10;
  string log_in_layout = 11;
}

message Organization {
  string id = 1;
  string display_name = 2;
  google.protobuf.Timestamp create_time = 3;
  google.protobuf.Timestamp update_time = 4;
  optional bool log_in_with_password = 6;
  optional bool log_in_with_google = 7;
  optional bool log_in_with_microsoft = 8;
  optional bool log_in_with_authenticator_app = 11;
  optional bool log_in_with_passkey = 12;
  optional bool require_mfa = 13;
  optional bool saml_enabled = 9;
  optional bool scim_enabled = 10;
}

message OrganizationGoogleHostedDomains {
  string organization_id = 1;
  repeated string google_hosted_domains = 2;
}

message OrganizationMicrosoftTenantIDs {
  string organization_id = 1;
  repeated string microsoft_tenant_ids = 2;
}

message SessionSigningKey {
  string id = 1;
  google.protobuf.Struct public_key_jwk = 2;
}

message ProjectAPIKey {
  string id = 1;
  string display_name = 2;
  google.protobuf.Timestamp create_time = 3;
  google.protobuf.Timestamp update_time = 4;
  string secret_token = 5;
  bool revoked = 6;
}

message ProjectRedirectURI {
  string id = 1;
  string project_id = 2;
  string uri = 3;
  bool is_primary = 4;
}

message IntermediateSession {
  string id = 1;
  string email = 2;
  string google_hosted_domain = 3;
  string google_user_id = 4;
  string microsoft_tenant_id = 5;
  string microsoft_user_id = 6;
  bool revoked = 7;
}

message User {
  string id = 1;
  string organization_id = 2;
  string email = 3;
  google.protobuf.Timestamp create_time = 4;
  google.protobuf.Timestamp update_time = 5;
  optional bool owner = 6;
  string google_user_id = 7;
  string microsoft_user_id = 8;
  bool has_authenticator_app = 9;
}

message Session {
  string id = 1;
  string user_id = 2;
  bool revoked = 3;
  google.protobuf.Timestamp create_time = 4;
  google.protobuf.Timestamp last_active_time = 5;
  google.protobuf.Timestamp expire_time = 6;
}

message Passkey {
  string id = 1;
  string user_id = 2;
  google.protobuf.Timestamp create_time = 3;
  google.protobuf.Timestamp update_time = 4;
  bytes credential_id = 5;
  string public_key_pkix = 6;
  string aaguid = 7;
}

message SAMLConnection {
  string id = 1;
  string organization_id = 2;
  google.protobuf.Timestamp create_time = 3;
  google.protobuf.Timestamp update_time = 4;
  optional bool primary = 5;
  string sp_acs_url = 6;
  string sp_entity_id = 7;
  string idp_redirect_url = 8;
  string idp_x509_certificate = 9;
  string idp_entity_id = 10;
}

message SCIMAPIKey {
  string id = 1;
  string organization_id = 2;
  google.protobuf.Timestamp create_time = 3;
  google.protobuf.Timestamp update_time = 4;
  string display_name = 5;
  string secret_token = 6;
  bool revoked = 7;
}

message UserImpersonationToken {
  string id = 1;
  string impersonator_id = 2;
  google.protobuf.Timestamp create_time = 3;
  google.protobuf.Timestamp expire_time = 4;
  string secret_token = 5;
  string impersonated_id = 6;
}
