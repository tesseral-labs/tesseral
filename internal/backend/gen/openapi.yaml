# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: BackendService API
    version: 0.0.1
paths:
    /backend/v1/organizations:
        get:
            tags:
                - BackendService
            operationId: BackendService_ListOrganizations
            parameters:
                - name: projectId
                  in: query
                  schema:
                    type: string
                - name: pageToken
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListOrganizationsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - BackendService
            operationId: BackendService_CreateOrganization
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Organization'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateOrganizationResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /backend/v1/organizations/{id}:
        get:
            tags:
                - BackendService
            operationId: BackendService_GetOrganization
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetOrganizationResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - BackendService
            operationId: BackendService_DeleteOrganization
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteOrganizationResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - BackendService
            operationId: BackendService_UpdateOrganization
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Organization'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateOrganizationResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /backend/v1/project:
        get:
            tags:
                - BackendService
            operationId: BackendService_GetProject
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetProjectResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - BackendService
            operationId: BackendService_UpdateProject
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Project'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateProjectResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /backend/v1/saml-connections:
        get:
            tags:
                - BackendService
            operationId: BackendService_ListSAMLConnections
            parameters:
                - name: organizationId
                  in: query
                  schema:
                    type: string
                - name: pageToken
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListSAMLConnectionsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - BackendService
            operationId: BackendService_CreateSAMLConnection
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SAMLConnection'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateSAMLConnectionResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /backend/v1/saml-connections/{id}:
        get:
            tags:
                - BackendService
            operationId: BackendService_GetSAMLConnection
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetSAMLConnectionResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - BackendService
            operationId: BackendService_DeleteSAMLConnection
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteSAMLConnectionResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - BackendService
            operationId: BackendService_UpdateSAMLConnection
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SAMLConnection'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateSAMLConnectionResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /backend/v1/scim-api-keys:
        get:
            tags:
                - BackendService
            operationId: BackendService_ListSCIMAPIKeys
            parameters:
                - name: organizationId
                  in: query
                  schema:
                    type: string
                - name: pageToken
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListSCIMAPIKeysResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - BackendService
            operationId: BackendService_CreateSCIMAPIKey
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SCIMAPIKey'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateSCIMAPIKeyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /backend/v1/scim-api-keys/{id}:
        get:
            tags:
                - BackendService
            operationId: BackendService_GetSCIMAPIKey
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetSCIMAPIKeyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - BackendService
            operationId: BackendService_DeleteSCIMAPIKey
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteSCIMAPIKeyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - BackendService
            operationId: BackendService_UpdateSCIMAPIKey
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SCIMAPIKey'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateSCIMAPIKeyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /backend/v1/scim-api-keys/{id}/revoke:
        post:
            tags:
                - BackendService
            operationId: BackendService_RevokeSCIMAPIKey
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RevokeSCIMAPIKeyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /backend/v1/users:
        get:
            tags:
                - BackendService
            description: Gets a list of users.
            operationId: BackendService_ListUsers
            parameters:
                - name: organizationId
                  in: query
                  description: The organization ID to use for filtering.
                  schema:
                    type: string
                - name: pageToken
                  in: query
                  description: The page token to use for pagination.
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUsersResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - BackendService
            description: Creates a user.
            operationId: BackendService_CreateUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/User'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /backend/v1/users/{id}:
        get:
            tags:
                - BackendService
            description: Gets a user.
            operationId: BackendService_GetUser
            parameters:
                - name: id
                  in: path
                  description: The ID of the user to get.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - BackendService
            description: Updates a user.
            operationId: BackendService_UpdateUser
            parameters:
                - name: id
                  in: path
                  description: The ID of the user to update.
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/User'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /backend/v1/users/{id}/password:
        patch:
            tags:
                - BackendService
            description: Updates a user's password.
            operationId: BackendService_UpdateUserPassword
            parameters:
                - name: id
                  in: path
                  description: The ID of the user to update.
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateUserPasswordRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        CreateOrganizationResponse:
            type: object
            properties:
                organization:
                    $ref: '#/components/schemas/Organization'
        CreateSAMLConnectionResponse:
            type: object
            properties:
                samlConnection:
                    $ref: '#/components/schemas/SAMLConnection'
        CreateSCIMAPIKeyResponse:
            type: object
            properties:
                scimApiKey:
                    $ref: '#/components/schemas/SCIMAPIKey'
        DeleteOrganizationResponse:
            type: object
            properties: {}
        DeleteSAMLConnectionResponse:
            type: object
            properties: {}
        DeleteSCIMAPIKeyResponse:
            type: object
            properties: {}
        GetOrganizationResponse:
            type: object
            properties:
                organization:
                    $ref: '#/components/schemas/Organization'
        GetProjectResponse:
            type: object
            properties:
                project:
                    $ref: '#/components/schemas/Project'
        GetSAMLConnectionResponse:
            type: object
            properties:
                samlConnection:
                    $ref: '#/components/schemas/SAMLConnection'
        GetSCIMAPIKeyResponse:
            type: object
            properties:
                scimApiKey:
                    $ref: '#/components/schemas/SCIMAPIKey'
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        ListOrganizationsResponse:
            type: object
            properties:
                organizations:
                    type: array
                    items:
                        $ref: '#/components/schemas/Organization'
                nextPageToken:
                    type: string
        ListSAMLConnectionsResponse:
            type: object
            properties:
                samlConnections:
                    type: array
                    items:
                        $ref: '#/components/schemas/SAMLConnection'
                nextPageToken:
                    type: string
        ListSCIMAPIKeysResponse:
            type: object
            properties:
                scimApiKeys:
                    type: array
                    items:
                        $ref: '#/components/schemas/SCIMAPIKey'
                nextPageToken:
                    type: string
        ListUsersResponse:
            type: object
            properties:
                users:
                    type: array
                    items:
                        $ref: '#/components/schemas/User'
                    description: The users retrieved by the ListUsers request.
                nextPageToken:
                    type: string
                    description: The next page token to use for pagination.
        Organization:
            type: object
            properties:
                id:
                    type: string
                projectId:
                    type: string
                displayName:
                    type: string
                overrideLogInMethods:
                    type: boolean
                logInWithPasswordEnabled:
                    type: boolean
                logInWithGoogleEnabled:
                    type: boolean
                logInWithMicrosoftEnabled:
                    type: boolean
                googleHostedDomain:
                    type: string
                microsoftTenantId:
                    type: string
        Project:
            type: object
            properties:
                id:
                    type: string
                displayName:
                    type: string
                logInWithPasswordEnabled:
                    type: boolean
                logInWithGoogleEnabled:
                    type: boolean
                logInWithMicrosoftEnabled:
                    type: boolean
                googleOauthClientId:
                    type: string
                googleOauthClientSecret:
                    type: string
                microsoftOauthClientId:
                    type: string
                microsoftOauthClientSecret:
                    type: string
        RevokeSCIMAPIKeyResponse:
            type: object
            properties:
                scimApiKey:
                    $ref: '#/components/schemas/SCIMAPIKey'
        SAMLConnection:
            type: object
            properties:
                id:
                    type: string
                organizationId:
                    type: string
                primary:
                    type: boolean
                spAcsUrl:
                    type: string
                spEntityId:
                    type: string
                idpRedirectUrl:
                    type: string
                idpX509Certificate:
                    type: string
                idpEntityId:
                    type: string
        SCIMAPIKey:
            type: object
            properties:
                id:
                    type: string
                organizationId:
                    type: string
                displayName:
                    type: string
                secretToken:
                    type: string
                revoked:
                    type: boolean
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        UpdateOrganizationResponse:
            type: object
            properties:
                organization:
                    $ref: '#/components/schemas/Organization'
        UpdateProjectResponse:
            type: object
            properties:
                project:
                    $ref: '#/components/schemas/Project'
        UpdateSAMLConnectionResponse:
            type: object
            properties:
                samlConnection:
                    $ref: '#/components/schemas/SAMLConnection'
        UpdateSCIMAPIKeyResponse:
            type: object
            properties:
                scimApiKey:
                    $ref: '#/components/schemas/SCIMAPIKey'
        UpdateUserPasswordRequest:
            type: object
            properties:
                id:
                    type: string
                    description: The ID of the user to update.
                password:
                    type: string
                    description: The new password for the user.
        User:
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier for this user.
                organizationId:
                    type: string
                    description: The organization this user belongs to.
                email:
                    type: string
                    description: The user's email (verified).
                passwordBcrypt:
                    type: string
                    description: The hash of the user's password.
                googleUserId:
                    type: string
                    description: The user's Google User ID.
                microsoftUserId:
                    type: string
                    description: The user's Microsoft User ID.
tags:
    - name: BackendService
