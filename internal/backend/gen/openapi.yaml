# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: BackendService API
    version: 0.0.1
paths:
    /backend/v1/organizations:
        get:
            tags:
                - BackendService
            description: List Organizations.
            operationId: BackendService_ListOrganizations
            parameters:
                - name: pageToken
                  in: query
                  description: A pagination token. Leave empty to get the first page of results.
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListOrganizationsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - BackendService
            description: Create an Organization.
            operationId: BackendService_CreateOrganization
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Organization'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateOrganizationResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /backend/v1/organizations/{id}:
        get:
            tags:
                - BackendService
            description: Get an Organization.
            operationId: BackendService_GetOrganization
            parameters:
                - name: id
                  in: path
                  description: The Organization ID.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetOrganizationResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - BackendService
            description: Delete an Organization.
            operationId: BackendService_DeleteOrganization
            parameters:
                - name: id
                  in: path
                  description: The Organization ID.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteOrganizationResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - BackendService
            description: Update an Organization.
            operationId: BackendService_UpdateOrganization
            parameters:
                - name: id
                  in: path
                  description: The Organization ID.
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Organization'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateOrganizationResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /backend/v1/organizations/{organizationId}/domains:
        get:
            tags:
                - BackendService
            description: Get Organization Domains.
            operationId: BackendService_GetOrganizationDomains
            parameters:
                - name: organizationId
                  in: path
                  description: The Organization ID.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetOrganizationDomainsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - BackendService
            description: Update Organization Domains.
            operationId: BackendService_UpdateOrganizationDomains
            parameters:
                - name: organizationId
                  in: path
                  description: The Organization ID.
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/OrganizationDomains'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateOrganizationDomainsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /backend/v1/organizations/{organizationId}/google-hosted-domains:
        get:
            tags:
                - BackendService
            description: Get Organization Google Hosted Domains.
            operationId: BackendService_GetOrganizationGoogleHostedDomains
            parameters:
                - name: organizationId
                  in: path
                  description: The ID of the Organization.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetOrganizationGoogleHostedDomainsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - BackendService
            description: Update Organization Google Hosted Domains.
            operationId: BackendService_UpdateOrganizationGoogleHostedDomains
            parameters:
                - name: organizationId
                  in: path
                  description: The ID of the Organization.
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/OrganizationGoogleHostedDomains'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateOrganizationGoogleHostedDomainsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /backend/v1/organizations/{organizationId}/microsoft-tenant-ids:
        get:
            tags:
                - BackendService
            description: Get Organization Microsoft Tenant IDs.
            operationId: BackendService_GetOrganizationMicrosoftTenantIDs
            parameters:
                - name: organizationId
                  in: path
                  description: The ID of the Organization.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetOrganizationMicrosoftTenantIDsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - BackendService
            description: Update Organization Microsoft Tenant IDs.
            operationId: BackendService_UpdateOrganizationMicrosoftTenantIDs
            parameters:
                - name: organizationId
                  in: path
                  description: The ID of the Organization.
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/OrganizationMicrosoftTenantIDs'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateOrganizationMicrosoftTenantIDsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /backend/v1/passkeys:
        get:
            tags:
                - BackendService
            description: List Passkeys.
            operationId: BackendService_ListPasskeys
            parameters:
                - name: userId
                  in: query
                  description: The ID of the User.
                  schema:
                    type: string
                - name: pageToken
                  in: query
                  description: A pagination token. Leave empty to get the first page of results.
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListPasskeysResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /backend/v1/passkeys/{id}:
        get:
            tags:
                - BackendService
            description: Get a Passkey.
            operationId: BackendService_GetPasskey
            parameters:
                - name: id
                  in: path
                  description: The Passkey ID.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetPasskeyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - BackendService
            description: Delete a Passkey.
            operationId: BackendService_DeletePasskey
            parameters:
                - name: id
                  in: path
                  description: The Passkey ID.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeletePasskeyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - BackendService
            description: Update a Passkey.
            operationId: BackendService_UpdatePasskey
            parameters:
                - name: id
                  in: path
                  description: The Passkey ID.
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Passkey'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdatePasskeyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /backend/v1/project:
        get:
            tags:
                - BackendService
            description: Get the current project.
            operationId: BackendService_GetProject
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetProjectResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /backend/v1/saml-connections:
        get:
            tags:
                - BackendService
            description: List SAML Connections.
            operationId: BackendService_ListSAMLConnections
            parameters:
                - name: organizationId
                  in: query
                  description: The Organization ID.
                  schema:
                    type: string
                - name: pageToken
                  in: query
                  description: A pagination token. Leave empty to get the first page of results.
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListSAMLConnectionsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - BackendService
            description: Create a SAML Connection.
            operationId: BackendService_CreateSAMLConnection
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SAMLConnection'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateSAMLConnectionResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /backend/v1/saml-connections/{id}:
        get:
            tags:
                - BackendService
            description: Get a SAML Connection.
            operationId: BackendService_GetSAMLConnection
            parameters:
                - name: id
                  in: path
                  description: The SAML Connection ID.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetSAMLConnectionResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - BackendService
            description: Delete a SAML Connection.
            operationId: BackendService_DeleteSAMLConnection
            parameters:
                - name: id
                  in: path
                  description: The SAML Connection ID.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteSAMLConnectionResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - BackendService
            description: Update a SAML Connection.
            operationId: BackendService_UpdateSAMLConnection
            parameters:
                - name: id
                  in: path
                  description: The SAML Connection ID.
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SAMLConnection'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateSAMLConnectionResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /backend/v1/scim-api-keys:
        get:
            tags:
                - BackendService
            description: List SCIM API Keys.
            operationId: BackendService_ListSCIMAPIKeys
            parameters:
                - name: organizationId
                  in: query
                  description: The ID of the Organization.
                  schema:
                    type: string
                - name: pageToken
                  in: query
                  description: A pagination token. Leave empty to get the first page of results.
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListSCIMAPIKeysResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - BackendService
            description: Create a SCIM API Key.
            operationId: BackendService_CreateSCIMAPIKey
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SCIMAPIKey'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateSCIMAPIKeyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /backend/v1/scim-api-keys/{id}:
        get:
            tags:
                - BackendService
            description: Get a SCIM API Key.
            operationId: BackendService_GetSCIMAPIKey
            parameters:
                - name: id
                  in: path
                  description: The SCIM API Key ID.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetSCIMAPIKeyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - BackendService
            description: Delete a SCIM API Key.
            operationId: BackendService_DeleteSCIMAPIKey
            parameters:
                - name: id
                  in: path
                  description: The SCIM API Key ID.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteSCIMAPIKeyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - BackendService
            description: Update a SCIM API Key.
            operationId: BackendService_UpdateSCIMAPIKey
            parameters:
                - name: id
                  in: path
                  description: The SCIM API Key ID.
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SCIMAPIKey'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateSCIMAPIKeyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /backend/v1/scim-api-keys/{id}/revoke:
        post:
            tags:
                - BackendService
            description: Revoke a SCIM API Key.
            operationId: BackendService_RevokeSCIMAPIKey
            parameters:
                - name: id
                  in: path
                  description: The SCIM API Key ID.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RevokeSCIMAPIKeyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /backend/v1/sessions:
        get:
            tags:
                - BackendService
            description: List Sessions.
            operationId: BackendService_ListSessions
            parameters:
                - name: userId
                  in: query
                  description: The User ID.
                  schema:
                    type: string
                - name: pageToken
                  in: query
                  description: A pagination token. Leave empty to get the first page of results.
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListSessionsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /backend/v1/sessions/{id}:
        get:
            tags:
                - BackendService
            description: Get a Session.
            operationId: BackendService_GetSession
            parameters:
                - name: id
                  in: path
                  description: The Session ID.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetSessionResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /backend/v1/user-invites:
        get:
            tags:
                - BackendService
            description: List User Invites.
            operationId: BackendService_ListUserInvites
            parameters:
                - name: organizationId
                  in: query
                  description: The Organization ID.
                  schema:
                    type: string
                - name: pageToken
                  in: query
                  description: A pagination token. Leave empty to get the first page of results.
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUserInvitesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - BackendService
            description: Create a User Invite.
            operationId: BackendService_CreateUserInvite
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UserInvite'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateUserInviteResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /backend/v1/user-invites/{id}:
        get:
            tags:
                - BackendService
            description: Get a User Invite.
            operationId: BackendService_GetUserInvite
            parameters:
                - name: id
                  in: path
                  description: The User Invite ID.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetUserInviteResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - BackendService
            description: Delete a User Invite.
            operationId: BackendService_DeleteUserInvite
            parameters:
                - name: id
                  in: path
                  description: The User Invite ID.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteUserInviteResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /backend/v1/users:
        get:
            tags:
                - BackendService
            description: List Users.
            operationId: BackendService_ListUsers
            parameters:
                - name: organizationId
                  in: query
                  description: The Organization ID.
                  schema:
                    type: string
                - name: pageToken
                  in: query
                  description: A pagination token. Leave empty to get the first page of results.
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUsersResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - BackendService
            description: Create a User.
            operationId: BackendService_CreateUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/User'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /backend/v1/users/{id}:
        get:
            tags:
                - BackendService
            description: Get a User.
            operationId: BackendService_GetUser
            parameters:
                - name: id
                  in: path
                  description: The User ID.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - BackendService
            description: Delete a User.
            operationId: BackendService_DeleteUser
            parameters:
                - name: id
                  in: path
                  description: The User ID.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - BackendService
            description: Update a User.
            operationId: BackendService_UpdateUser
            parameters:
                - name: id
                  in: path
                  description: The User ID.
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/User'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        CreateOrganizationResponse:
            type: object
            properties:
                organization:
                    allOf:
                        - $ref: '#/components/schemas/Organization'
                    description: The Organization to create.
        CreateSAMLConnectionResponse:
            type: object
            properties:
                samlConnection:
                    allOf:
                        - $ref: '#/components/schemas/SAMLConnection'
                    description: The created SAML Connection.
        CreateSCIMAPIKeyResponse:
            type: object
            properties:
                scimApiKey:
                    allOf:
                        - $ref: '#/components/schemas/SCIMAPIKey'
                    description: The created SCIM API Key.
        CreateUserInviteResponse:
            type: object
            properties:
                userInvite:
                    allOf:
                        - $ref: '#/components/schemas/UserInvite'
                    description: The created User Invite.
        CreateUserResponse:
            type: object
            properties:
                user:
                    allOf:
                        - $ref: '#/components/schemas/User'
                    description: The created User.
        DeleteOrganizationResponse:
            type: object
            properties: {}
        DeletePasskeyResponse:
            type: object
            properties: {}
        DeleteSAMLConnectionResponse:
            type: object
            properties: {}
        DeleteSCIMAPIKeyResponse:
            type: object
            properties: {}
        DeleteUserInviteResponse:
            type: object
            properties: {}
        DeleteUserResponse:
            type: object
            properties: {}
        GetOrganizationDomainsResponse:
            type: object
            properties:
                organizationDomains:
                    allOf:
                        - $ref: '#/components/schemas/OrganizationDomains'
                    description: The requested Organization Domains.
        GetOrganizationGoogleHostedDomainsResponse:
            type: object
            properties:
                organizationGoogleHostedDomains:
                    allOf:
                        - $ref: '#/components/schemas/OrganizationGoogleHostedDomains'
                    description: The Organization's Google Hosted Domains.
        GetOrganizationMicrosoftTenantIDsResponse:
            type: object
            properties:
                organizationMicrosoftTenantIds:
                    allOf:
                        - $ref: '#/components/schemas/OrganizationMicrosoftTenantIDs'
                    description: The Organization's Microsoft Tenant IDs.
        GetOrganizationResponse:
            type: object
            properties:
                organization:
                    allOf:
                        - $ref: '#/components/schemas/Organization'
                    description: The requested Organization.
        GetPasskeyResponse:
            type: object
            properties:
                passkey:
                    allOf:
                        - $ref: '#/components/schemas/Passkey'
                    description: The requested Passkey.
        GetProjectResponse:
            type: object
            properties:
                project:
                    allOf:
                        - $ref: '#/components/schemas/Project'
                    description: The requested Project.
        GetSAMLConnectionResponse:
            type: object
            properties:
                samlConnection:
                    allOf:
                        - $ref: '#/components/schemas/SAMLConnection'
                    description: The requested SAML Connection.
        GetSCIMAPIKeyResponse:
            type: object
            properties:
                scimApiKey:
                    allOf:
                        - $ref: '#/components/schemas/SCIMAPIKey'
                    description: The requested SCIM API Key.
        GetSessionResponse:
            type: object
            properties:
                session:
                    allOf:
                        - $ref: '#/components/schemas/Session'
                    description: The requested Session.
        GetUserInviteResponse:
            type: object
            properties:
                userInvite:
                    allOf:
                        - $ref: '#/components/schemas/UserInvite'
                    description: The requested User Invite.
        GetUserResponse:
            type: object
            properties:
                user:
                    allOf:
                        - $ref: '#/components/schemas/User'
                    description: The requested User.
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        ListOrganizationsResponse:
            type: object
            properties:
                organizations:
                    type: array
                    items:
                        $ref: '#/components/schemas/Organization'
                    description: A list of Organizations.
                nextPageToken:
                    type: string
                    description: |-
                        The pagination token for the next page of results. Empty if there is no
                         next page.
        ListPasskeysResponse:
            type: object
            properties:
                passkeys:
                    type: array
                    items:
                        $ref: '#/components/schemas/Passkey'
                    description: A list of Passkeys.
                nextPageToken:
                    type: string
                    description: The pagination token for the next page of results. Empty if there is no next page.
        ListSAMLConnectionsResponse:
            type: object
            properties:
                samlConnections:
                    type: array
                    items:
                        $ref: '#/components/schemas/SAMLConnection'
                    description: A list of SAML Connections.
                nextPageToken:
                    type: string
                    description: |-
                        The pagination token for the next page of results. Empty if there is no
                         next page.
        ListSCIMAPIKeysResponse:
            type: object
            properties:
                scimApiKeys:
                    type: array
                    items:
                        $ref: '#/components/schemas/SCIMAPIKey'
                    description: A list of SCIM API Keys.
                nextPageToken:
                    type: string
                    description: |-
                        The pagination token for the next page of results. Empty if there is no
                         next page.
        ListSessionsResponse:
            type: object
            properties:
                sessions:
                    type: array
                    items:
                        $ref: '#/components/schemas/Session'
                    description: A list of Sessions.
                nextPageToken:
                    type: string
                    description: The pagination token for the next page of results. Empty if there is no next page.
        ListUserInvitesResponse:
            type: object
            properties:
                userInvites:
                    type: array
                    items:
                        $ref: '#/components/schemas/UserInvite'
                    description: A list of User Invites.
                nextPageToken:
                    type: string
                    description: The pagination token for the next page of results. Empty if there is no next page.
        ListUsersResponse:
            type: object
            properties:
                users:
                    type: array
                    items:
                        $ref: '#/components/schemas/User'
                    description: A list of Users.
                nextPageToken:
                    type: string
                    description: The pagination token for the next page of results. Empty if there is no next page.
        Organization:
            type: object
            properties:
                id:
                    type: string
                    description: The Organization ID. Starts with `org_...`.
                displayName:
                    type: string
                    description: A human-friendly name for the Organization.
                createTime:
                    type: string
                    description: When the Organization was created.
                    format: date-time
                updateTime:
                    type: string
                    description: When the Organization was last updated.
                    format: date-time
                logInWithGoogle:
                    type: boolean
                    description: Whether the Organization supports "Log in with Google".
                logInWithMicrosoft:
                    type: boolean
                    description: Whether the Organization supports "Log in with Microsoft".
                logInWithEmail:
                    type: boolean
                    description: Whether the Organization supports "Log in with email".
                logInWithPassword:
                    type: boolean
                    description: Whether the Organization supports "Log in with password".
                logInWithSaml:
                    type: boolean
                    description: Whether the Organization supports "Log in with SAML".
                logInWithAuthenticatorApp:
                    type: boolean
                    description: Whether the Organization supports authenticator apps as a secondary auth factor.
                logInWithPasskey:
                    type: boolean
                    description: Whether the Organization supports passkeys as a secondary auth factor.
                requireMfa:
                    type: boolean
                    description: Whether the Organization requires a secondary auth factor.
                scimEnabled:
                    type: boolean
                    description: Whether the Organization has SCIM enabled.
            description: An Organization represents one of your corporate customers.
        OrganizationDomains:
            type: object
            properties:
                organizationId:
                    type: string
                    description: The ID of the Organization.
                domains:
                    type: array
                    items:
                        type: string
                    description: |-
                        A list of domains associated with the organization.

                         When an Organization uses SAML or SCIM, only emails from this list are
                         permitted.
            description: OrganizationDomains defines the domains associated with an Organization.
        OrganizationGoogleHostedDomains:
            type: object
            properties:
                organizationId:
                    type: string
                    description: The ID of the Organization.
                googleHostedDomains:
                    type: array
                    items:
                        type: string
                    description: |-
                        A list of Google-hosted domains associated with the organization.

                         These values correspond to Google OAuth `hd` claims:

                         https://developers.google.com/identity/openid-connect/openid-connect#obtainuserinfo
            description: |-
                OrganizationGoogleHostedDomains represents the Google Hosted Domains ("HDs")
                 associated with an Organization.
        OrganizationMicrosoftTenantIDs:
            type: object
            properties:
                organizationId:
                    type: string
                    description: The ID of the Organization.
                microsoftTenantIds:
                    type: array
                    items:
                        type: string
                    description: |-
                        A list of Microsoft Tenant IDs associated with the organization.

                         These values correspond to Microsoft OAuth `tid` claims:

                         https://learn.microsoft.com/en-us/entra/identity-platform/id-token-claims-reference
            description: |-
                OrganizationMicrosoftTenantIDs represents the Microsoft Tenant IDs ("TIDs")
                 associated with an Organization.
        Passkey:
            type: object
            properties:
                id:
                    type: string
                    description: The Passkey ID. Starts with `passkey_...`.
                userId:
                    type: string
                    description: The User this Passkey belongs to.
                createTime:
                    type: string
                    description: The timestamp of when the Passkey was created.
                    format: date-time
                updateTime:
                    type: string
                    description: The timestamp of when the Passkey was last updated.
                    format: date-time
                disabled:
                    type: boolean
                    description: Indicates whether the Passkey is disabled.
                credentialId:
                    type: string
                    description: The unique credential ID for the Passkey, as a binary value.
                    format: bytes
                publicKeyPkix:
                    type: string
                    description: |-
                        The public key associated with the Passkey, in PEM-encoded PKIX format.

                         Starts with `-----BEGIN PUBLIC KEY-----`.
                aaguid:
                    type: string
                    description: The Authenticator Attestation GUID (AAGUID) for the Passkey.
                rpId:
                    type: string
                    description: The relying party ID associated with the Passkey.
            description: Passkey represents a WebAuthn public key credential registered by a User.
        Project:
            type: object
            properties:
                id:
                    type: string
                    description: The Project ID. Starts with `project_...`.
                displayName:
                    type: string
                    description: A human-friendly name for the Project.
                createTime:
                    type: string
                    description: When the Project was created.
                    format: date-time
                updateTime:
                    type: string
                    description: When the Project was last modified.
                    format: date-time
                logInWithGoogle:
                    type: boolean
                    description: Whether the Project supports "Log in with Google".
                logInWithMicrosoft:
                    type: boolean
                    description: Whether the Project supports "Log in with Microsoft".
                logInWithEmail:
                    type: boolean
                    description: Whether the Project supports "Log in with email".
                logInWithPassword:
                    type: boolean
                    description: Whether the Project supports "Log in with password".
                logInWithSaml:
                    type: boolean
                    description: Whether the Project supports "Log in with SAML".
                logInWithAuthenticatorApp:
                    type: boolean
                    description: Whether the Project supports authenticator apps as a secondary auth factor.
                logInWithPasskey:
                    type: boolean
                    description: Whether the Project supports passkeys as a secondary auth factor.
                googleOauthClientId:
                    type: string
                    description: The OAuth Client ID to use for "Log in with Google".
                googleOauthClientSecret:
                    type: string
                    description: |-
                        The OAuth Client Secret to use for "Log in with Google".

                         This field is write-only.
                microsoftOauthClientId:
                    type: string
                    description: The OAuth Client ID to use for "Log in with Microsoft".
                microsoftOauthClientSecret:
                    type: string
                    description: |-
                        The OAuth Client Secret to use for "Log in with Microsoft".

                         This field is write-only.
                vaultDomain:
                    type: string
                    description: The domain where the Project's Vault lives.
                trustedDomains:
                    type: array
                    items:
                        type: string
                    description: |-
                        The set of domains the Project trusts.

                         Client-side JavaScript on these domains can take actions on behalf of
                         logged-in Users.
                redirectUri:
                    type: string
                    description: Where Users are redirected after returning from the Vault.
                afterLoginRedirectUri:
                    type: string
                    description: Where Users are redirected after logging in.
                afterSignupRedirectUri:
                    type: string
                    description: Where Users are redirected after signing up.
                emailSendFromDomain:
                    type: string
                    description: Emails sent to Users come from this domain.
            description: |-
                Projects are the top-level object in Tesseral.

                 Everything in Tesseral happens within the context of a Project.
        RevokeSCIMAPIKeyResponse:
            type: object
            properties:
                scimApiKey:
                    allOf:
                        - $ref: '#/components/schemas/SCIMAPIKey'
                    description: The revoked SCIM API Key.
        SAMLConnection:
            type: object
            properties:
                id:
                    type: string
                    description: The SAML Connection ID. Starts with `saml_connection_...`.
                organizationId:
                    type: string
                    description: The Organization this SAML Connection belongs to.
                createTime:
                    type: string
                    description: When the SAML Connection was created.
                    format: date-time
                updateTime:
                    type: string
                    description: When the SAML Connection was last updated.
                    format: date-time
                primary:
                    type: boolean
                    description: Whether this is the primary SAML Connection for the Organization.
                spAcsUrl:
                    type: string
                    description: The Service Provider Assertion Consumer Service (ACS) URL.
                spEntityId:
                    type: string
                    description: The Service Provider Entity ID.
                idpRedirectUrl:
                    type: string
                    description: The Identity Provider Redirect URL.
                idpX509Certificate:
                    type: string
                    description: |-
                        The Identity Provider certificate, in PEM-encoded X.509 format.

                         Starts with `----BEGIN CERTIFICATE----`.
                idpEntityId:
                    type: string
                    description: The Identity Provider Entity ID.
            description: SAMLConnection represents a SAML configuration for an Organization.
        SCIMAPIKey:
            type: object
            properties:
                id:
                    type: string
                    description: The SCIM API Key ID. Starts with `scim_api_key_...`.
                organizationId:
                    type: string
                    description: The Organization this SCIM API Key belongs to.
                createTime:
                    type: string
                    description: When the SCIM API Key was created.
                    format: date-time
                updateTime:
                    type: string
                    description: When the SCIM API Key was last updated.
                    format: date-time
                displayName:
                    type: string
                    description: A human-readable display name for this SCIM API Key.
                secretToken:
                    type: string
                    description: The secret token for this SCIM API Key.
                revoked:
                    type: boolean
                    description: Whether this SCIM API Key is revoked.
            description: SCIMAPIKey represents an API key for SCIM operations.
        Session:
            type: object
            properties:
                id:
                    type: string
                    description: The Session ID. Starts with `session_...`.
                userId:
                    type: string
                    description: The User this Session belongs to.
                revoked:
                    type: boolean
                    description: Whether the Session is revoked.
                createTime:
                    type: string
                    description: When the Session was created.
                    format: date-time
                lastActiveTime:
                    type: string
                    description: When the Session was last active.
                    format: date-time
                expireTime:
                    type: string
                    description: When the Session expires.
                    format: date-time
            description: Represents a Session for a logged-in User.
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        UpdateOrganizationDomainsResponse:
            type: object
            properties:
                organizationDomains:
                    allOf:
                        - $ref: '#/components/schemas/OrganizationDomains'
                    description: The updated Organization Domains.
        UpdateOrganizationGoogleHostedDomainsResponse:
            type: object
            properties:
                organizationGoogleHostedDomains:
                    allOf:
                        - $ref: '#/components/schemas/OrganizationGoogleHostedDomains'
                    description: The updated Google Hosted Domains for the Organization.
        UpdateOrganizationMicrosoftTenantIDsResponse:
            type: object
            properties:
                organizationMicrosoftTenantIds:
                    allOf:
                        - $ref: '#/components/schemas/OrganizationMicrosoftTenantIDs'
                    description: The updated Microsoft Tenant IDs for the Organization.
        UpdateOrganizationResponse:
            type: object
            properties:
                organization:
                    allOf:
                        - $ref: '#/components/schemas/Organization'
                    description: The updated Organization.
        UpdatePasskeyResponse:
            type: object
            properties:
                passkey:
                    allOf:
                        - $ref: '#/components/schemas/Passkey'
                    description: The updated Passkey.
        UpdateSAMLConnectionResponse:
            type: object
            properties:
                samlConnection:
                    allOf:
                        - $ref: '#/components/schemas/SAMLConnection'
                    description: The updated SAML Connection.
        UpdateSCIMAPIKeyResponse:
            type: object
            properties:
                scimApiKey:
                    allOf:
                        - $ref: '#/components/schemas/SCIMAPIKey'
                    description: The updated SCIM API Key.
        UpdateUserResponse:
            type: object
            properties:
                user:
                    allOf:
                        - $ref: '#/components/schemas/User'
                    description: The updated User.
        User:
            type: object
            properties:
                id:
                    type: string
                    description: The User ID. Starts with `user_...`.
                organizationId:
                    type: string
                    description: The Organization this User belongs to.
                email:
                    type: string
                    description: |-
                        The User's email address.

                         This email is verified and unique within the Organization. Two Users in
                         different Organizations may have the same email.
                createTime:
                    type: string
                    description: When the User was created.
                    format: date-time
                updateTime:
                    type: string
                    description: When the User was last updated.
                    format: date-time
                owner:
                    type: boolean
                    description: Whether the User is an owner of their Organization.
                googleUserId:
                    type: string
                    description: The Google User ID, if the User has ever logged in with Google.
                microsoftUserId:
                    type: string
                    description: The Microsoft User ID, if the User has ever logged in with Microsoft.
                hasAuthenticatorApp:
                    type: boolean
                    description: Whether the User has an authenticator app set up.
            description: A User represents an individual working for one of your corporate customers.
        UserInvite:
            type: object
            properties:
                id:
                    type: string
                    description: The User Invite ID. Starts with `user_invite_...`.
                organizationId:
                    type: string
                    description: The Organization this User Invite belongs to.
                createTime:
                    type: string
                    description: When the User Invite was created.
                    format: date-time
                updateTime:
                    type: string
                    description: When the User Invite was last updated.
                    format: date-time
                email:
                    type: string
                    description: The invitee's email address.
                owner:
                    type: boolean
                    description: |-
                        Indicates whether the invited User will have owner privileges in the
                         Organization.
            description: UserInvite represents an invitation for a User to join an Organization.
tags:
    - name: BackendService
