// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: tesseral/frontend/v1/audit_log_events.proto

package frontendv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type APIKeyRoleAssignmentCreated struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	RoleAssignment *APIKeyRoleAssignment  `protobuf:"bytes,1,opt,name=role_assignment,json=roleAssignment,proto3" json:"role_assignment,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *APIKeyRoleAssignmentCreated) Reset() {
	*x = APIKeyRoleAssignmentCreated{}
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *APIKeyRoleAssignmentCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIKeyRoleAssignmentCreated) ProtoMessage() {}

func (x *APIKeyRoleAssignmentCreated) ProtoReflect() protoreflect.Message {
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIKeyRoleAssignmentCreated.ProtoReflect.Descriptor instead.
func (*APIKeyRoleAssignmentCreated) Descriptor() ([]byte, []int) {
	return file_tesseral_frontend_v1_audit_log_events_proto_rawDescGZIP(), []int{0}
}

func (x *APIKeyRoleAssignmentCreated) GetRoleAssignment() *APIKeyRoleAssignment {
	if x != nil {
		return x.RoleAssignment
	}
	return nil
}

type APIKeyRoleAssignmentDeleted struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	RoleAssignment *APIKeyRoleAssignment  `protobuf:"bytes,1,opt,name=role_assignment,json=roleAssignment,proto3" json:"role_assignment,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *APIKeyRoleAssignmentDeleted) Reset() {
	*x = APIKeyRoleAssignmentDeleted{}
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *APIKeyRoleAssignmentDeleted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIKeyRoleAssignmentDeleted) ProtoMessage() {}

func (x *APIKeyRoleAssignmentDeleted) ProtoReflect() protoreflect.Message {
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIKeyRoleAssignmentDeleted.ProtoReflect.Descriptor instead.
func (*APIKeyRoleAssignmentDeleted) Descriptor() ([]byte, []int) {
	return file_tesseral_frontend_v1_audit_log_events_proto_rawDescGZIP(), []int{1}
}

func (x *APIKeyRoleAssignmentDeleted) GetRoleAssignment() *APIKeyRoleAssignment {
	if x != nil {
		return x.RoleAssignment
	}
	return nil
}

type APIKeyRoleAssignmentUpdated struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	RoleAssignment         *APIKeyRoleAssignment  `protobuf:"bytes,1,opt,name=role_assignment,json=roleAssignment,proto3" json:"role_assignment,omitempty"`
	PreviousRoleAssignment *APIKeyRoleAssignment  `protobuf:"bytes,2,opt,name=previous_role_assignment,json=previousRoleAssignment,proto3" json:"previous_role_assignment,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *APIKeyRoleAssignmentUpdated) Reset() {
	*x = APIKeyRoleAssignmentUpdated{}
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *APIKeyRoleAssignmentUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIKeyRoleAssignmentUpdated) ProtoMessage() {}

func (x *APIKeyRoleAssignmentUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIKeyRoleAssignmentUpdated.ProtoReflect.Descriptor instead.
func (*APIKeyRoleAssignmentUpdated) Descriptor() ([]byte, []int) {
	return file_tesseral_frontend_v1_audit_log_events_proto_rawDescGZIP(), []int{2}
}

func (x *APIKeyRoleAssignmentUpdated) GetRoleAssignment() *APIKeyRoleAssignment {
	if x != nil {
		return x.RoleAssignment
	}
	return nil
}

func (x *APIKeyRoleAssignmentUpdated) GetPreviousRoleAssignment() *APIKeyRoleAssignment {
	if x != nil {
		return x.PreviousRoleAssignment
	}
	return nil
}

type APIKeyCreated struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ApiKey        *APIKey                `protobuf:"bytes,1,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *APIKeyCreated) Reset() {
	*x = APIKeyCreated{}
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *APIKeyCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIKeyCreated) ProtoMessage() {}

func (x *APIKeyCreated) ProtoReflect() protoreflect.Message {
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIKeyCreated.ProtoReflect.Descriptor instead.
func (*APIKeyCreated) Descriptor() ([]byte, []int) {
	return file_tesseral_frontend_v1_audit_log_events_proto_rawDescGZIP(), []int{3}
}

func (x *APIKeyCreated) GetApiKey() *APIKey {
	if x != nil {
		return x.ApiKey
	}
	return nil
}

type APIKeyDeleted struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ApiKey        *APIKey                `protobuf:"bytes,1,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *APIKeyDeleted) Reset() {
	*x = APIKeyDeleted{}
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *APIKeyDeleted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIKeyDeleted) ProtoMessage() {}

func (x *APIKeyDeleted) ProtoReflect() protoreflect.Message {
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIKeyDeleted.ProtoReflect.Descriptor instead.
func (*APIKeyDeleted) Descriptor() ([]byte, []int) {
	return file_tesseral_frontend_v1_audit_log_events_proto_rawDescGZIP(), []int{4}
}

func (x *APIKeyDeleted) GetApiKey() *APIKey {
	if x != nil {
		return x.ApiKey
	}
	return nil
}

type APIKeyRevoked struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ApiKey         *APIKey                `protobuf:"bytes,1,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	PreviousApiKey *APIKey                `protobuf:"bytes,2,opt,name=previous_api_key,json=previousApiKey,proto3" json:"previous_api_key,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *APIKeyRevoked) Reset() {
	*x = APIKeyRevoked{}
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *APIKeyRevoked) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIKeyRevoked) ProtoMessage() {}

func (x *APIKeyRevoked) ProtoReflect() protoreflect.Message {
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIKeyRevoked.ProtoReflect.Descriptor instead.
func (*APIKeyRevoked) Descriptor() ([]byte, []int) {
	return file_tesseral_frontend_v1_audit_log_events_proto_rawDescGZIP(), []int{5}
}

func (x *APIKeyRevoked) GetApiKey() *APIKey {
	if x != nil {
		return x.ApiKey
	}
	return nil
}

func (x *APIKeyRevoked) GetPreviousApiKey() *APIKey {
	if x != nil {
		return x.PreviousApiKey
	}
	return nil
}

type APIKeyUpdated struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ApiKey         *APIKey                `protobuf:"bytes,1,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	PreviousApiKey *APIKey                `protobuf:"bytes,2,opt,name=previous_api_key,json=previousApiKey,proto3" json:"previous_api_key,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *APIKeyUpdated) Reset() {
	*x = APIKeyUpdated{}
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *APIKeyUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIKeyUpdated) ProtoMessage() {}

func (x *APIKeyUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIKeyUpdated.ProtoReflect.Descriptor instead.
func (*APIKeyUpdated) Descriptor() ([]byte, []int) {
	return file_tesseral_frontend_v1_audit_log_events_proto_rawDescGZIP(), []int{6}
}

func (x *APIKeyUpdated) GetApiKey() *APIKey {
	if x != nil {
		return x.ApiKey
	}
	return nil
}

func (x *APIKeyUpdated) GetPreviousApiKey() *APIKey {
	if x != nil {
		return x.PreviousApiKey
	}
	return nil
}

type OrganizationCreated struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Organization  *Organization          `protobuf:"bytes,1,opt,name=organization,proto3" json:"organization,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrganizationCreated) Reset() {
	*x = OrganizationCreated{}
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrganizationCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrganizationCreated) ProtoMessage() {}

func (x *OrganizationCreated) ProtoReflect() protoreflect.Message {
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrganizationCreated.ProtoReflect.Descriptor instead.
func (*OrganizationCreated) Descriptor() ([]byte, []int) {
	return file_tesseral_frontend_v1_audit_log_events_proto_rawDescGZIP(), []int{7}
}

func (x *OrganizationCreated) GetOrganization() *Organization {
	if x != nil {
		return x.Organization
	}
	return nil
}

type OrganizationDeleted struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Organization  *Organization          `protobuf:"bytes,1,opt,name=organization,proto3" json:"organization,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OrganizationDeleted) Reset() {
	*x = OrganizationDeleted{}
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrganizationDeleted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrganizationDeleted) ProtoMessage() {}

func (x *OrganizationDeleted) ProtoReflect() protoreflect.Message {
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrganizationDeleted.ProtoReflect.Descriptor instead.
func (*OrganizationDeleted) Descriptor() ([]byte, []int) {
	return file_tesseral_frontend_v1_audit_log_events_proto_rawDescGZIP(), []int{8}
}

func (x *OrganizationDeleted) GetOrganization() *Organization {
	if x != nil {
		return x.Organization
	}
	return nil
}

type OrganizationUpdated struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Organization         *Organization          `protobuf:"bytes,1,opt,name=organization,proto3" json:"organization,omitempty"`
	PreviousOrganization *Organization          `protobuf:"bytes,2,opt,name=previous_organization,json=previousOrganization,proto3" json:"previous_organization,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *OrganizationUpdated) Reset() {
	*x = OrganizationUpdated{}
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrganizationUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrganizationUpdated) ProtoMessage() {}

func (x *OrganizationUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrganizationUpdated.ProtoReflect.Descriptor instead.
func (*OrganizationUpdated) Descriptor() ([]byte, []int) {
	return file_tesseral_frontend_v1_audit_log_events_proto_rawDescGZIP(), []int{9}
}

func (x *OrganizationUpdated) GetOrganization() *Organization {
	if x != nil {
		return x.Organization
	}
	return nil
}

func (x *OrganizationUpdated) GetPreviousOrganization() *Organization {
	if x != nil {
		return x.PreviousOrganization
	}
	return nil
}

type OrganizationGoogleHostedDomainsUpdated struct {
	state                       protoimpl.MessageState `protogen:"open.v1"`
	GoogleHostedDomains         []string               `protobuf:"bytes,1,rep,name=google_hosted_domains,json=googleHostedDomains,proto3" json:"google_hosted_domains,omitempty"`
	PreviousGoogleHostedDomains []string               `protobuf:"bytes,2,rep,name=previous_google_hosted_domains,json=previousGoogleHostedDomains,proto3" json:"previous_google_hosted_domains,omitempty"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *OrganizationGoogleHostedDomainsUpdated) Reset() {
	*x = OrganizationGoogleHostedDomainsUpdated{}
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrganizationGoogleHostedDomainsUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrganizationGoogleHostedDomainsUpdated) ProtoMessage() {}

func (x *OrganizationGoogleHostedDomainsUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrganizationGoogleHostedDomainsUpdated.ProtoReflect.Descriptor instead.
func (*OrganizationGoogleHostedDomainsUpdated) Descriptor() ([]byte, []int) {
	return file_tesseral_frontend_v1_audit_log_events_proto_rawDescGZIP(), []int{10}
}

func (x *OrganizationGoogleHostedDomainsUpdated) GetGoogleHostedDomains() []string {
	if x != nil {
		return x.GoogleHostedDomains
	}
	return nil
}

func (x *OrganizationGoogleHostedDomainsUpdated) GetPreviousGoogleHostedDomains() []string {
	if x != nil {
		return x.PreviousGoogleHostedDomains
	}
	return nil
}

type OrganizationMicrosoftTenantIDsUpdated struct {
	state                      protoimpl.MessageState `protogen:"open.v1"`
	MicrosoftTenantIds         []string               `protobuf:"bytes,1,rep,name=microsoft_tenant_ids,json=microsoftTenantIds,proto3" json:"microsoft_tenant_ids,omitempty"`
	PreviousMicrosoftTenantIds []string               `protobuf:"bytes,2,rep,name=previous_microsoft_tenant_ids,json=previousMicrosoftTenantIds,proto3" json:"previous_microsoft_tenant_ids,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *OrganizationMicrosoftTenantIDsUpdated) Reset() {
	*x = OrganizationMicrosoftTenantIDsUpdated{}
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrganizationMicrosoftTenantIDsUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrganizationMicrosoftTenantIDsUpdated) ProtoMessage() {}

func (x *OrganizationMicrosoftTenantIDsUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrganizationMicrosoftTenantIDsUpdated.ProtoReflect.Descriptor instead.
func (*OrganizationMicrosoftTenantIDsUpdated) Descriptor() ([]byte, []int) {
	return file_tesseral_frontend_v1_audit_log_events_proto_rawDescGZIP(), []int{11}
}

func (x *OrganizationMicrosoftTenantIDsUpdated) GetMicrosoftTenantIds() []string {
	if x != nil {
		return x.MicrosoftTenantIds
	}
	return nil
}

func (x *OrganizationMicrosoftTenantIDsUpdated) GetPreviousMicrosoftTenantIds() []string {
	if x != nil {
		return x.PreviousMicrosoftTenantIds
	}
	return nil
}

type PasskeyCreated struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Passkey       *Passkey               `protobuf:"bytes,1,opt,name=passkey,proto3" json:"passkey,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PasskeyCreated) Reset() {
	*x = PasskeyCreated{}
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PasskeyCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PasskeyCreated) ProtoMessage() {}

func (x *PasskeyCreated) ProtoReflect() protoreflect.Message {
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PasskeyCreated.ProtoReflect.Descriptor instead.
func (*PasskeyCreated) Descriptor() ([]byte, []int) {
	return file_tesseral_frontend_v1_audit_log_events_proto_rawDescGZIP(), []int{12}
}

func (x *PasskeyCreated) GetPasskey() *Passkey {
	if x != nil {
		return x.Passkey
	}
	return nil
}

type PasskeyDeleted struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Passkey       *Passkey               `protobuf:"bytes,1,opt,name=passkey,proto3" json:"passkey,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PasskeyDeleted) Reset() {
	*x = PasskeyDeleted{}
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PasskeyDeleted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PasskeyDeleted) ProtoMessage() {}

func (x *PasskeyDeleted) ProtoReflect() protoreflect.Message {
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PasskeyDeleted.ProtoReflect.Descriptor instead.
func (*PasskeyDeleted) Descriptor() ([]byte, []int) {
	return file_tesseral_frontend_v1_audit_log_events_proto_rawDescGZIP(), []int{13}
}

func (x *PasskeyDeleted) GetPasskey() *Passkey {
	if x != nil {
		return x.Passkey
	}
	return nil
}

type RoleCreated struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Role          *Role                  `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RoleCreated) Reset() {
	*x = RoleCreated{}
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoleCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleCreated) ProtoMessage() {}

func (x *RoleCreated) ProtoReflect() protoreflect.Message {
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleCreated.ProtoReflect.Descriptor instead.
func (*RoleCreated) Descriptor() ([]byte, []int) {
	return file_tesseral_frontend_v1_audit_log_events_proto_rawDescGZIP(), []int{14}
}

func (x *RoleCreated) GetRole() *Role {
	if x != nil {
		return x.Role
	}
	return nil
}

type RoleDeleted struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Role          *Role                  `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RoleDeleted) Reset() {
	*x = RoleDeleted{}
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoleDeleted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleDeleted) ProtoMessage() {}

func (x *RoleDeleted) ProtoReflect() protoreflect.Message {
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleDeleted.ProtoReflect.Descriptor instead.
func (*RoleDeleted) Descriptor() ([]byte, []int) {
	return file_tesseral_frontend_v1_audit_log_events_proto_rawDescGZIP(), []int{15}
}

func (x *RoleDeleted) GetRole() *Role {
	if x != nil {
		return x.Role
	}
	return nil
}

type RoleUpdated struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Role          *Role                  `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	PreviousRole  *Role                  `protobuf:"bytes,2,opt,name=previous_role,json=previousRole,proto3" json:"previous_role,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RoleUpdated) Reset() {
	*x = RoleUpdated{}
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoleUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleUpdated) ProtoMessage() {}

func (x *RoleUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleUpdated.ProtoReflect.Descriptor instead.
func (*RoleUpdated) Descriptor() ([]byte, []int) {
	return file_tesseral_frontend_v1_audit_log_events_proto_rawDescGZIP(), []int{16}
}

func (x *RoleUpdated) GetRole() *Role {
	if x != nil {
		return x.Role
	}
	return nil
}

func (x *RoleUpdated) GetPreviousRole() *Role {
	if x != nil {
		return x.PreviousRole
	}
	return nil
}

type SAMLConnectionCreated struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SamlConnection *SAMLConnection        `protobuf:"bytes,1,opt,name=saml_connection,json=samlConnection,proto3" json:"saml_connection,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SAMLConnectionCreated) Reset() {
	*x = SAMLConnectionCreated{}
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SAMLConnectionCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SAMLConnectionCreated) ProtoMessage() {}

func (x *SAMLConnectionCreated) ProtoReflect() protoreflect.Message {
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SAMLConnectionCreated.ProtoReflect.Descriptor instead.
func (*SAMLConnectionCreated) Descriptor() ([]byte, []int) {
	return file_tesseral_frontend_v1_audit_log_events_proto_rawDescGZIP(), []int{17}
}

func (x *SAMLConnectionCreated) GetSamlConnection() *SAMLConnection {
	if x != nil {
		return x.SamlConnection
	}
	return nil
}

type SAMLConnectionDeleted struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SamlConnection *SAMLConnection        `protobuf:"bytes,1,opt,name=saml_connection,json=samlConnection,proto3" json:"saml_connection,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SAMLConnectionDeleted) Reset() {
	*x = SAMLConnectionDeleted{}
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SAMLConnectionDeleted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SAMLConnectionDeleted) ProtoMessage() {}

func (x *SAMLConnectionDeleted) ProtoReflect() protoreflect.Message {
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SAMLConnectionDeleted.ProtoReflect.Descriptor instead.
func (*SAMLConnectionDeleted) Descriptor() ([]byte, []int) {
	return file_tesseral_frontend_v1_audit_log_events_proto_rawDescGZIP(), []int{18}
}

func (x *SAMLConnectionDeleted) GetSamlConnection() *SAMLConnection {
	if x != nil {
		return x.SamlConnection
	}
	return nil
}

type SAMLConnectionUpdated struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	SamlConnection         *SAMLConnection        `protobuf:"bytes,1,opt,name=saml_connection,json=samlConnection,proto3" json:"saml_connection,omitempty"`
	PreviousSamlConnection *SAMLConnection        `protobuf:"bytes,2,opt,name=previous_saml_connection,json=previousSamlConnection,proto3" json:"previous_saml_connection,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *SAMLConnectionUpdated) Reset() {
	*x = SAMLConnectionUpdated{}
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SAMLConnectionUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SAMLConnectionUpdated) ProtoMessage() {}

func (x *SAMLConnectionUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SAMLConnectionUpdated.ProtoReflect.Descriptor instead.
func (*SAMLConnectionUpdated) Descriptor() ([]byte, []int) {
	return file_tesseral_frontend_v1_audit_log_events_proto_rawDescGZIP(), []int{19}
}

func (x *SAMLConnectionUpdated) GetSamlConnection() *SAMLConnection {
	if x != nil {
		return x.SamlConnection
	}
	return nil
}

func (x *SAMLConnectionUpdated) GetPreviousSamlConnection() *SAMLConnection {
	if x != nil {
		return x.PreviousSamlConnection
	}
	return nil
}

type SessionRefreshed struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Session       *Session               `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SessionRefreshed) Reset() {
	*x = SessionRefreshed{}
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SessionRefreshed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionRefreshed) ProtoMessage() {}

func (x *SessionRefreshed) ProtoReflect() protoreflect.Message {
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionRefreshed.ProtoReflect.Descriptor instead.
func (*SessionRefreshed) Descriptor() ([]byte, []int) {
	return file_tesseral_frontend_v1_audit_log_events_proto_rawDescGZIP(), []int{20}
}

func (x *SessionRefreshed) GetSession() *Session {
	if x != nil {
		return x.Session
	}
	return nil
}

type SCIMAPIKeyCreated struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ScimApiKey    *SCIMAPIKey            `protobuf:"bytes,1,opt,name=scim_api_key,json=scimApiKey,proto3" json:"scim_api_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SCIMAPIKeyCreated) Reset() {
	*x = SCIMAPIKeyCreated{}
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SCIMAPIKeyCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCIMAPIKeyCreated) ProtoMessage() {}

func (x *SCIMAPIKeyCreated) ProtoReflect() protoreflect.Message {
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCIMAPIKeyCreated.ProtoReflect.Descriptor instead.
func (*SCIMAPIKeyCreated) Descriptor() ([]byte, []int) {
	return file_tesseral_frontend_v1_audit_log_events_proto_rawDescGZIP(), []int{21}
}

func (x *SCIMAPIKeyCreated) GetScimApiKey() *SCIMAPIKey {
	if x != nil {
		return x.ScimApiKey
	}
	return nil
}

type SCIMAPIKeyDeleted struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ScimApiKey    *SCIMAPIKey            `protobuf:"bytes,1,opt,name=scim_api_key,json=scimApiKey,proto3" json:"scim_api_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SCIMAPIKeyDeleted) Reset() {
	*x = SCIMAPIKeyDeleted{}
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SCIMAPIKeyDeleted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCIMAPIKeyDeleted) ProtoMessage() {}

func (x *SCIMAPIKeyDeleted) ProtoReflect() protoreflect.Message {
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCIMAPIKeyDeleted.ProtoReflect.Descriptor instead.
func (*SCIMAPIKeyDeleted) Descriptor() ([]byte, []int) {
	return file_tesseral_frontend_v1_audit_log_events_proto_rawDescGZIP(), []int{22}
}

func (x *SCIMAPIKeyDeleted) GetScimApiKey() *SCIMAPIKey {
	if x != nil {
		return x.ScimApiKey
	}
	return nil
}

type SCIMAPIKeyRevoked struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	ScimApiKey         *SCIMAPIKey            `protobuf:"bytes,1,opt,name=scim_api_key,json=scimApiKey,proto3" json:"scim_api_key,omitempty"`
	PreviousScimApiKey *SCIMAPIKey            `protobuf:"bytes,2,opt,name=previous_scim_api_key,json=previousScimApiKey,proto3" json:"previous_scim_api_key,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *SCIMAPIKeyRevoked) Reset() {
	*x = SCIMAPIKeyRevoked{}
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SCIMAPIKeyRevoked) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCIMAPIKeyRevoked) ProtoMessage() {}

func (x *SCIMAPIKeyRevoked) ProtoReflect() protoreflect.Message {
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCIMAPIKeyRevoked.ProtoReflect.Descriptor instead.
func (*SCIMAPIKeyRevoked) Descriptor() ([]byte, []int) {
	return file_tesseral_frontend_v1_audit_log_events_proto_rawDescGZIP(), []int{23}
}

func (x *SCIMAPIKeyRevoked) GetScimApiKey() *SCIMAPIKey {
	if x != nil {
		return x.ScimApiKey
	}
	return nil
}

func (x *SCIMAPIKeyRevoked) GetPreviousScimApiKey() *SCIMAPIKey {
	if x != nil {
		return x.PreviousScimApiKey
	}
	return nil
}

type SCIMAPIKeyUpdated struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	ScimApiKey         *SCIMAPIKey            `protobuf:"bytes,1,opt,name=scim_api_key,json=scimApiKey,proto3" json:"scim_api_key,omitempty"`
	PreviousScimApiKey *SCIMAPIKey            `protobuf:"bytes,2,opt,name=previous_scim_api_key,json=previousScimApiKey,proto3" json:"previous_scim_api_key,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *SCIMAPIKeyUpdated) Reset() {
	*x = SCIMAPIKeyUpdated{}
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SCIMAPIKeyUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SCIMAPIKeyUpdated) ProtoMessage() {}

func (x *SCIMAPIKeyUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SCIMAPIKeyUpdated.ProtoReflect.Descriptor instead.
func (*SCIMAPIKeyUpdated) Descriptor() ([]byte, []int) {
	return file_tesseral_frontend_v1_audit_log_events_proto_rawDescGZIP(), []int{24}
}

func (x *SCIMAPIKeyUpdated) GetScimApiKey() *SCIMAPIKey {
	if x != nil {
		return x.ScimApiKey
	}
	return nil
}

func (x *SCIMAPIKeyUpdated) GetPreviousScimApiKey() *SCIMAPIKey {
	if x != nil {
		return x.PreviousScimApiKey
	}
	return nil
}

type UserAuthenticatorAppRegistered struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          *User                  `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	PreviousUser  *User                  `protobuf:"bytes,2,opt,name=previous_user,json=previousUser,proto3" json:"previous_user,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserAuthenticatorAppRegistered) Reset() {
	*x = UserAuthenticatorAppRegistered{}
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserAuthenticatorAppRegistered) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAuthenticatorAppRegistered) ProtoMessage() {}

func (x *UserAuthenticatorAppRegistered) ProtoReflect() protoreflect.Message {
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAuthenticatorAppRegistered.ProtoReflect.Descriptor instead.
func (*UserAuthenticatorAppRegistered) Descriptor() ([]byte, []int) {
	return file_tesseral_frontend_v1_audit_log_events_proto_rawDescGZIP(), []int{25}
}

func (x *UserAuthenticatorAppRegistered) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *UserAuthenticatorAppRegistered) GetPreviousUser() *User {
	if x != nil {
		return x.PreviousUser
	}
	return nil
}

type UserInviteCreated struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserInvite    *UserInvite            `protobuf:"bytes,1,opt,name=user_invite,json=userInvite,proto3" json:"user_invite,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserInviteCreated) Reset() {
	*x = UserInviteCreated{}
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserInviteCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInviteCreated) ProtoMessage() {}

func (x *UserInviteCreated) ProtoReflect() protoreflect.Message {
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInviteCreated.ProtoReflect.Descriptor instead.
func (*UserInviteCreated) Descriptor() ([]byte, []int) {
	return file_tesseral_frontend_v1_audit_log_events_proto_rawDescGZIP(), []int{26}
}

func (x *UserInviteCreated) GetUserInvite() *UserInvite {
	if x != nil {
		return x.UserInvite
	}
	return nil
}

type UserInviteDeleted struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserInvite    *UserInvite            `protobuf:"bytes,1,opt,name=user_invite,json=userInvite,proto3" json:"user_invite,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserInviteDeleted) Reset() {
	*x = UserInviteDeleted{}
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserInviteDeleted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInviteDeleted) ProtoMessage() {}

func (x *UserInviteDeleted) ProtoReflect() protoreflect.Message {
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInviteDeleted.ProtoReflect.Descriptor instead.
func (*UserInviteDeleted) Descriptor() ([]byte, []int) {
	return file_tesseral_frontend_v1_audit_log_events_proto_rawDescGZIP(), []int{27}
}

func (x *UserInviteDeleted) GetUserInvite() *UserInvite {
	if x != nil {
		return x.UserInvite
	}
	return nil
}

type UserInviteUpdated struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	UserInvite         *UserInvite            `protobuf:"bytes,1,opt,name=user_invite,json=userInvite,proto3" json:"user_invite,omitempty"`
	PreviousUserInvite *UserInvite            `protobuf:"bytes,2,opt,name=previous_user_invite,json=previousUserInvite,proto3" json:"previous_user_invite,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *UserInviteUpdated) Reset() {
	*x = UserInviteUpdated{}
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserInviteUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInviteUpdated) ProtoMessage() {}

func (x *UserInviteUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInviteUpdated.ProtoReflect.Descriptor instead.
func (*UserInviteUpdated) Descriptor() ([]byte, []int) {
	return file_tesseral_frontend_v1_audit_log_events_proto_rawDescGZIP(), []int{28}
}

func (x *UserInviteUpdated) GetUserInvite() *UserInvite {
	if x != nil {
		return x.UserInvite
	}
	return nil
}

func (x *UserInviteUpdated) GetPreviousUserInvite() *UserInvite {
	if x != nil {
		return x.PreviousUserInvite
	}
	return nil
}

type UserRoleAssignmentCreated struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	UserRoleAssignment *UserRoleAssignment    `protobuf:"bytes,1,opt,name=user_role_assignment,json=userRoleAssignment,proto3" json:"user_role_assignment,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *UserRoleAssignmentCreated) Reset() {
	*x = UserRoleAssignmentCreated{}
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserRoleAssignmentCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRoleAssignmentCreated) ProtoMessage() {}

func (x *UserRoleAssignmentCreated) ProtoReflect() protoreflect.Message {
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRoleAssignmentCreated.ProtoReflect.Descriptor instead.
func (*UserRoleAssignmentCreated) Descriptor() ([]byte, []int) {
	return file_tesseral_frontend_v1_audit_log_events_proto_rawDescGZIP(), []int{29}
}

func (x *UserRoleAssignmentCreated) GetUserRoleAssignment() *UserRoleAssignment {
	if x != nil {
		return x.UserRoleAssignment
	}
	return nil
}

type UserRoleAssignmentDeleted struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	UserRoleAssignment *UserRoleAssignment    `protobuf:"bytes,1,opt,name=user_role_assignment,json=userRoleAssignment,proto3" json:"user_role_assignment,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *UserRoleAssignmentDeleted) Reset() {
	*x = UserRoleAssignmentDeleted{}
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserRoleAssignmentDeleted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRoleAssignmentDeleted) ProtoMessage() {}

func (x *UserRoleAssignmentDeleted) ProtoReflect() protoreflect.Message {
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRoleAssignmentDeleted.ProtoReflect.Descriptor instead.
func (*UserRoleAssignmentDeleted) Descriptor() ([]byte, []int) {
	return file_tesseral_frontend_v1_audit_log_events_proto_rawDescGZIP(), []int{30}
}

func (x *UserRoleAssignmentDeleted) GetUserRoleAssignment() *UserRoleAssignment {
	if x != nil {
		return x.UserRoleAssignment
	}
	return nil
}

type UserCreated struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          *User                  `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserCreated) Reset() {
	*x = UserCreated{}
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserCreated) ProtoMessage() {}

func (x *UserCreated) ProtoReflect() protoreflect.Message {
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserCreated.ProtoReflect.Descriptor instead.
func (*UserCreated) Descriptor() ([]byte, []int) {
	return file_tesseral_frontend_v1_audit_log_events_proto_rawDescGZIP(), []int{31}
}

func (x *UserCreated) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type UserDeleted struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          *User                  `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserDeleted) Reset() {
	*x = UserDeleted{}
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserDeleted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDeleted) ProtoMessage() {}

func (x *UserDeleted) ProtoReflect() protoreflect.Message {
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDeleted.ProtoReflect.Descriptor instead.
func (*UserDeleted) Descriptor() ([]byte, []int) {
	return file_tesseral_frontend_v1_audit_log_events_proto_rawDescGZIP(), []int{32}
}

func (x *UserDeleted) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type UserUpdated struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	User          *User                  `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	PreviousUser  *User                  `protobuf:"bytes,2,opt,name=previous_user,json=previousUser,proto3" json:"previous_user,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserUpdated) Reset() {
	*x = UserUpdated{}
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserUpdated) ProtoMessage() {}

func (x *UserUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_tesseral_frontend_v1_audit_log_events_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserUpdated.ProtoReflect.Descriptor instead.
func (*UserUpdated) Descriptor() ([]byte, []int) {
	return file_tesseral_frontend_v1_audit_log_events_proto_rawDescGZIP(), []int{33}
}

func (x *UserUpdated) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *UserUpdated) GetPreviousUser() *User {
	if x != nil {
		return x.PreviousUser
	}
	return nil
}

var File_tesseral_frontend_v1_audit_log_events_proto protoreflect.FileDescriptor

var file_tesseral_frontend_v1_audit_log_events_proto_rawDesc = string([]byte{
	0x0a, 0x2b, 0x74, 0x65, 0x73, 0x73, 0x65, 0x72, 0x61, 0x6c, 0x2f, 0x66, 0x72, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x6c, 0x6f, 0x67,
	0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x74,
	0x65, 0x73, 0x73, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64,
	0x2e, 0x76, 0x31, 0x1a, 0x21, 0x74, 0x65, 0x73, 0x73, 0x65, 0x72, 0x61, 0x6c, 0x2f, 0x66, 0x72,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x72, 0x0a, 0x1b, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79,
	0x52, 0x6f, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x53, 0x0a, 0x0f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x61, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x74, 0x65, 0x73, 0x73, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x52, 0x6f, 0x6c, 0x65,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0e, 0x72, 0x6f, 0x6c, 0x65,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x72, 0x0a, 0x1b, 0x41, 0x50,
	0x49, 0x4b, 0x65, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x53, 0x0a, 0x0f, 0x72, 0x6f, 0x6c,
	0x65, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x74, 0x65, 0x73, 0x73, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x66, 0x72,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79,
	0x52, 0x6f, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0e,
	0x72, 0x6f, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xd8,
	0x01, 0x0a, 0x1b, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x53,
	0x0a, 0x0f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x74, 0x65, 0x73, 0x73, 0x65, 0x72,
	0x61, 0x6c, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x50, 0x49, 0x4b, 0x65, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x0e, 0x72, 0x6f, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x64, 0x0a, 0x18, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f,
	0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x74, 0x65, 0x73, 0x73, 0x65, 0x72, 0x61, 0x6c,
	0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x50, 0x49,
	0x4b, 0x65, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x16, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x41,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x46, 0x0a, 0x0d, 0x41, 0x50, 0x49,
	0x4b, 0x65, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x35, 0x0a, 0x07, 0x61, 0x70,
	0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x65,
	0x73, 0x73, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65,
	0x79, 0x22, 0x46, 0x0a, 0x0d, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x12, 0x35, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x65, 0x73, 0x73, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x66,
	0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x50, 0x49, 0x4b, 0x65,
	0x79, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x22, 0x8e, 0x01, 0x0a, 0x0d, 0x41, 0x50,
	0x49, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x64, 0x12, 0x35, 0x0a, 0x07, 0x61,
	0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74,
	0x65, 0x73, 0x73, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x52, 0x06, 0x61, 0x70, 0x69, 0x4b,
	0x65, 0x79, 0x12, 0x46, 0x0a, 0x10, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x61,
	0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74,
	0x65, 0x73, 0x73, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x52, 0x0e, 0x70, 0x72, 0x65, 0x76,
	0x69, 0x6f, 0x75, 0x73, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x22, 0x8e, 0x01, 0x0a, 0x0d, 0x41,
	0x50, 0x49, 0x4b, 0x65, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x35, 0x0a, 0x07,
	0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x74, 0x65, 0x73, 0x73, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x52, 0x06, 0x61, 0x70, 0x69,
	0x4b, 0x65, 0x79, 0x12, 0x46, 0x0a, 0x10, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f,
	0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x74, 0x65, 0x73, 0x73, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x52, 0x0e, 0x70, 0x72, 0x65,
	0x76, 0x69, 0x6f, 0x75, 0x73, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x22, 0x5d, 0x0a, 0x13, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x12, 0x46, 0x0a, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x74, 0x65, 0x73, 0x73, 0x65,
	0x72, 0x61, 0x6c, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5d, 0x0a, 0x13, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x12, 0x46, 0x0a, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x74, 0x65, 0x73, 0x73, 0x65, 0x72,
	0x61, 0x6c, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xb6, 0x01, 0x0a, 0x13, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x12, 0x46, 0x0a, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x74, 0x65, 0x73, 0x73, 0x65, 0x72,
	0x61, 0x6c, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4f,
	0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x57, 0x0a, 0x15, 0x70, 0x72, 0x65,
	0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x74, 0x65, 0x73, 0x73, 0x65,
	0x72, 0x61, 0x6c, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x14, 0x70, 0x72,
	0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0xa1, 0x01, 0x0a, 0x26, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x65, 0x64, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x32, 0x0a,
	0x15, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x65, 0x64, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x73, 0x12, 0x43, 0x0a, 0x1e, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x1b, 0x70, 0x72, 0x65, 0x76, 0x69,
	0x6f, 0x75, 0x73, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x65, 0x64, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x22, 0x9c, 0x01, 0x0a, 0x25, 0x4f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x6f, 0x66, 0x74,
	0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x44, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x12, 0x30, 0x0a, 0x14, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x6f, 0x66, 0x74, 0x5f, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12,
	0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x6f, 0x66, 0x74, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x73, 0x12, 0x41, 0x0a, 0x1d, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x6d,
	0x69, 0x63, 0x72, 0x6f, 0x73, 0x6f, 0x66, 0x74, 0x5f, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x1a, 0x70, 0x72, 0x65, 0x76, 0x69,
	0x6f, 0x75, 0x73, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x6f, 0x66, 0x74, 0x54, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x73, 0x22, 0x49, 0x0a, 0x0e, 0x50, 0x61, 0x73, 0x73, 0x6b, 0x65, 0x79,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x37, 0x0a, 0x07, 0x70, 0x61, 0x73, 0x73, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x74, 0x65, 0x73, 0x73, 0x65,
	0x72, 0x61, 0x6c, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x61, 0x73, 0x73, 0x6b, 0x65, 0x79, 0x52, 0x07, 0x70, 0x61, 0x73, 0x73, 0x6b, 0x65, 0x79,
	0x22, 0x49, 0x0a, 0x0e, 0x50, 0x61, 0x73, 0x73, 0x6b, 0x65, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x12, 0x37, 0x0a, 0x07, 0x70, 0x61, 0x73, 0x73, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x74, 0x65, 0x73, 0x73, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x66,
	0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x73, 0x73, 0x6b,
	0x65, 0x79, 0x52, 0x07, 0x70, 0x61, 0x73, 0x73, 0x6b, 0x65, 0x79, 0x22, 0x3d, 0x0a, 0x0b, 0x52,
	0x6f, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x72, 0x6f,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x65, 0x73, 0x73, 0x65,
	0x72, 0x61, 0x6c, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x3d, 0x0a, 0x0b, 0x52, 0x6f,
	0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x72, 0x6f, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x65, 0x73, 0x73, 0x65, 0x72,
	0x61, 0x6c, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x7e, 0x0a, 0x0b, 0x52, 0x6f, 0x6c,
	0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x65, 0x73, 0x73, 0x65, 0x72, 0x61,
	0x6c, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f,
	0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x3f, 0x0a, 0x0d, 0x70, 0x72, 0x65, 0x76,
	0x69, 0x6f, 0x75, 0x73, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x74, 0x65, 0x73, 0x73, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x0c, 0x70, 0x72, 0x65,
	0x76, 0x69, 0x6f, 0x75, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x22, 0x66, 0x0a, 0x15, 0x53, 0x41, 0x4d,
	0x4c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x12, 0x4d, 0x0a, 0x0f, 0x73, 0x61, 0x6d, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x74, 0x65,
	0x73, 0x73, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x41, 0x4d, 0x4c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0e, 0x73, 0x61, 0x6d, 0x6c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x66, 0x0a, 0x15, 0x53, 0x41, 0x4d, 0x4c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x4d, 0x0a, 0x0f, 0x73, 0x61,
	0x6d, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x74, 0x65, 0x73, 0x73, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x66,
	0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x41, 0x4d, 0x4c, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x73, 0x61, 0x6d, 0x6c, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xc6, 0x01, 0x0a, 0x15, 0x53, 0x41,
	0x4d, 0x4c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x4d, 0x0a, 0x0f, 0x73, 0x61, 0x6d, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x74,
	0x65, 0x73, 0x73, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x41, 0x4d, 0x4c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0e, 0x73, 0x61, 0x6d, 0x6c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x5e, 0x0a, 0x18, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x73,
	0x61, 0x6d, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x74, 0x65, 0x73, 0x73, 0x65, 0x72, 0x61, 0x6c, 0x2e,
	0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x41, 0x4d, 0x4c,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x16, 0x70, 0x72, 0x65, 0x76,
	0x69, 0x6f, 0x75, 0x73, 0x53, 0x61, 0x6d, 0x6c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x4b, 0x0a, 0x10, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x65, 0x64, 0x12, 0x37, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x74, 0x65, 0x73, 0x73, 0x65, 0x72,
	0x61, 0x6c, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22,
	0x57, 0x0a, 0x11, 0x53, 0x43, 0x49, 0x4d, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x42, 0x0a, 0x0c, 0x73, 0x63, 0x69, 0x6d, 0x5f, 0x61, 0x70, 0x69,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x74, 0x65, 0x73,
	0x73, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x43, 0x49, 0x4d, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x52, 0x0a, 0x73, 0x63,
	0x69, 0x6d, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x22, 0x57, 0x0a, 0x11, 0x53, 0x43, 0x49, 0x4d,
	0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x42, 0x0a,
	0x0c, 0x73, 0x63, 0x69, 0x6d, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x74, 0x65, 0x73, 0x73, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x66,
	0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x43, 0x49, 0x4d, 0x41,
	0x50, 0x49, 0x4b, 0x65, 0x79, 0x52, 0x0a, 0x73, 0x63, 0x69, 0x6d, 0x41, 0x70, 0x69, 0x4b, 0x65,
	0x79, 0x22, 0xac, 0x01, 0x0a, 0x11, 0x53, 0x43, 0x49, 0x4d, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79,
	0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x64, 0x12, 0x42, 0x0a, 0x0c, 0x73, 0x63, 0x69, 0x6d, 0x5f,
	0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x74, 0x65, 0x73, 0x73, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x43, 0x49, 0x4d, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x52,
	0x0a, 0x73, 0x63, 0x69, 0x6d, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x12, 0x53, 0x0a, 0x15, 0x70,
	0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x73, 0x63, 0x69, 0x6d, 0x5f, 0x61, 0x70, 0x69,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x74, 0x65, 0x73,
	0x73, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x43, 0x49, 0x4d, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x52, 0x12, 0x70, 0x72,
	0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x53, 0x63, 0x69, 0x6d, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79,
	0x22, 0xac, 0x01, 0x0a, 0x11, 0x53, 0x43, 0x49, 0x4d, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x42, 0x0a, 0x0c, 0x73, 0x63, 0x69, 0x6d, 0x5f, 0x61,
	0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x74,
	0x65, 0x73, 0x73, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x43, 0x49, 0x4d, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x52, 0x0a,
	0x73, 0x63, 0x69, 0x6d, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x12, 0x53, 0x0a, 0x15, 0x70, 0x72,
	0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x73, 0x63, 0x69, 0x6d, 0x5f, 0x61, 0x70, 0x69, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x74, 0x65, 0x73, 0x73,
	0x65, 0x72, 0x61, 0x6c, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x43, 0x49, 0x4d, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x52, 0x12, 0x70, 0x72, 0x65,
	0x76, 0x69, 0x6f, 0x75, 0x73, 0x53, 0x63, 0x69, 0x6d, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x22,
	0x91, 0x01, 0x0a, 0x1e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x70, 0x70, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x65, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x74, 0x65, 0x73, 0x73, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x66, 0x72, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x12, 0x3f, 0x0a, 0x0d, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x65, 0x73, 0x73,
	0x65, 0x72, 0x61, 0x6c, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0c, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x55,
	0x73, 0x65, 0x72, 0x22, 0x56, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x41, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x74, 0x65, 0x73, 0x73, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52,
	0x0a, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x22, 0x56, 0x0a, 0x11, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x12, 0x41, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x74, 0x65, 0x73, 0x73, 0x65, 0x72, 0x61, 0x6c,
	0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x22, 0xaa, 0x01, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x41, 0x0a, 0x0b, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x74, 0x65, 0x73, 0x73, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x12, 0x52, 0x0a, 0x14,
	0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x74, 0x65, 0x73,
	0x73, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x12, 0x70, 0x72,
	0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x22, 0x77, 0x0a, 0x19, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x5a, 0x0a,
	0x14, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x74, 0x65,
	0x73, 0x73, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x12, 0x75, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x41,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x77, 0x0a, 0x19, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x5a, 0x0a, 0x14, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72,
	0x6f, 0x6c, 0x65, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x74, 0x65, 0x73, 0x73, 0x65, 0x72, 0x61, 0x6c, 0x2e,
	0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x6f, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x12,
	0x75, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x22, 0x3d, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x12, 0x2e, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x74, 0x65, 0x73, 0x73, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x22, 0x3d, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x12, 0x2e, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x74, 0x65, 0x73, 0x73, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x22, 0x7e, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x2e, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x74, 0x65, 0x73, 0x73, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12,
	0x3f, 0x0a, 0x0d, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x65, 0x73, 0x73, 0x65, 0x72, 0x61,
	0x6c, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x0c, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x55, 0x73, 0x65, 0x72,
	0x42, 0xfa, 0x01, 0x0a, 0x18, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x65, 0x73, 0x73, 0x65, 0x72, 0x61,
	0x6c, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x42, 0x13, 0x41,
	0x75, 0x64, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x57, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x74, 0x65, 0x73, 0x73, 0x65, 0x72, 0x61, 0x6c, 0x2d, 0x6c, 0x61, 0x62, 0x73, 0x2f, 0x74,
	0x65, 0x73, 0x73, 0x65, 0x72, 0x61, 0x6c, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x2f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x74, 0x65,
	0x73, 0x73, 0x65, 0x72, 0x61, 0x6c, 0x2f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2f,
	0x76, 0x31, 0x3b, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x76, 0x31, 0xa2, 0x02, 0x03,
	0x54, 0x46, 0x58, 0xaa, 0x02, 0x14, 0x54, 0x65, 0x73, 0x73, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x46,
	0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x14, 0x54, 0x65, 0x73,
	0x73, 0x65, 0x72, 0x61, 0x6c, 0x5c, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x5c, 0x56,
	0x31, 0xe2, 0x02, 0x20, 0x54, 0x65, 0x73, 0x73, 0x65, 0x72, 0x61, 0x6c, 0x5c, 0x46, 0x72, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x64, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x16, 0x54, 0x65, 0x73, 0x73, 0x65, 0x72, 0x61, 0x6c, 0x3a,
	0x3a, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_tesseral_frontend_v1_audit_log_events_proto_rawDescOnce sync.Once
	file_tesseral_frontend_v1_audit_log_events_proto_rawDescData []byte
)

func file_tesseral_frontend_v1_audit_log_events_proto_rawDescGZIP() []byte {
	file_tesseral_frontend_v1_audit_log_events_proto_rawDescOnce.Do(func() {
		file_tesseral_frontend_v1_audit_log_events_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_tesseral_frontend_v1_audit_log_events_proto_rawDesc), len(file_tesseral_frontend_v1_audit_log_events_proto_rawDesc)))
	})
	return file_tesseral_frontend_v1_audit_log_events_proto_rawDescData
}

var file_tesseral_frontend_v1_audit_log_events_proto_msgTypes = make([]protoimpl.MessageInfo, 34)
var file_tesseral_frontend_v1_audit_log_events_proto_goTypes = []any{
	(*APIKeyRoleAssignmentCreated)(nil),            // 0: tesseral.frontend.v1.APIKeyRoleAssignmentCreated
	(*APIKeyRoleAssignmentDeleted)(nil),            // 1: tesseral.frontend.v1.APIKeyRoleAssignmentDeleted
	(*APIKeyRoleAssignmentUpdated)(nil),            // 2: tesseral.frontend.v1.APIKeyRoleAssignmentUpdated
	(*APIKeyCreated)(nil),                          // 3: tesseral.frontend.v1.APIKeyCreated
	(*APIKeyDeleted)(nil),                          // 4: tesseral.frontend.v1.APIKeyDeleted
	(*APIKeyRevoked)(nil),                          // 5: tesseral.frontend.v1.APIKeyRevoked
	(*APIKeyUpdated)(nil),                          // 6: tesseral.frontend.v1.APIKeyUpdated
	(*OrganizationCreated)(nil),                    // 7: tesseral.frontend.v1.OrganizationCreated
	(*OrganizationDeleted)(nil),                    // 8: tesseral.frontend.v1.OrganizationDeleted
	(*OrganizationUpdated)(nil),                    // 9: tesseral.frontend.v1.OrganizationUpdated
	(*OrganizationGoogleHostedDomainsUpdated)(nil), // 10: tesseral.frontend.v1.OrganizationGoogleHostedDomainsUpdated
	(*OrganizationMicrosoftTenantIDsUpdated)(nil),  // 11: tesseral.frontend.v1.OrganizationMicrosoftTenantIDsUpdated
	(*PasskeyCreated)(nil),                         // 12: tesseral.frontend.v1.PasskeyCreated
	(*PasskeyDeleted)(nil),                         // 13: tesseral.frontend.v1.PasskeyDeleted
	(*RoleCreated)(nil),                            // 14: tesseral.frontend.v1.RoleCreated
	(*RoleDeleted)(nil),                            // 15: tesseral.frontend.v1.RoleDeleted
	(*RoleUpdated)(nil),                            // 16: tesseral.frontend.v1.RoleUpdated
	(*SAMLConnectionCreated)(nil),                  // 17: tesseral.frontend.v1.SAMLConnectionCreated
	(*SAMLConnectionDeleted)(nil),                  // 18: tesseral.frontend.v1.SAMLConnectionDeleted
	(*SAMLConnectionUpdated)(nil),                  // 19: tesseral.frontend.v1.SAMLConnectionUpdated
	(*SessionRefreshed)(nil),                       // 20: tesseral.frontend.v1.SessionRefreshed
	(*SCIMAPIKeyCreated)(nil),                      // 21: tesseral.frontend.v1.SCIMAPIKeyCreated
	(*SCIMAPIKeyDeleted)(nil),                      // 22: tesseral.frontend.v1.SCIMAPIKeyDeleted
	(*SCIMAPIKeyRevoked)(nil),                      // 23: tesseral.frontend.v1.SCIMAPIKeyRevoked
	(*SCIMAPIKeyUpdated)(nil),                      // 24: tesseral.frontend.v1.SCIMAPIKeyUpdated
	(*UserAuthenticatorAppRegistered)(nil),         // 25: tesseral.frontend.v1.UserAuthenticatorAppRegistered
	(*UserInviteCreated)(nil),                      // 26: tesseral.frontend.v1.UserInviteCreated
	(*UserInviteDeleted)(nil),                      // 27: tesseral.frontend.v1.UserInviteDeleted
	(*UserInviteUpdated)(nil),                      // 28: tesseral.frontend.v1.UserInviteUpdated
	(*UserRoleAssignmentCreated)(nil),              // 29: tesseral.frontend.v1.UserRoleAssignmentCreated
	(*UserRoleAssignmentDeleted)(nil),              // 30: tesseral.frontend.v1.UserRoleAssignmentDeleted
	(*UserCreated)(nil),                            // 31: tesseral.frontend.v1.UserCreated
	(*UserDeleted)(nil),                            // 32: tesseral.frontend.v1.UserDeleted
	(*UserUpdated)(nil),                            // 33: tesseral.frontend.v1.UserUpdated
	(*APIKeyRoleAssignment)(nil),                   // 34: tesseral.frontend.v1.APIKeyRoleAssignment
	(*APIKey)(nil),                                 // 35: tesseral.frontend.v1.APIKey
	(*Organization)(nil),                           // 36: tesseral.frontend.v1.Organization
	(*Passkey)(nil),                                // 37: tesseral.frontend.v1.Passkey
	(*Role)(nil),                                   // 38: tesseral.frontend.v1.Role
	(*SAMLConnection)(nil),                         // 39: tesseral.frontend.v1.SAMLConnection
	(*Session)(nil),                                // 40: tesseral.frontend.v1.Session
	(*SCIMAPIKey)(nil),                             // 41: tesseral.frontend.v1.SCIMAPIKey
	(*User)(nil),                                   // 42: tesseral.frontend.v1.User
	(*UserInvite)(nil),                             // 43: tesseral.frontend.v1.UserInvite
	(*UserRoleAssignment)(nil),                     // 44: tesseral.frontend.v1.UserRoleAssignment
}
var file_tesseral_frontend_v1_audit_log_events_proto_depIdxs = []int32{
	34, // 0: tesseral.frontend.v1.APIKeyRoleAssignmentCreated.role_assignment:type_name -> tesseral.frontend.v1.APIKeyRoleAssignment
	34, // 1: tesseral.frontend.v1.APIKeyRoleAssignmentDeleted.role_assignment:type_name -> tesseral.frontend.v1.APIKeyRoleAssignment
	34, // 2: tesseral.frontend.v1.APIKeyRoleAssignmentUpdated.role_assignment:type_name -> tesseral.frontend.v1.APIKeyRoleAssignment
	34, // 3: tesseral.frontend.v1.APIKeyRoleAssignmentUpdated.previous_role_assignment:type_name -> tesseral.frontend.v1.APIKeyRoleAssignment
	35, // 4: tesseral.frontend.v1.APIKeyCreated.api_key:type_name -> tesseral.frontend.v1.APIKey
	35, // 5: tesseral.frontend.v1.APIKeyDeleted.api_key:type_name -> tesseral.frontend.v1.APIKey
	35, // 6: tesseral.frontend.v1.APIKeyRevoked.api_key:type_name -> tesseral.frontend.v1.APIKey
	35, // 7: tesseral.frontend.v1.APIKeyRevoked.previous_api_key:type_name -> tesseral.frontend.v1.APIKey
	35, // 8: tesseral.frontend.v1.APIKeyUpdated.api_key:type_name -> tesseral.frontend.v1.APIKey
	35, // 9: tesseral.frontend.v1.APIKeyUpdated.previous_api_key:type_name -> tesseral.frontend.v1.APIKey
	36, // 10: tesseral.frontend.v1.OrganizationCreated.organization:type_name -> tesseral.frontend.v1.Organization
	36, // 11: tesseral.frontend.v1.OrganizationDeleted.organization:type_name -> tesseral.frontend.v1.Organization
	36, // 12: tesseral.frontend.v1.OrganizationUpdated.organization:type_name -> tesseral.frontend.v1.Organization
	36, // 13: tesseral.frontend.v1.OrganizationUpdated.previous_organization:type_name -> tesseral.frontend.v1.Organization
	37, // 14: tesseral.frontend.v1.PasskeyCreated.passkey:type_name -> tesseral.frontend.v1.Passkey
	37, // 15: tesseral.frontend.v1.PasskeyDeleted.passkey:type_name -> tesseral.frontend.v1.Passkey
	38, // 16: tesseral.frontend.v1.RoleCreated.role:type_name -> tesseral.frontend.v1.Role
	38, // 17: tesseral.frontend.v1.RoleDeleted.role:type_name -> tesseral.frontend.v1.Role
	38, // 18: tesseral.frontend.v1.RoleUpdated.role:type_name -> tesseral.frontend.v1.Role
	38, // 19: tesseral.frontend.v1.RoleUpdated.previous_role:type_name -> tesseral.frontend.v1.Role
	39, // 20: tesseral.frontend.v1.SAMLConnectionCreated.saml_connection:type_name -> tesseral.frontend.v1.SAMLConnection
	39, // 21: tesseral.frontend.v1.SAMLConnectionDeleted.saml_connection:type_name -> tesseral.frontend.v1.SAMLConnection
	39, // 22: tesseral.frontend.v1.SAMLConnectionUpdated.saml_connection:type_name -> tesseral.frontend.v1.SAMLConnection
	39, // 23: tesseral.frontend.v1.SAMLConnectionUpdated.previous_saml_connection:type_name -> tesseral.frontend.v1.SAMLConnection
	40, // 24: tesseral.frontend.v1.SessionRefreshed.session:type_name -> tesseral.frontend.v1.Session
	41, // 25: tesseral.frontend.v1.SCIMAPIKeyCreated.scim_api_key:type_name -> tesseral.frontend.v1.SCIMAPIKey
	41, // 26: tesseral.frontend.v1.SCIMAPIKeyDeleted.scim_api_key:type_name -> tesseral.frontend.v1.SCIMAPIKey
	41, // 27: tesseral.frontend.v1.SCIMAPIKeyRevoked.scim_api_key:type_name -> tesseral.frontend.v1.SCIMAPIKey
	41, // 28: tesseral.frontend.v1.SCIMAPIKeyRevoked.previous_scim_api_key:type_name -> tesseral.frontend.v1.SCIMAPIKey
	41, // 29: tesseral.frontend.v1.SCIMAPIKeyUpdated.scim_api_key:type_name -> tesseral.frontend.v1.SCIMAPIKey
	41, // 30: tesseral.frontend.v1.SCIMAPIKeyUpdated.previous_scim_api_key:type_name -> tesseral.frontend.v1.SCIMAPIKey
	42, // 31: tesseral.frontend.v1.UserAuthenticatorAppRegistered.user:type_name -> tesseral.frontend.v1.User
	42, // 32: tesseral.frontend.v1.UserAuthenticatorAppRegistered.previous_user:type_name -> tesseral.frontend.v1.User
	43, // 33: tesseral.frontend.v1.UserInviteCreated.user_invite:type_name -> tesseral.frontend.v1.UserInvite
	43, // 34: tesseral.frontend.v1.UserInviteDeleted.user_invite:type_name -> tesseral.frontend.v1.UserInvite
	43, // 35: tesseral.frontend.v1.UserInviteUpdated.user_invite:type_name -> tesseral.frontend.v1.UserInvite
	43, // 36: tesseral.frontend.v1.UserInviteUpdated.previous_user_invite:type_name -> tesseral.frontend.v1.UserInvite
	44, // 37: tesseral.frontend.v1.UserRoleAssignmentCreated.user_role_assignment:type_name -> tesseral.frontend.v1.UserRoleAssignment
	44, // 38: tesseral.frontend.v1.UserRoleAssignmentDeleted.user_role_assignment:type_name -> tesseral.frontend.v1.UserRoleAssignment
	42, // 39: tesseral.frontend.v1.UserCreated.user:type_name -> tesseral.frontend.v1.User
	42, // 40: tesseral.frontend.v1.UserDeleted.user:type_name -> tesseral.frontend.v1.User
	42, // 41: tesseral.frontend.v1.UserUpdated.user:type_name -> tesseral.frontend.v1.User
	42, // 42: tesseral.frontend.v1.UserUpdated.previous_user:type_name -> tesseral.frontend.v1.User
	43, // [43:43] is the sub-list for method output_type
	43, // [43:43] is the sub-list for method input_type
	43, // [43:43] is the sub-list for extension type_name
	43, // [43:43] is the sub-list for extension extendee
	0,  // [0:43] is the sub-list for field type_name
}

func init() { file_tesseral_frontend_v1_audit_log_events_proto_init() }
func file_tesseral_frontend_v1_audit_log_events_proto_init() {
	if File_tesseral_frontend_v1_audit_log_events_proto != nil {
		return
	}
	file_tesseral_frontend_v1_models_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_tesseral_frontend_v1_audit_log_events_proto_rawDesc), len(file_tesseral_frontend_v1_audit_log_events_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   34,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tesseral_frontend_v1_audit_log_events_proto_goTypes,
		DependencyIndexes: file_tesseral_frontend_v1_audit_log_events_proto_depIdxs,
		MessageInfos:      file_tesseral_frontend_v1_audit_log_events_proto_msgTypes,
	}.Build()
	File_tesseral_frontend_v1_audit_log_events_proto = out.File
	file_tesseral_frontend_v1_audit_log_events_proto_goTypes = nil
	file_tesseral_frontend_v1_audit_log_events_proto_depIdxs = nil
}
