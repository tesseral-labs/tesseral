# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: FrontendService API
    version: 0.0.1
paths:
    /frontend/v1/api-key-role-assignments:
        get:
            tags:
                - FrontendService
            operationId: FrontendService_ListAPIKeyRoleAssignments
            parameters:
                - name: apiKeyId
                  in: query
                  schema:
                    type: string
                - name: pageToken
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListAPIKeyRoleAssignmentsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - FrontendService
            operationId: FrontendService_CreateAPIKeyRoleAssignment
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateAPIKeyRoleAssignmentRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateAPIKeyRoleAssignmentResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /frontend/v1/api-key-role-assignments/{id}:
        delete:
            tags:
                - FrontendService
            operationId: FrontendService_DeleteAPIKeyRoleAssignment
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
                - name: apiKeyId
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteAPIKeyRoleAssignmentResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /frontend/v1/api-keys:
        get:
            tags:
                - FrontendService
            description: List API Keys.
            operationId: FrontendService_ListAPIKeys
            parameters:
                - name: organizationId
                  in: query
                  schema:
                    type: string
                - name: pageToken
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListAPIKeysResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - FrontendService
            description: Create an API Key for an Organization.
            operationId: FrontendService_CreateAPIKey
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateAPIKeyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateAPIKeyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /frontend/v1/api-keys/{id}:
        get:
            tags:
                - FrontendService
            description: Get an API Key.
            operationId: FrontendService_GetAPIKey
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetAPIKeyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - FrontendService
            description: Delete an API Key.
            operationId: FrontendService_DeleteAPIKey
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteAPIKeyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - FrontendService
            description: Update an API Key.
            operationId: FrontendService_UpdateAPIKey
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateAPIKeyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateAPIKeyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /frontend/v1/api-keys/{id}/revoke:
        post:
            tags:
                - FrontendService
            description: Revoke an API Key.
            operationId: FrontendService_RevokeAPIKey
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RevokeAPIKeyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /frontend/v1/audit-log-events:
        get:
            tags:
                - FrontendService
            operationId: FrontendService_ListAuditLogEvents
            parameters:
                - name: pageToken
                  in: query
                  schema:
                    type: string
                - name: filterStartTime
                  in: query
                  schema:
                    type: string
                    format: date-time
                - name: filterEndTime
                  in: query
                  schema:
                    type: string
                    format: date-time
                - name: filterEventName
                  in: query
                  schema:
                    type: string
                - name: filterUserId
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListAuditLogEventsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /frontend/v1/google-hosted-domains:
        get:
            tags:
                - FrontendService
            operationId: FrontendService_GetOrganizationGoogleHostedDomains
            parameters:
                - name: organizationId
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetOrganizationGoogleHostedDomainsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - FrontendService
            operationId: FrontendService_UpdateOrganizationGoogleHostedDomains
            parameters:
                - name: organizationId
                  in: query
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/OrganizationGoogleHostedDomains'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateOrganizationGoogleHostedDomainsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /frontend/v1/logout:
        post:
            tags:
                - FrontendService
            operationId: FrontendService_Logout
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LogoutRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LogoutResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /frontend/v1/me:
        get:
            tags:
                - FrontendService
            operationId: FrontendService_Whoami
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/WhoamiResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /frontend/v1/me/authenticator-app/options:
        post:
            tags:
                - FrontendService
            operationId: FrontendService_GetAuthenticatorAppOptions
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetAuthenticatorAppOptionsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /frontend/v1/me/authenticator-app/register:
        post:
            tags:
                - FrontendService
            operationId: FrontendService_RegisterAuthenticatorApp
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RegisterAuthenticatorAppRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RegisterAuthenticatorAppResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /frontend/v1/me/passkeys:
        get:
            tags:
                - FrontendService
            operationId: FrontendService_ListMyPasskeys
            parameters:
                - name: pageToken
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListMyPasskeysResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /frontend/v1/me/passkeys/options:
        post:
            tags:
                - FrontendService
            operationId: FrontendService_GetPasskeyOptions
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetPasskeyOptionsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /frontend/v1/me/passkeys/register:
        post:
            tags:
                - FrontendService
            operationId: FrontendService_RegisterPasskey
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RegisterPasskeyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RegisterPasskeyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /frontend/v1/me/passkeys/{id}:
        delete:
            tags:
                - FrontendService
            operationId: FrontendService_DeleteMyPasskey
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteMyPasskeyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /frontend/v1/microsoft-tenant-ids:
        get:
            tags:
                - FrontendService
            operationId: FrontendService_GetOrganizationMicrosoftTenantIDs
            parameters:
                - name: organizationId
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetOrganizationMicrosoftTenantIDsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - FrontendService
            operationId: FrontendService_UpdateOrganizationMicrosoftTenantIDs
            parameters:
                - name: organizationId
                  in: query
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/OrganizationMicrosoftTenantIDs'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateOrganizationMicrosoftTenantIDsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /frontend/v1/organization:
        get:
            tags:
                - FrontendService
            operationId: FrontendService_GetOrganization
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetOrganizationResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - FrontendService
            operationId: FrontendService_UpdateOrganization
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Organization'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateOrganizationResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /frontend/v1/project:
        get:
            tags:
                - FrontendService
            operationId: FrontendService_GetProject
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetProjectResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /frontend/v1/refresh:
        post:
            tags:
                - FrontendService
            operationId: FrontendService_Refresh
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RefreshRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RefreshResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /frontend/v1/roles:
        get:
            tags:
                - FrontendService
            description: List Roles.
            operationId: FrontendService_ListRoles
            parameters:
                - name: organizationId
                  in: query
                  schema:
                    type: string
                - name: pageToken
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListRolesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - FrontendService
            description: Create a Role.
            operationId: FrontendService_CreateRole
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Role'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateRoleResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /frontend/v1/roles/{id}:
        get:
            tags:
                - FrontendService
            description: Get a Role.
            operationId: FrontendService_GetRole
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetRoleResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - FrontendService
            description: Delete a Role.
            operationId: FrontendService_DeleteRole
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteRoleResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - FrontendService
            description: Update a Role.
            operationId: FrontendService_UpdateRole
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Role'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateRoleResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /frontend/v1/saml-connections:
        get:
            tags:
                - FrontendService
            operationId: FrontendService_ListSAMLConnections
            parameters:
                - name: pageToken
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListSAMLConnectionsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - FrontendService
            operationId: FrontendService_CreateSAMLConnection
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SAMLConnection'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateSAMLConnectionResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /frontend/v1/saml-connections/{id}:
        get:
            tags:
                - FrontendService
            operationId: FrontendService_GetSAMLConnection
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetSAMLConnectionResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - FrontendService
            operationId: FrontendService_DeleteSAMLConnection
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteSAMLConnectionResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - FrontendService
            operationId: FrontendService_UpdateSAMLConnection
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SAMLConnection'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateSAMLConnectionResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /frontend/v1/scim-api-keys:
        get:
            tags:
                - FrontendService
            operationId: FrontendService_ListSCIMAPIKeys
            parameters:
                - name: pageToken
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListSCIMAPIKeysResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - FrontendService
            operationId: FrontendService_CreateSCIMAPIKey
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SCIMAPIKey'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateSCIMAPIKeyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /frontend/v1/scim-api-keys/{id}:
        get:
            tags:
                - FrontendService
            operationId: FrontendService_GetSCIMAPIKey
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetSCIMAPIKeyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - FrontendService
            operationId: FrontendService_DeleteSCIMAPIKey
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteSCIMAPIKeyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - FrontendService
            operationId: FrontendService_UpdateSCIMAPIKey
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SCIMAPIKey'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateSCIMAPIKeyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /frontend/v1/scim-api-keys/{id}/revoke:
        post:
            tags:
                - FrontendService
            operationId: FrontendService_RevokeSCIMAPIKey
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RevokeSCIMAPIKeyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /frontend/v1/set-user-password:
        post:
            tags:
                - FrontendService
            description: Sets a user's password.
            operationId: FrontendService_SetPassword
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SetPasswordRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SetPasswordResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /frontend/v1/switch-organizations/organizations:
        get:
            tags:
                - FrontendService
            operationId: FrontendService_ListSwitchableOrganizations
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListSwitchableOrganizationsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /frontend/v1/user-invites:
        get:
            tags:
                - FrontendService
            operationId: FrontendService_ListUserInvites
            parameters:
                - name: pageToken
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUserInvitesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - FrontendService
            operationId: FrontendService_CreateUserInvite
            parameters:
                - name: sendEmail
                  in: query
                  schema:
                    type: boolean
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UserInvite'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateUserInviteResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /frontend/v1/user-invites/{id}:
        get:
            tags:
                - FrontendService
            operationId: FrontendService_GetUserInvite
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetUserInviteResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - FrontendService
            operationId: FrontendService_DeleteUserInvite
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteUserInviteResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /frontend/v1/user-role-assignments:
        get:
            tags:
                - FrontendService
            description: List User Role Assignments.
            operationId: FrontendService_ListUserRoleAssignments
            parameters:
                - name: userId
                  in: query
                  schema:
                    type: string
                - name: roleId
                  in: query
                  schema:
                    type: string
                - name: pageToken
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUserRoleAssignmentsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - FrontendService
            description: Create a User Role Assignment.
            operationId: FrontendService_CreateUserRoleAssignment
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UserRoleAssignment'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateUserRoleAssignmentResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /frontend/v1/user-role-assignments/{id}:
        get:
            tags:
                - FrontendService
            description: Get a User Role Assignment.
            operationId: FrontendService_GetUserRoleAssignment
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetUserRoleAssignmentResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - FrontendService
            description: Delete a User Role Assignment.
            operationId: FrontendService_DeleteUserRoleAssignment
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteUserRoleAssignmentResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /frontend/v1/users:
        get:
            tags:
                - FrontendService
            operationId: FrontendService_ListUsers
            parameters:
                - name: organizationId
                  in: query
                  schema:
                    type: string
                - name: pageToken
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUsersResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /frontend/v1/users/{id}:
        get:
            tags:
                - FrontendService
            operationId: FrontendService_GetUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - FrontendService
            operationId: FrontendService_DeleteUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - FrontendService
            operationId: FrontendService_UpdateUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/User'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        APIKey:
            type: object
            properties:
                id:
                    type: string
                    description: The API Key ID. Starts with `api_key_...`.
                organizationId:
                    type: string
                    description: The Organization this API Key belongs to.
                createTime:
                    type: string
                    description: When the API Key was created.
                    format: date-time
                updateTime:
                    type: string
                    description: When the API Key was last updated.
                    format: date-time
                expireTime:
                    type: string
                    description: The expire time of the API Key.
                    format: date-time
                displayName:
                    type: string
                    description: A human-readable display name for this API Key.
                secretToken:
                    type: string
                    description: The secret token for this API Key.
                secretTokenSuffix:
                    type: string
                    description: The secret token suffix for this API Key.
                revoked:
                    type: boolean
                    description: Whether this API Key is revoked.
        APIKeyRoleAssignment:
            type: object
            properties:
                id:
                    type: string
                    description: The API Key Role Assignment ID. Starts with `api_key_role_assignment_...`.
                apiKeyId:
                    type: string
                    description: The API Key ID.
                roleId:
                    type: string
                    description: The Role
        AuditLogEvent:
            type: object
            properties:
                id:
                    type: string
                    description: The Audit Log Event ID. Starts with `audit_log_event_...`.
                actorUserId:
                    type: string
                    description: The User that performed the event, if any.
                actorSessionId:
                    type: string
                    description: The Session that performed the event, if any.
                actorApiKeyId:
                    type: string
                    description: The API Key that performed the event, if any.
                actorIntermediateSessionId:
                    type: string
                    description: The Intermediate Session that performed the action, if any.
                eventTime:
                    type: string
                    description: When the event occurred.
                    format: date-time
                eventName:
                    type: string
                    description: The name of the event.
                eventDetails:
                    type: object
                    description: The event payload JSON.
        CreateAPIKeyRequest:
            type: object
            properties:
                apiKey:
                    $ref: '#/components/schemas/APIKey'
        CreateAPIKeyResponse:
            type: object
            properties:
                apiKey:
                    $ref: '#/components/schemas/APIKey'
        CreateAPIKeyRoleAssignmentRequest:
            type: object
            properties:
                apiKeyRoleAssignment:
                    $ref: '#/components/schemas/APIKeyRoleAssignment'
        CreateAPIKeyRoleAssignmentResponse:
            type: object
            properties:
                apiKeyRoleAssignment:
                    $ref: '#/components/schemas/APIKeyRoleAssignment'
        CreateRoleResponse:
            type: object
            properties:
                role:
                    $ref: '#/components/schemas/Role'
        CreateSAMLConnectionResponse:
            type: object
            properties:
                samlConnection:
                    $ref: '#/components/schemas/SAMLConnection'
        CreateSCIMAPIKeyResponse:
            type: object
            properties:
                scimApiKey:
                    $ref: '#/components/schemas/SCIMAPIKey'
        CreateUserInviteResponse:
            type: object
            properties:
                userInvite:
                    $ref: '#/components/schemas/UserInvite'
        CreateUserRoleAssignmentResponse:
            type: object
            properties:
                userRoleAssignment:
                    $ref: '#/components/schemas/UserRoleAssignment'
        DeleteAPIKeyResponse:
            type: object
            properties: {}
        DeleteAPIKeyRoleAssignmentResponse:
            type: object
            properties: {}
        DeleteMyPasskeyResponse:
            type: object
            properties: {}
        DeleteRoleResponse:
            type: object
            properties: {}
        DeleteSAMLConnectionResponse:
            type: object
            properties: {}
        DeleteSCIMAPIKeyResponse:
            type: object
            properties: {}
        DeleteUserInviteResponse:
            type: object
            properties: {}
        DeleteUserResponse:
            type: object
            properties: {}
        DeleteUserRoleAssignmentResponse:
            type: object
            properties: {}
        GetAPIKeyResponse:
            type: object
            properties:
                apiKey:
                    $ref: '#/components/schemas/APIKey'
        GetAuthenticatorAppOptionsResponse:
            type: object
            properties:
                otpauthUri:
                    type: string
        GetOrganizationGoogleHostedDomainsResponse:
            type: object
            properties:
                organizationGoogleHostedDomains:
                    $ref: '#/components/schemas/OrganizationGoogleHostedDomains'
        GetOrganizationMicrosoftTenantIDsResponse:
            type: object
            properties:
                organizationMicrosoftTenantIds:
                    $ref: '#/components/schemas/OrganizationMicrosoftTenantIDs'
        GetOrganizationResponse:
            type: object
            properties:
                organization:
                    $ref: '#/components/schemas/Organization'
        GetPasskeyOptionsResponse:
            type: object
            properties:
                rpId:
                    type: string
                rpName:
                    type: string
                userId:
                    type: string
                userDisplayName:
                    type: string
        GetProjectResponse:
            type: object
            properties:
                project:
                    $ref: '#/components/schemas/Project'
        GetRoleResponse:
            type: object
            properties:
                role:
                    $ref: '#/components/schemas/Role'
        GetSAMLConnectionResponse:
            type: object
            properties:
                samlConnection:
                    $ref: '#/components/schemas/SAMLConnection'
        GetSCIMAPIKeyResponse:
            type: object
            properties:
                scimApiKey:
                    $ref: '#/components/schemas/SCIMAPIKey'
        GetUserInviteResponse:
            type: object
            properties:
                userInvite:
                    $ref: '#/components/schemas/UserInvite'
        GetUserResponse:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/User'
        GetUserRoleAssignmentResponse:
            type: object
            properties:
                userRoleAssignment:
                    $ref: '#/components/schemas/UserRoleAssignment'
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        ListAPIKeyRoleAssignmentsResponse:
            type: object
            properties:
                apiKeyRoleAssignments:
                    type: array
                    items:
                        $ref: '#/components/schemas/APIKeyRoleAssignment'
                nextPageToken:
                    type: string
        ListAPIKeysResponse:
            type: object
            properties:
                apiKeys:
                    type: array
                    items:
                        $ref: '#/components/schemas/APIKey'
                nextPageToken:
                    type: string
        ListAuditLogEventsResponse:
            type: object
            properties:
                auditLogEvents:
                    type: array
                    items:
                        $ref: '#/components/schemas/AuditLogEvent'
                nextPageToken:
                    type: string
        ListMyPasskeysResponse:
            type: object
            properties:
                passkeys:
                    type: array
                    items:
                        $ref: '#/components/schemas/Passkey'
                nextPageToken:
                    type: string
        ListRolesResponse:
            type: object
            properties:
                roles:
                    type: array
                    items:
                        $ref: '#/components/schemas/Role'
                nextPageToken:
                    type: string
        ListSAMLConnectionsResponse:
            type: object
            properties:
                samlConnections:
                    type: array
                    items:
                        $ref: '#/components/schemas/SAMLConnection'
                nextPageToken:
                    type: string
        ListSCIMAPIKeysResponse:
            type: object
            properties:
                scimApiKeys:
                    type: array
                    items:
                        $ref: '#/components/schemas/SCIMAPIKey'
                nextPageToken:
                    type: string
        ListSwitchableOrganizationsResponse:
            type: object
            properties:
                switchableOrganizations:
                    type: array
                    items:
                        $ref: '#/components/schemas/SwitchableOrganization'
        ListUserInvitesResponse:
            type: object
            properties:
                userInvites:
                    type: array
                    items:
                        $ref: '#/components/schemas/UserInvite'
                nextPageToken:
                    type: string
        ListUserRoleAssignmentsResponse:
            type: object
            properties:
                userRoleAssignments:
                    type: array
                    items:
                        $ref: '#/components/schemas/UserRoleAssignment'
                nextPageToken:
                    type: string
        ListUsersResponse:
            type: object
            properties:
                users:
                    type: array
                    items:
                        $ref: '#/components/schemas/User'
                nextPageToken:
                    type: string
        LogoutRequest:
            type: object
            properties: {}
        LogoutResponse:
            type: object
            properties: {}
        Organization:
            type: object
            properties:
                id:
                    type: string
                displayName:
                    type: string
                createTime:
                    type: string
                    format: date-time
                updateTime:
                    type: string
                    format: date-time
                logInWithGoogle:
                    type: boolean
                logInWithMicrosoft:
                    type: boolean
                logInWithGithub:
                    type: boolean
                logInWithEmail:
                    type: boolean
                logInWithPassword:
                    type: boolean
                logInWithSaml:
                    type: boolean
                logInWithAuthenticatorApp:
                    type: boolean
                logInWithPasskey:
                    type: boolean
                requireMfa:
                    type: boolean
                googleHostedDomains:
                    type: array
                    items:
                        type: string
                microsoftTenantIds:
                    type: array
                    items:
                        type: string
                samlEnabled:
                    type: boolean
                scimEnabled:
                    type: boolean
                customRolesEnabled:
                    type: boolean
                apiKeysEnabled:
                    type: boolean
        OrganizationGoogleHostedDomains:
            type: object
            properties:
                googleHostedDomains:
                    type: array
                    items:
                        type: string
        OrganizationMicrosoftTenantIDs:
            type: object
            properties:
                microsoftTenantIds:
                    type: array
                    items:
                        type: string
        Passkey:
            type: object
            properties:
                id:
                    type: string
                userId:
                    type: string
                createTime:
                    type: string
                    format: date-time
                updateTime:
                    type: string
                    format: date-time
                disabled:
                    type: boolean
                credentialId:
                    type: string
                    format: bytes
                publicKeyPkix:
                    type: string
                aaguid:
                    type: string
                rpId:
                    type: string
        Project:
            type: object
            properties:
                id:
                    type: string
                displayName:
                    type: string
                createTime:
                    type: string
                    format: date-time
                updateTime:
                    type: string
                    format: date-time
                logInWithGoogle:
                    type: boolean
                logInWithMicrosoft:
                    type: boolean
                logInWithGithub:
                    type: boolean
                logInWithEmail:
                    type: boolean
                logInWithPassword:
                    type: boolean
                logInWithSaml:
                    type: boolean
                logInWithAuthenticatorApp:
                    type: boolean
                logInWithPasskey:
                    type: boolean
                vaultDomain:
                    type: string
                apiKeysEnabled:
                    type: boolean
                apiKeySecretTokenPrefix:
                    type: string
                auditLogsEnabled:
                    type: boolean
        RefreshRequest:
            type: object
            properties:
                refreshToken:
                    type: string
        RefreshResponse:
            type: object
            properties:
                accessToken:
                    type: string
        RegisterAuthenticatorAppRequest:
            type: object
            properties:
                totpCode:
                    type: string
        RegisterAuthenticatorAppResponse:
            type: object
            properties:
                recoveryCodes:
                    type: array
                    items:
                        type: string
        RegisterPasskeyRequest:
            type: object
            properties:
                attestationObject:
                    type: string
                rpId:
                    type: string
        RegisterPasskeyResponse:
            type: object
            properties:
                passkey:
                    $ref: '#/components/schemas/Passkey'
        RevokeAPIKeyResponse:
            type: object
            properties: {}
        RevokeSCIMAPIKeyResponse:
            type: object
            properties:
                scimApiKey:
                    $ref: '#/components/schemas/SCIMAPIKey'
        Role:
            type: object
            properties:
                id:
                    type: string
                    description: The Role ID. Starts with `role_...`.
                organizationId:
                    type: string
                    description: The Organization this Role belongs to, if any.
                createTime:
                    type: string
                    description: When the Role was created.
                    format: date-time
                updateTime:
                    type: string
                    description: When the Role was last updated.
                    format: date-time
                displayName:
                    type: string
                    description: A human-readable display name for this Role.
                description:
                    type: string
                    description: A human-readable description of the Role.
                actions:
                    type: array
                    items:
                        type: string
                    description: The names of the Actions associated with this Role.
            description: Role represents a logical grouping of permissions that Users may have.
        SAMLConnection:
            type: object
            properties:
                id:
                    type: string
                createTime:
                    type: string
                    format: date-time
                updateTime:
                    type: string
                    format: date-time
                primary:
                    type: boolean
                spAcsUrl:
                    type: string
                spEntityId:
                    type: string
                idpRedirectUrl:
                    type: string
                idpX509Certificate:
                    type: string
                idpEntityId:
                    type: string
        SCIMAPIKey:
            type: object
            properties:
                id:
                    type: string
                displayName:
                    type: string
                createTime:
                    type: string
                    format: date-time
                updateTime:
                    type: string
                    format: date-time
                secretToken:
                    type: string
                revoked:
                    type: boolean
        SetPasswordRequest:
            type: object
            properties:
                password:
                    type: string
                    description: The the user's new password.
        SetPasswordResponse:
            type: object
            properties: {}
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        SwitchableOrganization:
            type: object
            properties:
                id:
                    type: string
                displayName:
                    type: string
        UpdateAPIKeyRequest:
            type: object
            properties:
                id:
                    type: string
                apiKey:
                    $ref: '#/components/schemas/APIKey'
        UpdateAPIKeyResponse:
            type: object
            properties:
                id:
                    type: string
                apiKey:
                    $ref: '#/components/schemas/APIKey'
        UpdateOrganizationGoogleHostedDomainsResponse:
            type: object
            properties:
                organizationGoogleHostedDomains:
                    $ref: '#/components/schemas/OrganizationGoogleHostedDomains'
        UpdateOrganizationMicrosoftTenantIDsResponse:
            type: object
            properties:
                organizationMicrosoftTenantIds:
                    $ref: '#/components/schemas/OrganizationMicrosoftTenantIDs'
        UpdateOrganizationResponse:
            type: object
            properties:
                organization:
                    $ref: '#/components/schemas/Organization'
        UpdateRoleResponse:
            type: object
            properties:
                role:
                    $ref: '#/components/schemas/Role'
        UpdateSAMLConnectionResponse:
            type: object
            properties:
                samlConnection:
                    $ref: '#/components/schemas/SAMLConnection'
        UpdateSCIMAPIKeyResponse:
            type: object
            properties:
                scimApiKey:
                    $ref: '#/components/schemas/SCIMAPIKey'
        UpdateUserResponse:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/User'
        User:
            type: object
            properties:
                id:
                    type: string
                email:
                    type: string
                createTime:
                    type: string
                    format: date-time
                updateTime:
                    type: string
                    format: date-time
                owner:
                    type: boolean
                googleUserId:
                    type: string
                microsoftUserId:
                    type: string
                githubUserId:
                    type: string
                hasAuthenticatorApp:
                    type: boolean
                displayName:
                    type: string
                profilePictureUrl:
                    type: string
        UserInvite:
            type: object
            properties:
                id:
                    type: string
                createTime:
                    type: string
                    format: date-time
                updateTime:
                    type: string
                    format: date-time
                email:
                    type: string
                owner:
                    type: boolean
        UserRoleAssignment:
            type: object
            properties:
                id:
                    type: string
                    description: The User Role Assignment ID. Starts with `user_role_assignment_...`.
                userId:
                    type: string
                    description: The User ID.
                roleId:
                    type: string
                    description: The Role ID.
            description: UserRoleAssignment represents a User being assigned to a Role.
        WhoamiResponse:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/User'
tags:
    - name: FrontendService
