# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: FrontendService API
    version: 0.0.1
paths:
    /frontend/v1/access-token:
        post:
            tags:
                - FrontendService
            operationId: FrontendService_GetAccessToken
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/GetAccessTokenRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetAccessTokenResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /frontend/v1/organizations:
        get:
            tags:
                - FrontendService
            description: Gets a list of organizations.
            operationId: FrontendService_ListOrganizations
            parameters:
                - name: projectId
                  in: query
                  description: The ID of the project to use for filtering.
                  schema:
                    type: string
                - name: email
                  in: query
                  description: The email address to use for filtering.
                  schema:
                    type: string
                - name: pageToken
                  in: query
                  description: The page token to use for pagination.
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListOrganizationsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /frontend/v1/project:
        get:
            tags:
                - FrontendService
            operationId: FrontendService_GetProject
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetProjectResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /frontend/v1/users:
        get:
            tags:
                - FrontendService
            description: Gets a list of users.
            operationId: FrontendService_ListUsers
            parameters:
                - name: organizationId
                  in: query
                  description: The ID of the organization to use for filtering.
                  schema:
                    type: string
                - name: pageToken
                  in: query
                  description: The page token to use for pagination.
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUsersResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - FrontendService
            description: Creates a user.
            operationId: FrontendService_CreateUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/User'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /frontend/v1/users/{id}:
        get:
            tags:
                - FrontendService
            description: Gets a user.
            operationId: FrontendService_GetUser
            parameters:
                - name: id
                  in: path
                  description: The ID of the user to get.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - FrontendService
            description: Updates a user.
            operationId: FrontendService_UpdateUser
            parameters:
                - name: id
                  in: path
                  description: The ID of the user to update.
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/User'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /frontend/v1/whoami:
        get:
            tags:
                - FrontendService
            description: Who am I?
            operationId: FrontendService_WhoAmI
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/WhoAmIResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        CreateUserResponse:
            type: object
            properties:
                user:
                    allOf:
                        - $ref: '#/components/schemas/User'
                    description: The user created by the CreateUser request.
        GetAccessTokenRequest:
            type: object
            properties:
                refreshToken:
                    type: string
        GetAccessTokenResponse:
            type: object
            properties:
                accessToken:
                    type: string
        GetProjectResponse:
            type: object
            properties:
                project:
                    $ref: '#/components/schemas/Project'
        GetUserResponse:
            type: object
            properties:
                user:
                    allOf:
                        - $ref: '#/components/schemas/User'
                    description: The user returned by the GetUser request.
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        ListOrganizationsResponse:
            type: object
            properties:
                organizations:
                    type: array
                    items:
                        $ref: '#/components/schemas/Organization'
                    description: The organizations returned by the ListOrganizations request.
                nextPageToken:
                    type: string
                    description: The next page token to use for pagination.
        ListUsersResponse:
            type: object
            properties:
                users:
                    type: array
                    items:
                        $ref: '#/components/schemas/User'
                    description: The users returned by the ListUsers request.
                nextPageToken:
                    type: string
                    description: The next page token to use for pagination.
        Organization:
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier for this organization.
                projectId:
                    type: string
                    description: The project this organization belongs to.
                displayName:
                    type: string
                    description: An optional human-friendly name for this organization.
                overrideLogInWithPasswordEnabled:
                    type: boolean
                    description: Override setting for whether login with password is enabled.
                overrideLogInWithGoogleEnabled:
                    type: boolean
                    description: Override setting for whether login with Google is enabled.
                overrideLogInWithMicrosoftEnabled:
                    type: boolean
                    description: Override setting for whether login with Microsoft is enabled.
                googleHostedDomain:
                    type: string
                    description: Google hosted domain.
                microsoftTenantId:
                    type: string
                    description: The tenant ID for Microsoft auth.
        Project:
            type: object
            properties:
                id:
                    type: string
                displayName:
                    type: string
                logInWithPasswordEnabled:
                    type: boolean
                logInWithGoogleEnabled:
                    type: boolean
                logInWithMicrosoftEnabled:
                    type: boolean
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        UpdateUserResponse:
            type: object
            properties:
                user:
                    allOf:
                        - $ref: '#/components/schemas/User'
                    description: The user updated by the UpdateUser request.
        User:
            type: object
            properties:
                id:
                    type: string
                    description: Unique identifier for this user.
                organizationId:
                    type: string
                    description: The organization this user belongs to.
                unverifiedEmail:
                    type: string
                    description: The user's email (pending verification).
                verifiedEmail:
                    type: string
                    description: The user's email (after verification).
                passwordBcrypt:
                    type: string
                    description: The hash of the user's password.
                googleUserId:
                    type: string
                    description: The user's Google User ID.
                microsoftUserId:
                    type: string
                    description: The user's Microsoft User ID.
        WhoAmIResponse:
            type: object
            properties:
                id:
                    type: string
                    description: The user ID that is currently authenticated.
                email:
                    type: string
                    description: The email address for the user.
                organizationId:
                    type: string
                    description: The organization ID for the user.
                organization:
                    allOf:
                        - $ref: '#/components/schemas/Organization'
                    description: The organization for the user.
tags:
    - name: FrontendService
