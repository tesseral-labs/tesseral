# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: FrontendService API
    version: 0.0.1
paths:
    /frontend/v1/logout:
        post:
            tags:
                - FrontendService
            operationId: FrontendService_Logout
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LogoutRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LogoutResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /frontend/v1/me:
        get:
            tags:
                - FrontendService
            operationId: FrontendService_Whoami
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/WhoamiResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /frontend/v1/me/authenticator-app/options:
        post:
            tags:
                - FrontendService
            operationId: FrontendService_GetAuthenticatorAppOptions
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetAuthenticatorAppOptionsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /frontend/v1/me/authenticator-app/register:
        post:
            tags:
                - FrontendService
            operationId: FrontendService_RegisterAuthenticatorApp
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RegisterAuthenticatorAppRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RegisterAuthenticatorAppResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /frontend/v1/me/passkeys:
        get:
            tags:
                - FrontendService
            operationId: FrontendService_ListMyPasskeys
            parameters:
                - name: pageToken
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListMyPasskeysResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /frontend/v1/me/passkeys/options:
        post:
            tags:
                - FrontendService
            operationId: FrontendService_GetPasskeyOptions
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetPasskeyOptionsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /frontend/v1/me/passkeys/register:
        post:
            tags:
                - FrontendService
            operationId: FrontendService_RegisterPasskey
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RegisterPasskeyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RegisterPasskeyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /frontend/v1/me/passkeys/{id}:
        delete:
            tags:
                - FrontendService
            operationId: FrontendService_DeleteMyPasskey
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteMyPasskeyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /frontend/v1/organization:
        get:
            tags:
                - FrontendService
            operationId: FrontendService_GetOrganization
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetOrganizationResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - FrontendService
            operationId: FrontendService_UpdateOrganization
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Organization'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateOrganizationResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /frontend/v1/organizations:
        get:
            tags:
                - FrontendService
            description: Gets a list of organizations.
            operationId: FrontendService_ListOrganizations
            parameters:
                - name: projectId
                  in: query
                  description: The ID of the project to use for filtering.
                  schema:
                    type: string
                - name: email
                  in: query
                  description: The email address to use for filtering.
                  schema:
                    type: string
                - name: pageToken
                  in: query
                  description: The page token to use for pagination.
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListOrganizationsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /frontend/v1/project:
        get:
            tags:
                - FrontendService
            operationId: FrontendService_GetProject
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetProjectResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /frontend/v1/refresh:
        post:
            tags:
                - FrontendService
            operationId: FrontendService_Refresh
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RefreshRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RefreshResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /frontend/v1/saml-connections:
        get:
            tags:
                - FrontendService
            operationId: FrontendService_ListSAMLConnections
            parameters:
                - name: pageToken
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListSAMLConnectionsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - FrontendService
            operationId: FrontendService_CreateSAMLConnection
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SAMLConnection'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateSAMLConnectionResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /frontend/v1/saml-connections/{id}:
        get:
            tags:
                - FrontendService
            operationId: FrontendService_GetSAMLConnection
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetSAMLConnectionResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - FrontendService
            operationId: FrontendService_DeleteSAMLConnection
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteSAMLConnectionResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - FrontendService
            operationId: FrontendService_UpdateSAMLConnection
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SAMLConnection'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateSAMLConnectionResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /frontend/v1/scim-api-keys:
        get:
            tags:
                - FrontendService
            operationId: FrontendService_ListSCIMAPIKeys
            parameters:
                - name: pageToken
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListSCIMAPIKeysResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - FrontendService
            operationId: FrontendService_CreateSCIMAPIKey
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SCIMAPIKey'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateSCIMAPIKeyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /frontend/v1/scim-api-keys/{id}:
        get:
            tags:
                - FrontendService
            operationId: FrontendService_GetSCIMAPIKey
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetSCIMAPIKeyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - FrontendService
            operationId: FrontendService_DeleteSCIMAPIKey
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteSCIMAPIKeyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - FrontendService
            operationId: FrontendService_UpdateSCIMAPIKey
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SCIMAPIKey'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateSCIMAPIKeyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /frontend/v1/scim-api-keys/{id}/revoke:
        post:
            tags:
                - FrontendService
            operationId: FrontendService_RevokeSCIMAPIKey
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RevokeSCIMAPIKeyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /frontend/v1/set-user-password:
        post:
            tags:
                - FrontendService
            description: Sets a user's password.
            operationId: FrontendService_SetPassword
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SetPasswordRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SetPasswordResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /frontend/v1/user-invites:
        get:
            tags:
                - FrontendService
            operationId: FrontendService_ListUserInvites
            parameters:
                - name: pageToken
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUserInvitesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - FrontendService
            operationId: FrontendService_CreateUserInvite
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UserInvite'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateUserInviteResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /frontend/v1/user-invites/{id}:
        get:
            tags:
                - FrontendService
            operationId: FrontendService_GetUserInvite
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetUserInviteResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - FrontendService
            operationId: FrontendService_DeleteUserInvite
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteUserInviteResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /frontend/v1/users:
        get:
            tags:
                - FrontendService
            operationId: FrontendService_ListUsers
            parameters:
                - name: organizationId
                  in: query
                  schema:
                    type: string
                - name: pageToken
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUsersResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /frontend/v1/users/{id}:
        get:
            tags:
                - FrontendService
            operationId: FrontendService_GetUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        patch:
            tags:
                - FrontendService
            operationId: FrontendService_UpdateUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/User'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateUserResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        CreateSAMLConnectionResponse:
            type: object
            properties:
                samlConnection:
                    $ref: '#/components/schemas/SAMLConnection'
        CreateSCIMAPIKeyResponse:
            type: object
            properties:
                scimApiKey:
                    $ref: '#/components/schemas/SCIMAPIKey'
        CreateUserInviteResponse:
            type: object
            properties:
                userInvite:
                    $ref: '#/components/schemas/UserInvite'
        DeleteMyPasskeyResponse:
            type: object
            properties: {}
        DeleteSAMLConnectionResponse:
            type: object
            properties: {}
        DeleteSCIMAPIKeyResponse:
            type: object
            properties: {}
        DeleteUserInviteResponse:
            type: object
            properties: {}
        GetAuthenticatorAppOptionsResponse:
            type: object
            properties:
                otpauthUri:
                    type: string
        GetOrganizationResponse:
            type: object
            properties:
                organization:
                    $ref: '#/components/schemas/Organization'
        GetPasskeyOptionsResponse:
            type: object
            properties:
                rpId:
                    type: string
                rpName:
                    type: string
                userId:
                    type: string
                userDisplayName:
                    type: string
        GetProjectResponse:
            type: object
            properties:
                project:
                    $ref: '#/components/schemas/Project'
        GetSAMLConnectionResponse:
            type: object
            properties:
                samlConnection:
                    $ref: '#/components/schemas/SAMLConnection'
        GetSCIMAPIKeyResponse:
            type: object
            properties:
                scimApiKey:
                    $ref: '#/components/schemas/SCIMAPIKey'
        GetUserInviteResponse:
            type: object
            properties:
                userInvite:
                    $ref: '#/components/schemas/UserInvite'
        GetUserResponse:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/User'
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        ListMyPasskeysResponse:
            type: object
            properties:
                passkeys:
                    type: array
                    items:
                        $ref: '#/components/schemas/Passkey'
                nextPageToken:
                    type: string
        ListOrganizationsResponse:
            type: object
            properties:
                organizations:
                    type: array
                    items:
                        $ref: '#/components/schemas/Organization'
                    description: The organizations returned by the ListOrganizations request.
                nextPageToken:
                    type: string
                    description: The next page token to use for pagination.
        ListSAMLConnectionsResponse:
            type: object
            properties:
                samlConnections:
                    type: array
                    items:
                        $ref: '#/components/schemas/SAMLConnection'
                nextPageToken:
                    type: string
        ListSCIMAPIKeysResponse:
            type: object
            properties:
                scimApiKeys:
                    type: array
                    items:
                        $ref: '#/components/schemas/SCIMAPIKey'
                nextPageToken:
                    type: string
        ListUserInvitesResponse:
            type: object
            properties:
                userInvites:
                    type: array
                    items:
                        $ref: '#/components/schemas/UserInvite'
                nextPageToken:
                    type: string
        ListUsersResponse:
            type: object
            properties:
                users:
                    type: array
                    items:
                        $ref: '#/components/schemas/User'
                nextPageToken:
                    type: string
        LogoutRequest:
            type: object
            properties: {}
        LogoutResponse:
            type: object
            properties: {}
        Organization:
            type: object
            properties:
                id:
                    type: string
                displayName:
                    type: string
                createTime:
                    type: string
                    format: date-time
                updateTime:
                    type: string
                    format: date-time
                logInWithGoogle:
                    type: boolean
                logInWithMicrosoft:
                    type: boolean
                logInWithEmail:
                    type: boolean
                logInWithPassword:
                    type: boolean
                logInWithSaml:
                    type: boolean
                logInWithAuthenticatorApp:
                    type: boolean
                logInWithPasskey:
                    type: boolean
                requireMfa:
                    type: boolean
                googleHostedDomains:
                    type: array
                    items:
                        type: string
                microsoftTenantIds:
                    type: array
                    items:
                        type: string
                samlEnabled:
                    type: boolean
        Passkey:
            type: object
            properties:
                id:
                    type: string
                userId:
                    type: string
                createTime:
                    type: string
                    format: date-time
                updateTime:
                    type: string
                    format: date-time
                credentialId:
                    type: string
                    format: bytes
                publicKeyPkix:
                    type: string
                aaguid:
                    type: string
        Project:
            type: object
            properties:
                id:
                    type: string
                displayName:
                    type: string
                createTime:
                    type: string
                    format: date-time
                updateTime:
                    type: string
                    format: date-time
                logInWithGoogle:
                    type: boolean
                logInWithMicrosoft:
                    type: boolean
                logInWithEmail:
                    type: boolean
                logInWithPassword:
                    type: boolean
                logInWithSaml:
                    type: boolean
                logInWithAuthenticatorApp:
                    type: boolean
                logInWithPasskey:
                    type: boolean
                authDomain:
                    type: string
        RefreshRequest:
            type: object
            properties:
                refreshToken:
                    type: string
        RefreshResponse:
            type: object
            properties:
                accessToken:
                    type: string
        RegisterAuthenticatorAppRequest:
            type: object
            properties:
                totpCode:
                    type: string
        RegisterAuthenticatorAppResponse:
            type: object
            properties:
                recoveryCodes:
                    type: array
                    items:
                        type: string
        RegisterPasskeyRequest:
            type: object
            properties:
                attestationObject:
                    type: string
        RegisterPasskeyResponse:
            type: object
            properties:
                passkey:
                    $ref: '#/components/schemas/Passkey'
        RevokeSCIMAPIKeyResponse:
            type: object
            properties:
                scimApiKey:
                    $ref: '#/components/schemas/SCIMAPIKey'
        SAMLConnection:
            type: object
            properties:
                id:
                    type: string
                createTime:
                    type: string
                    format: date-time
                updateTime:
                    type: string
                    format: date-time
                primary:
                    type: boolean
                spAcsUrl:
                    type: string
                spEntityId:
                    type: string
                idpRedirectUrl:
                    type: string
                idpX509Certificate:
                    type: string
                idpEntityId:
                    type: string
        SCIMAPIKey:
            type: object
            properties:
                id:
                    type: string
                displayName:
                    type: string
                createTime:
                    type: string
                    format: date-time
                updateTime:
                    type: string
                    format: date-time
                secretToken:
                    type: string
                revoked:
                    type: boolean
        SetPasswordRequest:
            type: object
            properties:
                password:
                    type: string
                    description: The the user's new password.
        SetPasswordResponse:
            type: object
            properties: {}
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        UpdateOrganizationResponse:
            type: object
            properties:
                organization:
                    $ref: '#/components/schemas/Organization'
        UpdateSAMLConnectionResponse:
            type: object
            properties:
                samlConnection:
                    $ref: '#/components/schemas/SAMLConnection'
        UpdateSCIMAPIKeyResponse:
            type: object
            properties:
                scimApiKey:
                    $ref: '#/components/schemas/SCIMAPIKey'
        UpdateUserResponse:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/User'
        User:
            type: object
            properties:
                id:
                    type: string
                email:
                    type: string
                createTime:
                    type: string
                    format: date-time
                updateTime:
                    type: string
                    format: date-time
                owner:
                    type: boolean
                googleUserId:
                    type: string
                microsoftUserId:
                    type: string
                hasAuthenticatorApp:
                    type: boolean
        UserInvite:
            type: object
            properties:
                id:
                    type: string
                createTime:
                    type: string
                    format: date-time
                updateTime:
                    type: string
                    format: date-time
                email:
                    type: string
                owner:
                    type: boolean
        WhoamiResponse:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/User'
tags:
    - name: FrontendService
