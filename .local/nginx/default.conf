server {
  server_name api.tesseral.example.com;

  listen 443 ssl;
  ssl_certificate /etc/nginx/conf.d/api.tesseral.example.com.pem;
  ssl_certificate_key /etc/nginx/conf.d/api.tesseral.example.com-key.pem;

  resolver 127.0.0.11 valid=1s;

  location / {
    set $upstream http://api:3001/api/backend;
    proxy_pass $upstream$request_uri;
  }
}

server {
  server_name config.tesseral.example.com;

  listen 443 ssl;
  ssl_certificate /etc/nginx/conf.d/config.tesseral.example.com.pem;
  ssl_certificate_key /etc/nginx/conf.d/config.tesseral.example.com-key.pem;

  resolver 127.0.0.11 valid=1s;

  location / {
    set $upstream http://api:3001/api/config-api;
    proxy_pass $upstream$request_uri;
  }
}

server {
  server_name console.tesseral.example.com;

  listen 443 ssl;
  ssl_certificate /etc/nginx/conf.d/console.tesseral.example.com.pem;
  ssl_certificate_key /etc/nginx/conf.d/console.tesseral.example.com-key.pem;

  resolver 127.0.0.11 valid=1s;

  location / {
    set $upstream http://console:3000;
    proxy_pass $upstream;
  }
}

server {
  server_name tesseralusercontent.example.com;

  listen 443 ssl;
  ssl_certificate /etc/nginx/conf.d/tesseralusercontent.example.com.pem;
  ssl_certificate_key /etc/nginx/conf.d/tesseralusercontent.example.com-key.pem;

  resolver 127.0.0.11 valid=1s;

  location / {
    set $upstream http://s3:9090;
    proxy_pass $upstream;
  }
}

server {
  server_name vault.console.tesseral.example.com;

  listen 443 ssl;
  ssl_certificate /etc/nginx/conf.d/vault.console.tesseral.example.com.pem;
  ssl_certificate_key /etc/nginx/conf.d/vault.console.tesseral.example.com-key.pem;

  include /etc/nginx/conf.d/includes/vault.conf;
}

server {
  server_name *.tesseral.example.app;

  listen 443 ssl;
  ssl_certificate /etc/nginx/conf.d/wildcard.tesseral.example.app.pem;
  ssl_certificate_key /etc/nginx/conf.d/wildcard.tesseral.example.app-key.pem;

  include /etc/nginx/conf.d/includes/vault.conf;
}

server {
  server_name vault.app.company1.example.com;

  listen 443 ssl;
  ssl_certificate /etc/nginx/conf.d/vault.app.company1.example.com.pem;
  ssl_certificate_key /etc/nginx/conf.d/vault.app.company1.example.com-key.pem;

  include /etc/nginx/conf.d/includes/vault.conf;
}

server {
  server_name app.company1.example.com;

  listen 443 ssl;
  ssl_certificate /etc/nginx/conf.d/app.company1.example.com.pem;
  ssl_certificate_key /etc/nginx/conf.d/app.company1.example.com-key.pem;

  location / {
    default_type text/html;
    return 200 "";
  }
}

server {
  server_name vault.company2.example.com;

  listen 443 ssl;
  ssl_certificate /etc/nginx/conf.d/vault.company2.example.com.pem;
  ssl_certificate_key /etc/nginx/conf.d/vault.company2.example.com-key.pem;

  include /etc/nginx/conf.d/includes/vault.conf;
}

server {
  server_name company2.example.com;

  listen 443 ssl;
  ssl_certificate /etc/nginx/conf.d/company2.example.com.pem;
  ssl_certificate_key /etc/nginx/conf.d/company2.example.com-key.pem;

  location / {
    default_type text/html;
    return 200 "";
  }
}

server {
  server_name app.company3.example.com;

  listen 443 ssl;
  ssl_certificate /etc/nginx/conf.d/app.company3.example.com.pem;
  ssl_certificate_key /etc/nginx/conf.d/app.company3.example.com-key.pem;

  location / {
    default_type text/html;
    return 200 "";
  }
}
